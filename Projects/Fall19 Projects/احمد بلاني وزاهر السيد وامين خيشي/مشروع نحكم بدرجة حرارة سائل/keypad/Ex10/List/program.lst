
AVRASM ver. 2.1.30  E:\„Ã·œ ÃœÌœ\„Ã·œ ÃœÌœ (2)\Ex10\List\program.asm Wed Dec 04 17:59:44 2019

E:\„Ã·œ ÃœÌœ\„Ã·œ ÃœÌœ (2)\Ex10\List\program.asm(1072): warning: Register r5 already defined by the .DEF directive
E:\„Ã·œ ÃœÌœ\„Ã·œ ÃœÌœ (2)\Ex10\List\program.asm(1073): warning: Register r4 already defined by the .DEF directive
E:\„Ã·œ ÃœÌœ\„Ã·œ ÃœÌœ (2)\Ex10\List\program.asm(1074): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 1.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0043 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 6554
00002b 706d
00002c 203d
00002d 2020      	.DB  0x54,0x65,0x6D,0x70,0x3D,0x20,0x20,0x20
00002e 6420
00002f 6765
000030 6572
000031 0065      	.DB  0x20,0x64,0x65,0x67,0x72,0x65,0x65,0x0
                 _0x2000060:
E:\„Ã·œ ÃœÌœ\„Ã·œ ÃœÌœ (2)\Ex10\List\program.asm(1109): warning: .cseg .db misalignment - padding zero byte
000032 0001      	.DB  0x1
                 _0x2000000:
000033 4e2d
000034 4e41
000035 4900
000036 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\„Ã·œ ÃœÌœ\„Ã·œ ÃœÌœ (2)\Ex10\List\program.asm(1112): warning: .cseg .db misalignment - padding zero byte
000037 0000      	.DB  0x0
                 _0x2020003:
000038 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000039 0010      	.DW  0x10
00003a 0160      	.DW  _0xB
00003b 0054      	.DW  _0x0*2
                 
00003c 0001      	.DW  0x01
00003d 0177      	.DW  __seed_G100
00003e 0064      	.DW  _0x2000060*2
                 
00003f 0002      	.DW  0x02
000040 017b      	.DW  __base_y_G101
000041 0070      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
000042 0000      	.DW  0
                 
                 __RESET:
000043 94f8      	CLI
000044 27ee      	CLR  R30
000045 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000046 e0f1      	LDI  R31,1
000047 bffb      	OUT  GICR,R31
000048 bfeb      	OUT  GICR,R30
000049 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00004a e1f8      	LDI  R31,0x18
00004b bdf1      	OUT  WDTCR,R31
00004c bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00004d e08d      	LDI  R24,(14-2)+1
00004e e0a2      	LDI  R26,2
00004f 27bb      	CLR  R27
                 __CLEAR_REG:
000050 93ed      	ST   X+,R30
000051 958a      	DEC  R24
000052 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000053 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000054 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000055 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000056 93ed      	ST   X+,R30
000057 9701      	SBIW R24,1
000058 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000059 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005a e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005b 9185      	LPM  R24,Z+
00005c 9195      	LPM  R25,Z+
00005d 9700      	SBIW R24,0
00005e f061      	BREQ __GLOBAL_INI_END
00005f 91a5      	LPM  R26,Z+
000060 91b5      	LPM  R27,Z+
000061 9005      	LPM  R0,Z+
000062 9015      	LPM  R1,Z+
000063 01bf      	MOVW R22,R30
000064 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000065 9005      	LPM  R0,Z+
000066 920d      	ST   X+,R0
000067 9701      	SBIW R24,1
000068 f7e1      	BRNE __GLOBAL_INI_LOOP
000069 01fb      	MOVW R30,R22
00006a cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006b e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006c bfed      	OUT  SPL,R30
00006d e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006f e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000070 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000071 940c 0073 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include <lcd.h>
                 ;#asm
                 .equ __lcd_port=0x15 ;PORTC
                 ; 0000 0007 #endasm
                 ;float  i;
                 ;char s[3];
                 ;void main(void)
                 ; 0000 000B {
                 
                 	.CSEG
                 _main:
                 ; 0000 000C // Select ADC0 channel
                 ; 0000 000D //ADC Voltage Reference: AREF pin
                 ; 0000 000E ADMUX=0B00000000;
000073 e0e0      	LDI  R30,LOW(0)
000074 b9e7      	OUT  0x7,R30
                 ; 0000 000F // ADC Clock frequency: 125 kHz
                 ; 0000 0010 // Single Conversion mode
                 ; 0000 0011 ADCSRA=0B10000110;
000075 e8e6      	LDI  R30,LOW(134)
000076 b9e6      	OUT  0x6,R30
                 ; 0000 0012 lcd_init(16);
000077 e1a0      	LDI  R26,LOW(16)
000078 940e 027e 	CALL _lcd_init
                 ; 0000 0013 lcd_clear();
00007a 940e 022f 	CALL _lcd_clear
                 ; 0000 0014 while (1)
                 _0x3:
                 ; 0000 0015   {
                 ; 0000 0016 ADCSRA.6=1;   // Start the AD conversion
00007c 9a36      	SBI  0x6,6
                 ; 0000 0017 while (ADCSRA.4==0){}  // Wait for the AD conversion to complete
                 _0x8:
00007d 9b34      	SBIS 0x6,4
00007e cffe      	RJMP _0x8
                 ; 0000 0018     i=ADCW*0.09775;
00007f b1e4      	IN   R30,0x4
000080 b1f5      	IN   R31,0x4+1
000081 2766      	CLR  R22
000082 2777      	CLR  R23
000083 940e 0382 	CALL __CDF1
                +
000085 e2a7     +LDI R26 , LOW ( 0x3DC83127 )
000086 e3b1     +LDI R27 , HIGH ( 0x3DC83127 )
000087 ec88     +LDI R24 , BYTE3 ( 0x3DC83127 )
000088 e39d     +LDI R25 , BYTE4 ( 0x3DC83127 )
                 	__GETD2N 0x3DC83127
000089 940e 040c 	CALL __MULF12
00008b 93e0 0170 	STS  _i,R30
00008d 93f0 0171 	STS  _i+1,R31
00008f 9360 0172 	STS  _i+2,R22
000091 9370 0173 	STS  _i+3,R23
                 ; 0000 0019     ftoa(i,0,s);
000093 940e 04db 	CALL __PUTPARD1
000095 e0e0      	LDI  R30,LOW(0)
000096 93ea      	ST   -Y,R30
000097 e7a4      	LDI  R26,LOW(_s)
000098 e0b1      	LDI  R27,HIGH(_s)
000099 940e 00b3 	CALL _ftoa
                 ; 0000 001A     lcd_gotoxy(0,0);
00009b e0e0      	LDI  R30,LOW(0)
00009c 93ea      	ST   -Y,R30
00009d e0a0      	LDI  R26,LOW(0)
00009e 940e 021f 	CALL _lcd_gotoxy
                 ; 0000 001B     lcd_puts("Temp=    degree");
                +
0000a0 e6a0     +LDI R26 , LOW ( _0xB + ( 0 ) )
0000a1 e0b1     +LDI R27 , HIGH ( _0xB + ( 0 ) )
                 	__POINTW2MN _0xB,0
0000a2 940e 025c 	CALL _lcd_puts
                 ; 0000 001C     lcd_gotoxy(6,0);
0000a4 e0e6      	LDI  R30,LOW(6)
0000a5 93ea      	ST   -Y,R30
0000a6 e0a0      	LDI  R26,LOW(0)
0000a7 940e 021f 	CALL _lcd_gotoxy
                 ; 0000 001D     lcd_puts(s);
0000a9 e7a4      	LDI  R26,LOW(_s)
0000aa e0b1      	LDI  R27,HIGH(_s)
0000ab 940e 025c 	CALL _lcd_puts
                 ; 0000 001E     delay_ms(250);
0000ad efaa      	LDI  R26,LOW(250)
0000ae e0b0      	LDI  R27,0
0000af 940e 030c 	CALL _delay_ms
                 ; 0000 001F   };
0000b1 cfca      	RJMP _0x3
                 ; 0000 0020 }
                 _0xC:
0000b2 cfff      	RJMP _0xC
                 
                 	.DSEG
                 _0xB:
000160           	.BYTE 0x10
                 
                 	.CSEG
                 _ftoa:
0000b3 93ba      	ST   -Y,R27
0000b4 93aa      	ST   -Y,R26
0000b5 9724      	SBIW R28,4
0000b6 e0e0      	LDI  R30,LOW(0)
0000b7 83e8      	ST   Y,R30
0000b8 83e9      	STD  Y+1,R30
0000b9 83ea      	STD  Y+2,R30
0000ba e3ef      	LDI  R30,LOW(63)
0000bb 83eb      	STD  Y+3,R30
0000bc 931a      	ST   -Y,R17
0000bd 930a      	ST   -Y,R16
0000be 85eb      	LDD  R30,Y+11
0000bf 85fc      	LDD  R31,Y+11+1
0000c0 3fef      	CPI  R30,LOW(0xFFFF)
0000c1 efaf      	LDI  R26,HIGH(0xFFFF)
0000c2 07fa      	CPC  R31,R26
0000c3 f449      	BRNE _0x200000D
0000c4 81ee      	LDD  R30,Y+6
0000c5 81ff      	LDD  R31,Y+6+1
0000c6 93fa      	ST   -Y,R31
0000c7 93ea      	ST   -Y,R30
                +
0000c8 e6a6     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
0000c9 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
0000ca 940e 02ff 	CALL _strcpyf
0000cc c10e      	RJMP _0x20A0004
                 _0x200000D:
0000cd 3fef      	CPI  R30,LOW(0x7FFF)
0000ce e7af      	LDI  R26,HIGH(0x7FFF)
0000cf 07fa      	CPC  R31,R26
0000d0 f449      	BRNE _0x200000C
0000d1 81ee      	LDD  R30,Y+6
0000d2 81ff      	LDD  R31,Y+6+1
0000d3 93fa      	ST   -Y,R31
0000d4 93ea      	ST   -Y,R30
                +
0000d5 e6a7     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0000d6 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
0000d7 940e 02ff 	CALL _strcpyf
0000d9 c101      	RJMP _0x20A0004
                 _0x200000C:
0000da 85ac      	LDD  R26,Y+12
0000db 23aa      	TST  R26
0000dc f492      	BRPL _0x200000F
                +
0000dd 85e9     +LDD R30 , Y + 9
0000de 85fa     +LDD R31 , Y + 9 + 1
0000df 856b     +LDD R22 , Y + 9 + 2
0000e0 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0000e1 940e 0316 	CALL __ANEGF1
                +
0000e3 87e9     +STD Y + 9 , R30
0000e4 87fa     +STD Y + 9 + 1 , R31
0000e5 876b     +STD Y + 9 + 2 , R22
0000e6 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0000e7 81ae      	LDD  R26,Y+6
0000e8 81bf      	LDD  R27,Y+6+1
0000e9 9611      	ADIW R26,1
0000ea 83ae      	STD  Y+6,R26
0000eb 83bf      	STD  Y+6+1,R27
0000ec 9711      	SBIW R26,1
0000ed e2ed      	LDI  R30,LOW(45)
0000ee 93ec      	ST   X,R30
                 _0x200000F:
0000ef 85a8      	LDD  R26,Y+8
0000f0 30a7      	CPI  R26,LOW(0x7)
0000f1 f010      	BRLO _0x2000010
0000f2 e0e6      	LDI  R30,LOW(6)
0000f3 87e8      	STD  Y+8,R30
                 _0x2000010:
0000f4 8518      	LDD  R17,Y+8
                 _0x2000011:
0000f5 2fe1      	MOV  R30,R17
0000f6 5011      	SUBI R17,1
0000f7 30e0      	CPI  R30,0
0000f8 f079      	BREQ _0x2000013
                +
0000f9 81aa     +LDD R26 , Y + 2
0000fa 81bb     +LDD R27 , Y + 2 + 1
0000fb 818c     +LDD R24 , Y + 2 + 2
0000fc 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
0000fd eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0000fe ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0000ff ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000100 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000101 940e 040c 	CALL __MULF12
                +
000103 83ea     +STD Y + 2 , R30
000104 83fb     +STD Y + 2 + 1 , R31
000105 836c     +STD Y + 2 + 2 , R22
000106 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000107 cfed      	RJMP _0x2000011
                 _0x2000013:
                +
000108 81ea     +LDD R30 , Y + 2
000109 81fb     +LDD R31 , Y + 2 + 1
00010a 816c     +LDD R22 , Y + 2 + 2
00010b 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00010c 85a9     +LDD R26 , Y + 9
00010d 85ba     +LDD R27 , Y + 9 + 1
00010e 858b     +LDD R24 , Y + 9 + 2
00010f 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000110 940e 03bc 	CALL __ADDF12
                +
000112 87e9     +STD Y + 9 , R30
000113 87fa     +STD Y + 9 + 1 , R31
000114 876b     +STD Y + 9 + 2 , R22
000115 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000116 e010      	LDI  R17,LOW(0)
                +
000117 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000118 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000119 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00011a e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
00011b 83ea     +STD Y + 2 , R30
00011c 83fb     +STD Y + 2 + 1 , R31
00011d 836c     +STD Y + 2 + 2 , R22
00011e 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 _0x2000014:
                +
00011f 81ea     +LDD R30 , Y + 2
000120 81fb     +LDD R31 , Y + 2 + 1
000121 816c     +LDD R22 , Y + 2 + 2
000122 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000123 85a9     +LDD R26 , Y + 9
000124 85ba     +LDD R27 , Y + 9 + 1
000125 858b     +LDD R24 , Y + 9 + 2
000126 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000127 940e 049f 	CALL __CMPF12
000129 f0d8      	BRLO _0x2000016
                +
00012a 81aa     +LDD R26 , Y + 2
00012b 81bb     +LDD R27 , Y + 2 + 1
00012c 818c     +LDD R24 , Y + 2 + 2
00012d 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
00012e e0e0     +LDI R30 , LOW ( 0x41200000 )
00012f e0f0     +LDI R31 , HIGH ( 0x41200000 )
000130 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000131 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000132 940e 040c 	CALL __MULF12
                +
000134 83ea     +STD Y + 2 , R30
000135 83fb     +STD Y + 2 + 1 , R31
000136 836c     +STD Y + 2 + 2 , R22
000137 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000138 5f1f      	SUBI R17,-LOW(1)
000139 3217      	CPI  R17,39
00013a f048      	BRLO _0x2000017
00013b 81ee      	LDD  R30,Y+6
00013c 81ff      	LDD  R31,Y+6+1
00013d 93fa      	ST   -Y,R31
00013e 93ea      	ST   -Y,R30
                +
00013f e6ab     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
000140 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTW2FN _0x2000000,5
000141 940e 02ff 	CALL _strcpyf
000143 c097      	RJMP _0x20A0004
                 _0x2000017:
000144 cfda      	RJMP _0x2000014
                 _0x2000016:
000145 3010      	CPI  R17,0
000146 f449      	BRNE _0x2000018
000147 81ae      	LDD  R26,Y+6
000148 81bf      	LDD  R27,Y+6+1
000149 9611      	ADIW R26,1
00014a 83ae      	STD  Y+6,R26
00014b 83bf      	STD  Y+6+1,R27
00014c 9711      	SBIW R26,1
00014d e3e0      	LDI  R30,LOW(48)
00014e 93ec      	ST   X,R30
00014f c049      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
000150 2fe1      	MOV  R30,R17
000151 5011      	SUBI R17,1
000152 30e0      	CPI  R30,0
000153 f411      	BRNE PC+3
000154 940c 0199 	JMP _0x200001C
                +
000156 81aa     +LDD R26 , Y + 2
000157 81bb     +LDD R27 , Y + 2 + 1
000158 818c     +LDD R24 , Y + 2 + 2
000159 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
00015a eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00015b ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00015c ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00015d e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00015e 940e 040c 	CALL __MULF12
                +
000160 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000161 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000162 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000163 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000164 940e 03bc 	CALL __ADDF12
000166 01df      	MOVW R26,R30
000167 01cb      	MOVW R24,R22
000168 940e 02e8 	CALL _floor
                +
00016a 83ea     +STD Y + 2 , R30
00016b 83fb     +STD Y + 2 + 1 , R31
00016c 836c     +STD Y + 2 + 2 , R22
00016d 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                +
00016e 85a9     +LDD R26 , Y + 9
00016f 85ba     +LDD R27 , Y + 9 + 1
000170 858b     +LDD R24 , Y + 9 + 2
000171 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000172 940e 045a 	CALL __DIVF21
000174 940e 0349 	CALL __CFD1U
000176 2f0e      	MOV  R16,R30
000177 81ae      	LDD  R26,Y+6
000178 81bf      	LDD  R27,Y+6+1
000179 9611      	ADIW R26,1
00017a 83ae      	STD  Y+6,R26
00017b 83bf      	STD  Y+6+1,R27
00017c 9711      	SBIW R26,1
00017d 2fe0      	MOV  R30,R16
00017e 5de0      	SUBI R30,-LOW(48)
00017f 93ec      	ST   X,R30
000180 2fe0      	MOV  R30,R16
000181 e0f0      	LDI  R31,0
                +
000182 81aa     +LDD R26 , Y + 2
000183 81bb     +LDD R27 , Y + 2 + 1
000184 818c     +LDD R24 , Y + 2 + 2
000185 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000186 940e 04c7 	CALL __CWD1
000188 940e 0382 	CALL __CDF1
00018a 940e 040c 	CALL __MULF12
                +
00018c 85a9     +LDD R26 , Y + 9
00018d 85ba     +LDD R27 , Y + 9 + 1
00018e 858b     +LDD R24 , Y + 9 + 2
00018f 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000190 940e 04e5 	CALL __SWAPD12
000192 940e 03b5 	CALL __SUBF12
                +
000194 87e9     +STD Y + 9 , R30
000195 87fa     +STD Y + 9 + 1 , R31
000196 876b     +STD Y + 9 + 2 , R22
000197 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000198 cfb7      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
000199 85e8      	LDD  R30,Y+8
00019a 30e0      	CPI  R30,0
00019b f409      	BRNE _0x200001D
00019c c03a      	RJMP _0x20A0003
                 _0x200001D:
00019d 81ae      	LDD  R26,Y+6
00019e 81bf      	LDD  R27,Y+6+1
00019f 9611      	ADIW R26,1
0001a0 83ae      	STD  Y+6,R26
0001a1 83bf      	STD  Y+6+1,R27
0001a2 9711      	SBIW R26,1
0001a3 e2ee      	LDI  R30,LOW(46)
0001a4 93ec      	ST   X,R30
                 _0x200001E:
0001a5 85e8      	LDD  R30,Y+8
0001a6 50e1      	SUBI R30,LOW(1)
0001a7 87e8      	STD  Y+8,R30
0001a8 5fef      	SUBI R30,-LOW(1)
0001a9 f169      	BREQ _0x2000020
                +
0001aa 85a9     +LDD R26 , Y + 9
0001ab 85ba     +LDD R27 , Y + 9 + 1
0001ac 858b     +LDD R24 , Y + 9 + 2
0001ad 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
                +
0001ae e0e0     +LDI R30 , LOW ( 0x41200000 )
0001af e0f0     +LDI R31 , HIGH ( 0x41200000 )
0001b0 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0001b1 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0001b2 940e 040c 	CALL __MULF12
                +
0001b4 87e9     +STD Y + 9 , R30
0001b5 87fa     +STD Y + 9 + 1 , R31
0001b6 876b     +STD Y + 9 + 2 , R22
0001b7 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0001b8 940e 0349 	CALL __CFD1U
0001ba 2f0e      	MOV  R16,R30
0001bb 81ae      	LDD  R26,Y+6
0001bc 81bf      	LDD  R27,Y+6+1
0001bd 9611      	ADIW R26,1
0001be 83ae      	STD  Y+6,R26
0001bf 83bf      	STD  Y+6+1,R27
0001c0 9711      	SBIW R26,1
0001c1 2fe0      	MOV  R30,R16
0001c2 5de0      	SUBI R30,-LOW(48)
0001c3 93ec      	ST   X,R30
0001c4 2fe0      	MOV  R30,R16
0001c5 e0f0      	LDI  R31,0
                +
0001c6 85a9     +LDD R26 , Y + 9
0001c7 85ba     +LDD R27 , Y + 9 + 1
0001c8 858b     +LDD R24 , Y + 9 + 2
0001c9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0001ca 940e 04c7 	CALL __CWD1
0001cc 940e 0382 	CALL __CDF1
0001ce 940e 04e5 	CALL __SWAPD12
0001d0 940e 03b5 	CALL __SUBF12
                +
0001d2 87e9     +STD Y + 9 , R30
0001d3 87fa     +STD Y + 9 + 1 , R31
0001d4 876b     +STD Y + 9 + 2 , R22
0001d5 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0001d6 cfce      	RJMP _0x200001E
                 _0x2000020:
                 _0x20A0003:
0001d7 81ae      	LDD  R26,Y+6
0001d8 81bf      	LDD  R27,Y+6+1
0001d9 e0e0      	LDI  R30,LOW(0)
0001da 93ec      	ST   X,R30
                 _0x20A0004:
0001db 8119      	LDD  R17,Y+1
0001dc 8108      	LDD  R16,Y+0
0001dd 962d      	ADIW R28,13
0001de 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G101:
0001df e0ff          ldi   r31,15
                 __lcd_delay0:
0001e0 95fa          dec   r31
0001e1 f7f1          brne  __lcd_delay0
0001e2 9508      	RET
                 __lcd_ready:
0001e3 b3a4          in    r26,__lcd_direction
0001e4 70af          andi  r26,0xf                 ;set as input
0001e5 bba4          out   __lcd_direction,r26
0001e6 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0001e7 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
0001e8 dff6      	RCALL __lcd_delay_G101
0001e9 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001ea dff4      	RCALL __lcd_delay_G101
0001eb b3a3          in    r26,__lcd_pin
0001ec 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001ed dff1      	RCALL __lcd_delay_G101
0001ee 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001ef dfef      	RCALL __lcd_delay_G101
0001f0 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001f1 fda7          sbrc  r26,__lcd_busy_flag
0001f2 cff5          rjmp  __lcd_busy
0001f3 9508      	RET
                 __lcd_write_nibble_G101:
0001f4 7fa0          andi  r26,0xf0
0001f5 2bab          or    r26,r27
0001f6 bba5          out   __lcd_port,r26          ;write
0001f7 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001f8 940e 01df 	CALL __lcd_delay_G101
0001fa 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001fb 940e 01df 	CALL __lcd_delay_G101
0001fd 9508      	RET
                 __lcd_write_data:
0001fe 93aa      	ST   -Y,R26
0001ff 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000200 b3a4          in    r26,__lcd_direction
000201 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
000202 bba4          out   __lcd_direction,r26
000203 b3b5          in    r27,__lcd_port
000204 70bf          andi  r27,0xf
000205 81a8          ld    r26,y
000206 dfed      	RCALL __lcd_write_nibble_G101
000207 81a8          ld    r26,y
000208 95a2          swap  r26
000209 dfea      	RCALL __lcd_write_nibble_G101
00020a 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
00020b 940c 02b5 	JMP  _0x20A0002
                 __lcd_read_nibble_G101:
00020d 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
00020e 940e 01df 	CALL __lcd_delay_G101
000210 b3e3          in    r30,__lcd_pin           ;read
000211 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000212 940e 01df 	CALL __lcd_delay_G101
000214 7fe0          andi  r30,0xf0
000215 9508      	RET
                 _lcd_read_byte0_G101:
000216 940e 01df 	CALL __lcd_delay_G101
000218 dff4      	RCALL __lcd_read_nibble_G101
000219 2fae          mov   r26,r30
00021a dff2      	RCALL __lcd_read_nibble_G101
00021b 98a9          cbi   __lcd_port,__lcd_rd     ;RD=0
00021c 95e2          swap  r30
00021d 2bea          or    r30,r26
00021e 9508      	RET
                 _lcd_gotoxy:
00021f 93aa      	ST   -Y,R26
000220 940e 01e3 	CALL __lcd_ready
000222 81e8      	LD   R30,Y
000223 e0f0      	LDI  R31,0
000224 58e5      	SUBI R30,LOW(-__base_y_G101)
000225 4ffe      	SBCI R31,HIGH(-__base_y_G101)
000226 81e0      	LD   R30,Z
000227 81a9      	LDD  R26,Y+1
000228 0fae      	ADD  R26,R30
000229 940e 01fe 	CALL __lcd_write_data
00022b 8059      	LDD  R5,Y+1
00022c 8048      	LDD  R4,Y+0
00022d 9622      	ADIW R28,2
00022e 9508      	RET
                 _lcd_clear:
00022f 940e 01e3 	CALL __lcd_ready
000231 e0a2      	LDI  R26,LOW(2)
000232 940e 01fe 	CALL __lcd_write_data
000234 940e 01e3 	CALL __lcd_ready
000236 e0ac      	LDI  R26,LOW(12)
000237 940e 01fe 	CALL __lcd_write_data
000239 940e 01e3 	CALL __lcd_ready
00023b e0a1      	LDI  R26,LOW(1)
00023c 940e 01fe 	CALL __lcd_write_data
00023e e0e0      	LDI  R30,LOW(0)
00023f 2e4e      	MOV  R4,R30
000240 2e5e      	MOV  R5,R30
000241 9508      	RET
                 _lcd_putchar:
000242 93aa      	ST   -Y,R26
000243 93ef          push r30
000244 93ff          push r31
000245 81a8          ld   r26,y
000246 9468          set
000247 30aa          cpi  r26,10
000248 f019          breq __lcd_putchar1
000249 94e8          clt
00024a 1457      	CP   R5,R7
00024b f030      	BRLO _0x2020004
                 	__lcd_putchar1:
00024c 9443      	INC  R4
00024d e0e0      	LDI  R30,LOW(0)
00024e 93ea      	ST   -Y,R30
00024f 2da4      	MOV  R26,R4
000250 dfce      	RCALL _lcd_gotoxy
000251 f036      	brts __lcd_putchar0
                 _0x2020004:
000252 9453      	INC  R5
000253 df8f          rcall __lcd_ready
000254 9aa8          sbi  __lcd_port,__lcd_rs ;RS=1
000255 81a8      	LD   R26,Y
000256 940e 01fe 	CALL __lcd_write_data
                 __lcd_putchar0:
000258 91ff          pop  r31
000259 91ef          pop  r30
00025a 940c 02b5 	JMP  _0x20A0002
                 _lcd_puts:
00025c 93ba      	ST   -Y,R27
00025d 93aa      	ST   -Y,R26
00025e 931a      	ST   -Y,R17
                 _0x2020005:
00025f 81a9      	LDD  R26,Y+1
000260 81ba      	LDD  R27,Y+1+1
000261 91ed      	LD   R30,X+
000262 83a9      	STD  Y+1,R26
000263 83ba      	STD  Y+1+1,R27
000264 2f1e      	MOV  R17,R30
000265 30e0      	CPI  R30,0
000266 f019      	BREQ _0x2020007
000267 2fa1      	MOV  R26,R17
000268 dfd9      	RCALL _lcd_putchar
000269 cff5      	RJMP _0x2020005
                 _0x2020007:
00026a 8118      	LDD  R17,Y+0
00026b 9623      	ADIW R28,3
00026c 9508      	RET
                 __long_delay_G101:
00026d 27aa          clr   r26
00026e 27bb          clr   r27
                 __long_delay0:
00026f 9711          sbiw  r26,1         ;2 cycles
000270 f7f1          brne  __long_delay0 ;2 cycles
000271 9508      	RET
                 __lcd_init_write_G101:
000272 93aa      	ST   -Y,R26
000273 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000274 b3a4          in    r26,__lcd_direction
000275 6fa7          ori   r26,0xf7                ;set as output
000276 bba4          out   __lcd_direction,r26
000277 b3b5          in    r27,__lcd_port
000278 70bf          andi  r27,0xf
000279 81a8          ld    r26,y
00027a 940e 01f4 	CALL __lcd_write_nibble_G101
00027c 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
00027d c037      	RJMP _0x20A0002
                 _lcd_init:
00027e 93aa      	ST   -Y,R26
00027f 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000280 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
000281 8078      	LDD  R7,Y+0
000282 81e8      	LD   R30,Y
000283 58e0      	SUBI R30,-LOW(128)
                +
000284 93e0 017d+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000286 81e8      	LD   R30,Y
000287 54e0      	SUBI R30,-LOW(192)
                +
000288 93e0 017e+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
00028a dfe2      	RCALL __long_delay_G101
00028b e3a0      	LDI  R26,LOW(48)
00028c dfe5      	RCALL __lcd_init_write_G101
00028d dfdf      	RCALL __long_delay_G101
00028e e3a0      	LDI  R26,LOW(48)
00028f dfe2      	RCALL __lcd_init_write_G101
000290 dfdc      	RCALL __long_delay_G101
000291 e3a0      	LDI  R26,LOW(48)
000292 dfdf      	RCALL __lcd_init_write_G101
000293 dfd9      	RCALL __long_delay_G101
000294 e2a0      	LDI  R26,LOW(32)
000295 dfdc      	RCALL __lcd_init_write_G101
000296 dfd6      	RCALL __long_delay_G101
000297 e2a8      	LDI  R26,LOW(40)
000298 940e 01fe 	CALL __lcd_write_data
00029a dfd2      	RCALL __long_delay_G101
00029b e0a4      	LDI  R26,LOW(4)
00029c 940e 01fe 	CALL __lcd_write_data
00029e dfce      	RCALL __long_delay_G101
00029f e8a5      	LDI  R26,LOW(133)
0002a0 940e 01fe 	CALL __lcd_write_data
0002a2 dfca      	RCALL __long_delay_G101
0002a3 b3a4          in    r26,__lcd_direction
0002a4 70af          andi  r26,0xf                 ;set as input
0002a5 bba4          out   __lcd_direction,r26
0002a6 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0002a7 940e 0216 	CALL _lcd_read_byte0_G101
0002a9 30e5      	CPI  R30,LOW(0x5)
0002aa f011      	BREQ _0x202000B
0002ab e0e0      	LDI  R30,LOW(0)
0002ac c008      	RJMP _0x20A0002
                 _0x202000B:
0002ad 940e 01e3 	CALL __lcd_ready
0002af e0a6      	LDI  R26,LOW(6)
0002b0 940e 01fe 	CALL __lcd_write_data
0002b2 940e 022f 	CALL _lcd_clear
0002b4 e0e1      	LDI  R30,LOW(1)
                 _0x20A0002:
0002b5 9621      	ADIW R28,1
0002b6 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
0002b7 940e 04e0 	CALL __PUTPARD2
0002b9 817b         ldd  r23,y+3
0002ba 816a         ldd  r22,y+2
0002bb 81f9         ldd  r31,y+1
0002bc 81e8         ld   r30,y
0002bd fb77         bst  r23,7
0002be 0f77         lsl  r23
0002bf fd67         sbrc r22,7
0002c0 6071         sbr  r23,1
0002c1 2f97         mov  r25,r23
0002c2 579e         subi r25,0x7e
0002c3 f081         breq __ftrunc0
0002c4 f078         brcs __ftrunc0
0002c5 3198         cpi  r25,24
0002c6 f490         brsh __ftrunc1
0002c7 27aa         clr  r26
0002c8 27bb         clr  r27
0002c9 2788         clr  r24
                 __ftrunc2:
0002ca 9408         sec
0002cb 9587         ror  r24
0002cc 95b7         ror  r27
0002cd 95a7         ror  r26
0002ce 959a         dec  r25
0002cf f7d1         brne __ftrunc2
0002d0 23ea         and  r30,r26
0002d1 23fb         and  r31,r27
0002d2 2368         and  r22,r24
0002d3 c005         rjmp __ftrunc1
                 __ftrunc0:
0002d4 94e8         clt
0002d5 2777         clr  r23
0002d6 27ee         clr  r30
0002d7 27ff         clr  r31
0002d8 2766         clr  r22
                 __ftrunc1:
0002d9 776f         cbr  r22,0x80
0002da 9576         lsr  r23
0002db f408         brcc __ftrunc3
0002dc 6860         sbr  r22,0x80
                 __ftrunc3:
0002dd f977         bld  r23,7
0002de 91a9         ld   r26,y+
0002df 91b9         ld   r27,y+
0002e0 9189         ld   r24,y+
0002e1 9199         ld   r25,y+
0002e2 17ea         cp   r30,r26
0002e3 07fb         cpc  r31,r27
0002e4 0768         cpc  r22,r24
0002e5 0779         cpc  r23,r25
0002e6 fb97         bst  r25,7
0002e7 9508         ret
                 _floor:
0002e8 940e 04e0 	CALL __PUTPARD2
0002ea 940e 04d1 	CALL __GETD2S0
0002ec 940e 02b7 	CALL _ftrunc
0002ee 940e 04d6 	CALL __PUTD1S0
0002f0 f419          brne __floor1
                 __floor0:
0002f1 940e 04cc 	CALL __GETD1S0
0002f3 c009      	RJMP _0x20A0001
                 __floor1:
0002f4 f7e6          brtc __floor0
0002f5 940e 04cc 	CALL __GETD1S0
                +
0002f7 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0002f8 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0002f9 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0002fa e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0002fb 940e 03b5 	CALL __SUBF12
                 _0x20A0001:
0002fd 9624      	ADIW R28,4
0002fe 9508      	RET
                 
                 	.CSEG
                 _strcpyf:
0002ff 93ba      	ST   -Y,R27
000300 93aa      	ST   -Y,R26
000301 91e9          ld   r30,y+
000302 91f9          ld   r31,y+
000303 91a9          ld   r26,y+
000304 91b9          ld   r27,y+
000305 01cd          movw r24,r26
                 strcpyf0:
000306 9005      	lpm  r0,z+
000307 920d          st   x+,r0
000308 2000          tst  r0
000309 f7e1          brne strcpyf0
00030a 01fc          movw r30,r24
00030b 9508          ret
                 
                 	.DSEG
                 _i:
000170           	.BYTE 0x4
                 _s:
000174           	.BYTE 0x3
                 __seed_G100:
000177           	.BYTE 0x4
                 __base_y_G101:
00017b           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
00030c 9610      	adiw r26,0
00030d f039      	breq __delay_ms1
                 __delay_ms0:
                +
00030e ef8a     +LDI R24 , LOW ( 0xFA )
00030f e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000310 9701     +SBIW R24 , 1
000311 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000312 95a8      	wdr
000313 9711      	sbiw r26,1
000314 f7c9      	brne __delay_ms0
                 __delay_ms1:
000315 9508      	ret
                 
                 __ANEGF1:
000316 9730      	SBIW R30,0
000317 4060      	SBCI R22,0
000318 4070      	SBCI R23,0
000319 f009      	BREQ __ANEGF10
00031a 5870      	SUBI R23,0x80
                 __ANEGF10:
00031b 9508      	RET
                 
                 __ROUND_REPACK:
00031c 2355      	TST  R21
00031d f442      	BRPL __REPACK
00031e 3850      	CPI  R21,0x80
00031f f411      	BRNE __ROUND_REPACK0
000320 ffe0      	SBRS R30,0
000321 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000322 9631      	ADIW R30,1
000323 1f69      	ADC  R22,R25
000324 1f79      	ADC  R23,R25
000325 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000326 e850      	LDI  R21,0x80
000327 2757      	EOR  R21,R23
000328 f411      	BRNE __REPACK0
000329 935f      	PUSH R21
00032a c0cf      	RJMP __ZERORES
                 __REPACK0:
00032b 3f5f      	CPI  R21,0xFF
00032c f031      	BREQ __REPACK1
00032d 0f66      	LSL  R22
00032e 0c00      	LSL  R0
00032f 9557      	ROR  R21
000330 9567      	ROR  R22
000331 2f75      	MOV  R23,R21
000332 9508      	RET
                 __REPACK1:
000333 935f      	PUSH R21
000334 2000      	TST  R0
000335 f00a      	BRMI __REPACK2
000336 c0cf      	RJMP __MAXRES
                 __REPACK2:
000337 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000338 e850      	LDI  R21,0x80
000339 2e19      	MOV  R1,R25
00033a 2215      	AND  R1,R21
00033b 0f88      	LSL  R24
00033c 1f99      	ROL  R25
00033d 2795      	EOR  R25,R21
00033e 0f55      	LSL  R21
00033f 9587      	ROR  R24
                 
                 __UNPACK1:
000340 e850      	LDI  R21,0x80
000341 2e07      	MOV  R0,R23
000342 2205      	AND  R0,R21
000343 0f66      	LSL  R22
000344 1f77      	ROL  R23
000345 2775      	EOR  R23,R21
000346 0f55      	LSL  R21
000347 9567      	ROR  R22
000348 9508      	RET
                 
                 __CFD1U:
000349 9468      	SET
00034a c001      	RJMP __CFD1U0
                 __CFD1:
00034b 94e8      	CLT
                 __CFD1U0:
00034c 935f      	PUSH R21
00034d dff2      	RCALL __UNPACK1
00034e 3870      	CPI  R23,0x80
00034f f018      	BRLO __CFD10
000350 3f7f      	CPI  R23,0xFF
000351 f408      	BRCC __CFD10
000352 c0a7      	RJMP __ZERORES
                 __CFD10:
000353 e156      	LDI  R21,22
000354 1b57      	SUB  R21,R23
000355 f4aa      	BRPL __CFD11
000356 9551      	NEG  R21
000357 3058      	CPI  R21,8
000358 f40e      	BRTC __CFD19
000359 3059      	CPI  R21,9
                 __CFD19:
00035a f030      	BRLO __CFD17
00035b efef      	SER  R30
00035c efff      	SER  R31
00035d ef6f      	SER  R22
00035e e77f      	LDI  R23,0x7F
00035f f977      	BLD  R23,7
000360 c01a      	RJMP __CFD15
                 __CFD17:
000361 2777      	CLR  R23
000362 2355      	TST  R21
000363 f0b9      	BREQ __CFD15
                 __CFD18:
000364 0fee      	LSL  R30
000365 1fff      	ROL  R31
000366 1f66      	ROL  R22
000367 1f77      	ROL  R23
000368 955a      	DEC  R21
000369 f7d1      	BRNE __CFD18
00036a c010      	RJMP __CFD15
                 __CFD11:
00036b 2777      	CLR  R23
                 __CFD12:
00036c 3058      	CPI  R21,8
00036d f028      	BRLO __CFD13
00036e 2fef      	MOV  R30,R31
00036f 2ff6      	MOV  R31,R22
000370 2f67      	MOV  R22,R23
000371 5058      	SUBI R21,8
000372 cff9      	RJMP __CFD12
                 __CFD13:
000373 2355      	TST  R21
000374 f031      	BREQ __CFD15
                 __CFD14:
000375 9576      	LSR  R23
000376 9567      	ROR  R22
000377 95f7      	ROR  R31
000378 95e7      	ROR  R30
000379 955a      	DEC  R21
00037a f7d1      	BRNE __CFD14
                 __CFD15:
00037b 2000      	TST  R0
00037c f40a      	BRPL __CFD16
00037d d141      	RCALL __ANEGD1
                 __CFD16:
00037e 915f      	POP  R21
00037f 9508      	RET
                 
                 __CDF1U:
000380 9468      	SET
000381 c001      	RJMP __CDF1U0
                 __CDF1:
000382 94e8      	CLT
                 __CDF1U0:
000383 9730      	SBIW R30,0
000384 4060      	SBCI R22,0
000385 4070      	SBCI R23,0
000386 f0b1      	BREQ __CDF10
000387 2400      	CLR  R0
000388 f026      	BRTS __CDF11
000389 2377      	TST  R23
00038a f412      	BRPL __CDF11
00038b 9400      	COM  R0
00038c d132      	RCALL __ANEGD1
                 __CDF11:
00038d 2e17      	MOV  R1,R23
00038e e17e      	LDI  R23,30
00038f 2011      	TST  R1
                 __CDF12:
000390 f032      	BRMI __CDF13
000391 957a      	DEC  R23
000392 0fee      	LSL  R30
000393 1fff      	ROL  R31
000394 1f66      	ROL  R22
000395 1c11      	ROL  R1
000396 cff9      	RJMP __CDF12
                 __CDF13:
000397 2fef      	MOV  R30,R31
000398 2ff6      	MOV  R31,R22
000399 2d61      	MOV  R22,R1
00039a 935f      	PUSH R21
00039b df8a      	RCALL __REPACK
00039c 915f      	POP  R21
                 __CDF10:
00039d 9508      	RET
                 
                 __SWAPACC:
00039e 934f      	PUSH R20
00039f 01af      	MOVW R20,R30
0003a0 01fd      	MOVW R30,R26
0003a1 01da      	MOVW R26,R20
0003a2 01ab      	MOVW R20,R22
0003a3 01bc      	MOVW R22,R24
0003a4 01ca      	MOVW R24,R20
0003a5 2d40      	MOV  R20,R0
0003a6 2c01      	MOV  R0,R1
0003a7 2e14      	MOV  R1,R20
0003a8 914f      	POP  R20
0003a9 9508      	RET
                 
                 __UADD12:
0003aa 0fea      	ADD  R30,R26
0003ab 1ffb      	ADC  R31,R27
0003ac 1f68      	ADC  R22,R24
0003ad 9508      	RET
                 
                 __NEGMAN1:
0003ae 95e0      	COM  R30
0003af 95f0      	COM  R31
0003b0 9560      	COM  R22
0003b1 5fef      	SUBI R30,-1
0003b2 4fff      	SBCI R31,-1
0003b3 4f6f      	SBCI R22,-1
0003b4 9508      	RET
                 
                 __SUBF12:
0003b5 935f      	PUSH R21
0003b6 df81      	RCALL __UNPACK
0003b7 3890      	CPI  R25,0x80
0003b8 f171      	BREQ __ADDF129
0003b9 e850      	LDI  R21,0x80
0003ba 2615      	EOR  R1,R21
                 
0003bb c004      	RJMP __ADDF120
                 
                 __ADDF12:
0003bc 935f      	PUSH R21
0003bd df7a      	RCALL __UNPACK
0003be 3890      	CPI  R25,0x80
0003bf f139      	BREQ __ADDF129
                 
                 __ADDF120:
0003c0 3870      	CPI  R23,0x80
0003c1 f121      	BREQ __ADDF128
                 __ADDF121:
0003c2 2f57      	MOV  R21,R23
0003c3 1b59      	SUB  R21,R25
0003c4 f12b      	BRVS __ADDF1211
0003c5 f412      	BRPL __ADDF122
0003c6 dfd7      	RCALL __SWAPACC
0003c7 cffa      	RJMP __ADDF121
                 __ADDF122:
0003c8 3158      	CPI  R21,24
0003c9 f018      	BRLO __ADDF123
0003ca 27aa      	CLR  R26
0003cb 27bb      	CLR  R27
0003cc 2788      	CLR  R24
                 __ADDF123:
0003cd 3058      	CPI  R21,8
0003ce f028      	BRLO __ADDF124
0003cf 2fab      	MOV  R26,R27
0003d0 2fb8      	MOV  R27,R24
0003d1 2788      	CLR  R24
0003d2 5058      	SUBI R21,8
0003d3 cff9      	RJMP __ADDF123
                 __ADDF124:
0003d4 2355      	TST  R21
0003d5 f029      	BREQ __ADDF126
                 __ADDF125:
0003d6 9586      	LSR  R24
0003d7 95b7      	ROR  R27
0003d8 95a7      	ROR  R26
0003d9 955a      	DEC  R21
0003da f7d9      	BRNE __ADDF125
                 __ADDF126:
0003db 2d50      	MOV  R21,R0
0003dc 2551      	EOR  R21,R1
0003dd f072      	BRMI __ADDF127
0003de dfcb      	RCALL __UADD12
0003df f438      	BRCC __ADDF129
0003e0 9567      	ROR  R22
0003e1 95f7      	ROR  R31
0003e2 95e7      	ROR  R30
0003e3 9573      	INC  R23
0003e4 f413      	BRVC __ADDF129
0003e5 c020      	RJMP __MAXRES
                 __ADDF128:
0003e6 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0003e7 df3e      	RCALL __REPACK
0003e8 915f      	POP  R21
0003e9 9508      	RET
                 __ADDF1211:
0003ea f7d8      	BRCC __ADDF128
0003eb cffb      	RJMP __ADDF129
                 __ADDF127:
0003ec 1bea      	SUB  R30,R26
0003ed 0bfb      	SBC  R31,R27
0003ee 0b68      	SBC  R22,R24
0003ef f051      	BREQ __ZERORES
0003f0 f410      	BRCC __ADDF1210
0003f1 9400      	COM  R0
0003f2 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0003f3 2366      	TST  R22
0003f4 f392      	BRMI __ADDF129
0003f5 0fee      	LSL  R30
0003f6 1fff      	ROL  R31
0003f7 1f66      	ROL  R22
0003f8 957a      	DEC  R23
0003f9 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0003fa 27ee      	CLR  R30
0003fb 27ff      	CLR  R31
0003fc 2766      	CLR  R22
0003fd 2777      	CLR  R23
0003fe 915f      	POP  R21
0003ff 9508      	RET
                 
                 __MINRES:
000400 efef      	SER  R30
000401 efff      	SER  R31
000402 e76f      	LDI  R22,0x7F
000403 ef7f      	SER  R23
000404 915f      	POP  R21
000405 9508      	RET
                 
                 __MAXRES:
000406 efef      	SER  R30
000407 efff      	SER  R31
000408 e76f      	LDI  R22,0x7F
000409 e77f      	LDI  R23,0x7F
00040a 915f      	POP  R21
00040b 9508      	RET
                 
                 __MULF12:
00040c 935f      	PUSH R21
00040d df2a      	RCALL __UNPACK
00040e 3870      	CPI  R23,0x80
00040f f351      	BREQ __ZERORES
000410 3890      	CPI  R25,0x80
000411 f341      	BREQ __ZERORES
000412 2401      	EOR  R0,R1
000413 9408      	SEC
000414 1f79      	ADC  R23,R25
000415 f423      	BRVC __MULF124
000416 f31c      	BRLT __ZERORES
                 __MULF125:
000417 2000      	TST  R0
000418 f33a      	BRMI __MINRES
000419 cfec      	RJMP __MAXRES
                 __MULF124:
00041a 920f      	PUSH R0
00041b 931f      	PUSH R17
00041c 932f      	PUSH R18
00041d 933f      	PUSH R19
00041e 934f      	PUSH R20
00041f 2711      	CLR  R17
000420 2722      	CLR  R18
000421 2799      	CLR  R25
000422 9f68      	MUL  R22,R24
000423 01a0      	MOVW R20,R0
000424 9f8f      	MUL  R24,R31
000425 2d30      	MOV  R19,R0
000426 0d41      	ADD  R20,R1
000427 1f59      	ADC  R21,R25
000428 9f6b      	MUL  R22,R27
000429 0d30      	ADD  R19,R0
00042a 1d41      	ADC  R20,R1
00042b 1f59      	ADC  R21,R25
00042c 9f8e      	MUL  R24,R30
00042d d027      	RCALL __MULF126
00042e 9fbf      	MUL  R27,R31
00042f d025      	RCALL __MULF126
000430 9f6a      	MUL  R22,R26
000431 d023      	RCALL __MULF126
000432 9fbe      	MUL  R27,R30
000433 d01d      	RCALL __MULF127
000434 9faf      	MUL  R26,R31
000435 d01b      	RCALL __MULF127
000436 9fae      	MUL  R26,R30
000437 0d11      	ADD  R17,R1
000438 1f29      	ADC  R18,R25
000439 1f39      	ADC  R19,R25
00043a 1f49      	ADC  R20,R25
00043b 1f59      	ADC  R21,R25
00043c 2fe3      	MOV  R30,R19
00043d 2ff4      	MOV  R31,R20
00043e 2f65      	MOV  R22,R21
00043f 2f52      	MOV  R21,R18
000440 914f      	POP  R20
000441 913f      	POP  R19
000442 912f      	POP  R18
000443 911f      	POP  R17
000444 900f      	POP  R0
000445 2366      	TST  R22
000446 f02a      	BRMI __MULF122
000447 0f55      	LSL  R21
000448 1fee      	ROL  R30
000449 1fff      	ROL  R31
00044a 1f66      	ROL  R22
00044b c002      	RJMP __MULF123
                 __MULF122:
00044c 9573      	INC  R23
00044d f24b      	BRVS __MULF125
                 __MULF123:
00044e decd      	RCALL __ROUND_REPACK
00044f 915f      	POP  R21
000450 9508      	RET
                 
                 __MULF127:
000451 0d10      	ADD  R17,R0
000452 1d21      	ADC  R18,R1
000453 1f39      	ADC  R19,R25
000454 c002      	RJMP __MULF128
                 __MULF126:
000455 0d20      	ADD  R18,R0
000456 1d31      	ADC  R19,R1
                 __MULF128:
000457 1f49      	ADC  R20,R25
000458 1f59      	ADC  R21,R25
000459 9508      	RET
                 
                 __DIVF21:
00045a 935f      	PUSH R21
00045b dedc      	RCALL __UNPACK
00045c 3870      	CPI  R23,0x80
00045d f421      	BRNE __DIVF210
00045e 2011      	TST  R1
                 __DIVF211:
00045f f40a      	BRPL __DIVF219
000460 cf9f      	RJMP __MINRES
                 __DIVF219:
000461 cfa4      	RJMP __MAXRES
                 __DIVF210:
000462 3890      	CPI  R25,0x80
000463 f409      	BRNE __DIVF218
                 __DIVF217:
000464 cf95      	RJMP __ZERORES
                 __DIVF218:
000465 2401      	EOR  R0,R1
000466 9408      	SEC
000467 0b97      	SBC  R25,R23
000468 f41b      	BRVC __DIVF216
000469 f3d4      	BRLT __DIVF217
00046a 2000      	TST  R0
00046b cff3      	RJMP __DIVF211
                 __DIVF216:
00046c 2f79      	MOV  R23,R25
00046d 931f      	PUSH R17
00046e 932f      	PUSH R18
00046f 933f      	PUSH R19
000470 934f      	PUSH R20
000471 2411      	CLR  R1
000472 2711      	CLR  R17
000473 2722      	CLR  R18
000474 2733      	CLR  R19
000475 2744      	CLR  R20
000476 2755      	CLR  R21
000477 e290      	LDI  R25,32
                 __DIVF212:
000478 17ae      	CP   R26,R30
000479 07bf      	CPC  R27,R31
00047a 0786      	CPC  R24,R22
00047b 0741      	CPC  R20,R17
00047c f030      	BRLO __DIVF213
00047d 1bae      	SUB  R26,R30
00047e 0bbf      	SBC  R27,R31
00047f 0b86      	SBC  R24,R22
000480 0b41      	SBC  R20,R17
000481 9408      	SEC
000482 c001      	RJMP __DIVF214
                 __DIVF213:
000483 9488      	CLC
                 __DIVF214:
000484 1f55      	ROL  R21
000485 1f22      	ROL  R18
000486 1f33      	ROL  R19
000487 1c11      	ROL  R1
000488 1faa      	ROL  R26
000489 1fbb      	ROL  R27
00048a 1f88      	ROL  R24
00048b 1f44      	ROL  R20
00048c 959a      	DEC  R25
00048d f751      	BRNE __DIVF212
00048e 01f9      	MOVW R30,R18
00048f 2d61      	MOV  R22,R1
000490 914f      	POP  R20
000491 913f      	POP  R19
000492 912f      	POP  R18
000493 911f      	POP  R17
000494 2366      	TST  R22
000495 f032      	BRMI __DIVF215
000496 0f55      	LSL  R21
000497 1fee      	ROL  R30
000498 1fff      	ROL  R31
000499 1f66      	ROL  R22
00049a 957a      	DEC  R23
00049b f243      	BRVS __DIVF217
                 __DIVF215:
00049c de7f      	RCALL __ROUND_REPACK
00049d 915f      	POP  R21
00049e 9508      	RET
                 
                 __CMPF12:
00049f 2399      	TST  R25
0004a0 f09a      	BRMI __CMPF120
0004a1 2377      	TST  R23
0004a2 f042      	BRMI __CMPF121
0004a3 1797      	CP   R25,R23
0004a4 f048      	BRLO __CMPF122
0004a5 f429      	BRNE __CMPF121
0004a6 17ae      	CP   R26,R30
0004a7 07bf      	CPC  R27,R31
0004a8 0786      	CPC  R24,R22
0004a9 f020      	BRLO __CMPF122
0004aa f031      	BREQ __CMPF123
                 __CMPF121:
0004ab 9498      	CLZ
0004ac 9488      	CLC
0004ad 9508      	RET
                 __CMPF122:
0004ae 9498      	CLZ
0004af 9408      	SEC
0004b0 9508      	RET
                 __CMPF123:
0004b1 9418      	SEZ
0004b2 9488      	CLC
0004b3 9508      	RET
                 __CMPF120:
0004b4 2377      	TST  R23
0004b5 f7c2      	BRPL __CMPF122
0004b6 1797      	CP   R25,R23
0004b7 f398      	BRLO __CMPF121
0004b8 f7a9      	BRNE __CMPF122
0004b9 17ea      	CP   R30,R26
0004ba 07fb      	CPC  R31,R27
0004bb 0768      	CPC  R22,R24
0004bc f388      	BRLO __CMPF122
0004bd f399      	BREQ __CMPF123
0004be cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
0004bf 95f0      	COM  R31
0004c0 9560      	COM  R22
0004c1 9570      	COM  R23
0004c2 95e1      	NEG  R30
0004c3 4fff      	SBCI R31,-1
0004c4 4f6f      	SBCI R22,-1
0004c5 4f7f      	SBCI R23,-1
0004c6 9508      	RET
                 
                 __CWD1:
0004c7 2f6f      	MOV  R22,R31
0004c8 0f66      	ADD  R22,R22
0004c9 0b66      	SBC  R22,R22
0004ca 2f76      	MOV  R23,R22
0004cb 9508      	RET
                 
                 __GETD1S0:
0004cc 81e8      	LD   R30,Y
0004cd 81f9      	LDD  R31,Y+1
0004ce 816a      	LDD  R22,Y+2
0004cf 817b      	LDD  R23,Y+3
0004d0 9508      	RET
                 
                 __GETD2S0:
0004d1 81a8      	LD   R26,Y
0004d2 81b9      	LDD  R27,Y+1
0004d3 818a      	LDD  R24,Y+2
0004d4 819b      	LDD  R25,Y+3
0004d5 9508      	RET
                 
                 __PUTD1S0:
0004d6 83e8      	ST   Y,R30
0004d7 83f9      	STD  Y+1,R31
0004d8 836a      	STD  Y+2,R22
0004d9 837b      	STD  Y+3,R23
0004da 9508      	RET
                 
                 __PUTPARD1:
0004db 937a      	ST   -Y,R23
0004dc 936a      	ST   -Y,R22
0004dd 93fa      	ST   -Y,R31
0004de 93ea      	ST   -Y,R30
0004df 9508      	RET
                 
                 __PUTPARD2:
0004e0 939a      	ST   -Y,R25
0004e1 938a      	ST   -Y,R24
0004e2 93ba      	ST   -Y,R27
0004e3 93aa      	ST   -Y,R26
0004e4 9508      	RET
                 
                 __SWAPD12:
0004e5 2e18      	MOV  R1,R24
0004e6 2f86      	MOV  R24,R22
0004e7 2d61      	MOV  R22,R1
0004e8 2e19      	MOV  R1,R25
0004e9 2f97      	MOV  R25,R23
0004ea 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0004eb 2e1b      	MOV  R1,R27
0004ec 2fbf      	MOV  R27,R31
0004ed 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0004ee 2e1a      	MOV  R1,R26
0004ef 2fae      	MOV  R26,R30
0004f0 2de1      	MOV  R30,R1
0004f1 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  29 r1 :  30 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   8 r17:  25 r18:  12 r19:  12 r20:  22 r21:  63 r22:  82 r23:  77 
r24:  52 r25:  55 r26: 137 r27:  68 r28:   7 r29:   1 r30: 162 r31:  81 
x  :  11 y  : 204 z  :   9 
Registers used: 24 out of 35 (68.6%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   8 
adiw  :  12 and   :   5 andi  :   6 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   1 break :   0 breq  :  22 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  14 
brlt  :   2 brmi  :   9 brne  :  25 brpl  :   8 brsh  :   1 brtc  :   2 
brts  :   2 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  :  65 
cbi   :  10 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  33 cls   :   0 clt   :   4 clv   :   0 clz   :   2 com   :   8 
cp    :   7 cpc   :  12 cpi   :  28 cpse  :   0 dec   :  10 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :  10 inc   :   4 jmp   :  25 ld    :  21 ldd   :  95 ldi   : 109 
lds   :   0 lpm   :   8 lsl   :  12 lsr   :   3 mov   :  53 movw  :  15 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   2 out   :  15 pop   :  20 push  :  20 rcall :  43 ret   :  41 
reti  :   0 rjmp  :  44 rol   :  24 ror   :  15 sbc   :   7 sbci  :  10 
sbi   :  10 sbic  :   0 sbis  :   1 sbiw  :  14 sbr   :   2 sbrc  :   2 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   3 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  44 std   :  56 sts   :   6 sub   :   4 subi  :  15 swap  :   2 
tst   :  19 wdr   :   1 
Instructions used: 77 out of 116 (66.4%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0009e4   2482     50   2532   16384  15.5%
[.dseg] 0x000060 0x00017f      0     31     31    1119   2.8%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 5 warnings
