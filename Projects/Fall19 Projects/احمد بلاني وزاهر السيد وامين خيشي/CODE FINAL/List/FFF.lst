
AVRASM ver. 2.1.30  C:\Users\ASUS\Desktop\ãÔÑæææææÚ\List\FFF.asm Mon Jan 06 00:24:54 2020

C:\Users\ASUS\Desktop\ãÔÑæææææÚ\List\FFF.asm(1072): warning: Register r5 already defined by the .DEF directive
C:\Users\ASUS\Desktop\ãÔÑæææææÚ\List\FFF.asm(1073): warning: Register r4 already defined by the .DEF directive
C:\Users\ASUS\Desktop\ãÔÑæææææÚ\List\FFF.asm(1074): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 1.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 007a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 6574
00002b 706d
00002c 203d
00002d 6420      	.DB  0x74,0x65,0x6D,0x70,0x3D,0x20,0x20,0x64
00002e 6765
00002f 6572
000030 0065
000031 6874      	.DB  0x65,0x67,0x72,0x65,0x65,0x0,0x74,0x68
000032 2065
000033 6568
000034 7461
000035 7265      	.DB  0x65,0x20,0x68,0x65,0x61,0x74,0x65,0x72
000036 6920
000037 2073
000038 6e6f
000039 7400      	.DB  0x20,0x69,0x73,0x20,0x6F,0x6E,0x0,0x74
00003a 6568
00003b 4620
00003c 6e61
00003d 6920      	.DB  0x68,0x65,0x20,0x46,0x61,0x6E,0x20,0x69
00003e 2073
00003f 6e6f
000040 2e2e
000041 002e      	.DB  0x73,0x20,0x6F,0x6E,0x2E,0x2E,0x2E,0x0
000042 6874
000043 2065
000044 6574
000045 706d      	.DB  0x74,0x68,0x65,0x20,0x74,0x65,0x6D,0x70
000046 6920
000047 2073
000048 6f67
000049 646f      	.DB  0x20,0x69,0x73,0x20,0x67,0x6F,0x6F,0x64
00004a 7400
00004b 6568
00004c 7420
00004d 6d65      	.DB  0x0,0x74,0x68,0x65,0x20,0x74,0x65,0x6D
00004e 2070
00004f 7369
000050 6420
000051 6e61      	.DB  0x70,0x20,0x69,0x73,0x20,0x64,0x61,0x6E
000052 6567
000053 0072      	.DB  0x67,0x65,0x72,0x0
                 _0x2000003:
000054 c080      	.DB  0x80,0xC0
                 _0x2020060:
C:\Users\ASUS\Desktop\ãÔÑæææææÚ\List\FFF.asm(1120): warning: .cseg .db misalignment - padding zero byte
000055 0001      	.DB  0x1
                 _0x2020000:
000056 4e2d
000057 4e41
000058 4900
000059 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ASUS\Desktop\ãÔÑæææææÚ\List\FFF.asm(1123): warning: .cseg .db misalignment - padding zero byte
00005a 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00005b 000e      	.DW  0x0E
00005c 0160      	.DW  _0x14
00005d 0054      	.DW  _0x0*2
                 
00005e 0011      	.DW  0x11
00005f 016e      	.DW  _0x14+14
000060 0062      	.DW  _0x0*2+14
                 
000061 000e      	.DW  0x0E
000062 017f      	.DW  _0x14+31
000063 0054      	.DW  _0x0*2
                 
000064 0011      	.DW  0x11
000065 018d      	.DW  _0x14+45
000066 0073      	.DW  _0x0*2+31
                 
000067 000e      	.DW  0x0E
000068 019e      	.DW  _0x14+62
000069 0054      	.DW  _0x0*2
                 
00006a 0011      	.DW  0x11
00006b 01ac      	.DW  _0x14+76
00006c 0084      	.DW  _0x0*2+48
                 
00006d 000e      	.DW  0x0E
00006e 01bd      	.DW  _0x14+93
00006f 0054      	.DW  _0x0*2
                 
000070 0013      	.DW  0x13
000071 01cb      	.DW  _0x14+107
000072 0095      	.DW  _0x0*2+65
                 
000073 0002      	.DW  0x02
000074 01e7      	.DW  __base_y_G100
000075 00a8      	.DW  _0x2000003*2
                 
000076 0001      	.DW  0x01
000077 01eb      	.DW  __seed_G101
000078 00aa      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000079 0000      	.DW  0
                 
                 __RESET:
00007a 94f8      	CLI
00007b 27ee      	CLR  R30
00007c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00007d e0f1      	LDI  R31,1
00007e bffb      	OUT  GICR,R31
00007f bfeb      	OUT  GICR,R30
000080 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000081 e1f8      	LDI  R31,0x18
000082 bdf1      	OUT  WDTCR,R31
000083 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000084 e08d      	LDI  R24,(14-2)+1
000085 e0a2      	LDI  R26,2
000086 27bb      	CLR  R27
                 __CLEAR_REG:
000087 93ed      	ST   X+,R30
000088 958a      	DEC  R24
000089 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00008a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00008b e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00008c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00008d 93ed      	ST   X+,R30
00008e 9701      	SBIW R24,1
00008f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000090 ebe6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000091 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000092 9185      	LPM  R24,Z+
000093 9195      	LPM  R25,Z+
000094 9700      	SBIW R24,0
000095 f061      	BREQ __GLOBAL_INI_END
000096 91a5      	LPM  R26,Z+
000097 91b5      	LPM  R27,Z+
000098 9005      	LPM  R0,Z+
000099 9015      	LPM  R1,Z+
00009a 01bf      	MOVW R22,R30
00009b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00009c 9005      	LPM  R0,Z+
00009d 920d      	ST   X+,R0
00009e 9701      	SBIW R24,1
00009f f7e1      	BRNE __GLOBAL_INI_LOOP
0000a0 01fb      	MOVW R30,R22
0000a1 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000a2 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a3 bfed      	OUT  SPL,R30
0000a4 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000a5 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000a6 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000a7 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000a8 940c 00aa 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <stdlib.h>
                 ;  #include <delay.h>
                 ;  float t;
                 ;   char s[5];
                 ;void main(void)
                 ; 0000 0009 {
                 
                 	.CSEG
                 _main:
                 ; 0000 000A PORTA=0x00;
0000aa e0e0      	LDI  R30,LOW(0)
0000ab bbeb      	OUT  0x1B,R30
                 ; 0000 000B DDRA=0x00;
0000ac bbea      	OUT  0x1A,R30
                 ; 0000 000C 
                 ; 0000 000D PORTB=0x00;
0000ad bbe8      	OUT  0x18,R30
                 ; 0000 000E DDRB=0x00;
0000ae bbe7      	OUT  0x17,R30
                 ; 0000 000F 
                 ; 0000 0010 PORTC=0x00;
0000af bbe5      	OUT  0x15,R30
                 ; 0000 0011 DDRC=0x00;
0000b0 bbe4      	OUT  0x14,R30
                 ; 0000 0012 
                 ; 0000 0013 PORTD=0x00;
0000b1 bbe2      	OUT  0x12,R30
                 ; 0000 0014 DDRD=0xFF;
0000b2 efef      	LDI  R30,LOW(255)
0000b3 bbe1      	OUT  0x11,R30
                 ; 0000 0015 ADMUX=0b00000000;
0000b4 e0e0      	LDI  R30,LOW(0)
0000b5 b9e7      	OUT  0x7,R30
                 ; 0000 0016 ADCSRA=0b10000011;
0000b6 e8e3      	LDI  R30,LOW(131)
0000b7 b9e6      	OUT  0x6,R30
                 ; 0000 0017 lcd_init(16);
0000b8 e1a0      	LDI  R26,LOW(16)
0000b9 d0e1      	RCALL _lcd_init
                 ; 0000 0018 lcd_clear();
0000ba d0ae      	RCALL _lcd_clear
                 ; 0000 0019 while (1)
                 _0x3:
                 ; 0000 001A       {
                 ; 0000 001B        ADCSRA.6=1;
0000bb 9a36      	SBI  0x6,6
                 ; 0000 001C 
                 ; 0000 001D 
                 ; 0000 001E 
                 ; 0000 001F        while ( ADCSRA.4==0){}
                 _0x8:
0000bc 9b34      	SBIS 0x6,4
0000bd cffe      	RJMP _0x8
                 ; 0000 0020         t=ADCW*0.09775;
0000be b1e4      	IN   R30,0x4
0000bf b1f5      	IN   R31,0x4+1
0000c0 2766      	CLR  R22
0000c1 2777      	CLR  R23
0000c2 940e 03e2 	CALL __CDF1
                +
0000c4 e2a7     +LDI R26 , LOW ( 0x3DC83127 )
0000c5 e3b1     +LDI R27 , HIGH ( 0x3DC83127 )
0000c6 ec88     +LDI R24 , BYTE3 ( 0x3DC83127 )
0000c7 e39d     +LDI R25 , BYTE4 ( 0x3DC83127 )
                 	__GETD2N 0x3DC83127
0000c8 940e 046c 	CALL __MULF12
0000ca 93e0 01de 	STS  _t,R30
0000cc 93f0 01df 	STS  _t+1,R31
0000ce 9360 01e0 	STS  _t+2,R22
0000d0 9370 01e1 	STS  _t+3,R23
                 ; 0000 0021         ftoa(t,0,s);
0000d2 940e 053b 	CALL __PUTPARD1
0000d4 e0e0      	LDI  R30,LOW(0)
0000d5 93ea      	ST   -Y,R30
0000d6 eea2      	LDI  R26,LOW(_s)
0000d7 e0b1      	LDI  R27,HIGH(_s)
0000d8 940e 01c8 	CALL _ftoa
                 ; 0000 0022 
                 ; 0000 0023 
                 ; 0000 0024        if(t<15)
0000da 940e 02e4 	CALL SUBOPT_0x0
0000dc 940e 02ed 	CALL SUBOPT_0x1
0000de f468      	BRSH _0xB
                 ; 0000 0025       { PORTD.7=0;
0000df 9897      	CBI  0x12,7
                 ; 0000 0026        PORTD.5=1;
0000e0 9a95      	SBI  0x12,5
                 ; 0000 0027        PORTD.2=0;
0000e1 940e 02f4 	CALL SUBOPT_0x2
                 ; 0000 0028                          PORTD.1=0;
                 ; 0000 0029        lcd_gotoxy(0,0);
                 ; 0000 002A         lcd_puts("temp=  degree");
                +
0000e3 e6a0     +LDI R26 , LOW ( _0x14 + ( 0 ) )
0000e4 e0b1     +LDI R27 , HIGH ( _0x14 + ( 0 ) )
                 	__POINTW2MN _0x14,0
0000e5 940e 02fb 	CALL SUBOPT_0x3
                 ; 0000 002B        lcd_gotoxy(6,0);
                 ; 0000 002C        lcd_puts(s);
                 ; 0000 002D        delay_ms(500);
                 ; 0000 002E               lcd_gotoxy(0,1);
                 ; 0000 002F                lcd_puts("the heater is on");
                +
0000e7 e6ae     +LDI R26 , LOW ( _0x14 + ( 14 ) )
0000e8 e0b1     +LDI R27 , HIGH ( _0x14 + ( 14 ) )
                 	__POINTW2MN _0x14,14
0000e9 940e 030f 	CALL SUBOPT_0x4
                 ; 0000 0030                          delay_ms(500);}
                 ; 0000 0031                          else if(t>20 && t<39)
0000eb c04e      	RJMP _0x15
                 _0xB:
0000ec 940e 0315 	CALL SUBOPT_0x5
0000ee f009      	BREQ PC+2
0000ef f410      	BRCC PC+3
0000f0 940c 00fb 	JMP  _0x17
0000f2 940e 02e4 	CALL SUBOPT_0x0
                +
0000f4 e0e0     +LDI R30 , LOW ( 0x421C0000 )
0000f5 e0f0     +LDI R31 , HIGH ( 0x421C0000 )
0000f6 e16c     +LDI R22 , BYTE3 ( 0x421C0000 )
0000f7 e472     +LDI R23 , BYTE4 ( 0x421C0000 )
                 	__GETD1N 0x421C0000
0000f8 940e 04ff 	CALL __CMPF12
0000fa f008      	BRLO _0x18
                 _0x17:
0000fb c00d      	RJMP _0x16
                 _0x18:
                 ; 0000 0032                         { PORTD.7=1;
0000fc 9a97      	SBI  0x12,7
                 ; 0000 0033                          PORTD.5=0;
0000fd 9895      	CBI  0x12,5
                 ; 0000 0034                          PORTD.2=0;
0000fe 940e 02f4 	CALL SUBOPT_0x2
                 ; 0000 0035                          PORTD.1=0;
                 ; 0000 0036                          lcd_gotoxy(0,0);
                 ; 0000 0037                           lcd_puts("temp=  degree");
                +
000100 e7af     +LDI R26 , LOW ( _0x14 + ( 31 ) )
000101 e0b1     +LDI R27 , HIGH ( _0x14 + ( 31 ) )
                 	__POINTW2MN _0x14,31
000102 940e 02fb 	CALL SUBOPT_0x3
                 ; 0000 0038                           lcd_gotoxy(6,0);
                 ; 0000 0039                           lcd_puts(s);
                 ; 0000 003A                           delay_ms(500);
                 ; 0000 003B                           lcd_gotoxy(0,1);
                 ; 0000 003C                           lcd_puts("the Fan is on...");
                +
000104 e8ad     +LDI R26 , LOW ( _0x14 + ( 45 ) )
000105 e0b1     +LDI R27 , HIGH ( _0x14 + ( 45 ) )
                 	__POINTW2MN _0x14,45
000106 940e 030f 	CALL SUBOPT_0x4
                 ; 0000 003D                            delay_ms(500);}
                 ; 0000 003E                            else if (t>15 && t<20)
000108 c031      	RJMP _0x21
                 _0x16:
000109 940e 02e4 	CALL SUBOPT_0x0
00010b 940e 02ed 	CALL SUBOPT_0x1
00010d f009      	BREQ PC+2
00010e f410      	BRCC PC+3
00010f 940c 0114 	JMP  _0x23
000111 940e 0315 	CALL SUBOPT_0x5
000113 f008      	BRLO _0x24
                 _0x23:
000114 c00b      	RJMP _0x22
                 _0x24:
                 ; 0000 003F                           { PORTD.7=0;
000115 9897      	CBI  0x12,7
                 ; 0000 0040                            PORTD.5=0;
000116 9895      	CBI  0x12,5
                 ; 0000 0041                            PORTD.2=0;
000117 940e 02f4 	CALL SUBOPT_0x2
                 ; 0000 0042                          PORTD.1=0;
                 ; 0000 0043                            lcd_gotoxy(0,0);
                 ; 0000 0044                             lcd_puts("temp=  degree");
                +
000119 e9ae     +LDI R26 , LOW ( _0x14 + ( 62 ) )
00011a e0b1     +LDI R27 , HIGH ( _0x14 + ( 62 ) )
                 	__POINTW2MN _0x14,62
00011b 940e 02fb 	CALL SUBOPT_0x3
                 ; 0000 0045                              lcd_gotoxy(6,0);
                 ; 0000 0046                               lcd_puts(s);
                 ; 0000 0047                              delay_ms(500);
                 ; 0000 0048                             lcd_gotoxy(0,1);
                 ; 0000 0049                lcd_puts("the temp is good");
                +
00011d eaac     +LDI R26 , LOW ( _0x14 + ( 76 ) )
00011e e0b1     +LDI R27 , HIGH ( _0x14 + ( 76 ) )
                 	__POINTW2MN _0x14,76
00011f c019      	RJMP _0x38
                 ; 0000 004A                                              }
                 ; 0000 004B                                              else if (t>40)
                 _0x22:
000120 940e 02e4 	CALL SUBOPT_0x0
                +
000122 e0e0     +LDI R30 , LOW ( 0x42200000 )
000123 e0f0     +LDI R31 , HIGH ( 0x42200000 )
000124 e260     +LDI R22 , BYTE3 ( 0x42200000 )
000125 e472     +LDI R23 , BYTE4 ( 0x42200000 )
                 	__GETD1N 0x42200000
000126 940e 04ff 	CALL __CMPF12
000128 f009      	BREQ PC+2
000129 f410      	BRCC PC+3
00012a 940c 013a 	JMP  _0x2E
                 ; 0000 004C                                              {PORTD.1=1;
00012c 9a91      	SBI  0x12,1
                 ; 0000 004D                                              PORTD.7=1;
00012d 9a97      	SBI  0x12,7
                 ; 0000 004E                                              PORTD.2=1;
00012e 9a92      	SBI  0x12,2
                 ; 0000 004F                                              PORTD.5=0;
00012f 9895      	CBI  0x12,5
                 ; 0000 0050                                               lcd_gotoxy(0,0);
000130 93ea      	ST   -Y,R30
000131 e0a0      	LDI  R26,LOW(0)
000132 d029      	RCALL _lcd_gotoxy
                 ; 0000 0051                             lcd_puts("temp=  degree");
                +
000133 ebad     +LDI R26 , LOW ( _0x14 + ( 93 ) )
000134 e0b1     +LDI R27 , HIGH ( _0x14 + ( 93 ) )
                 	__POINTW2MN _0x14,93
000135 940e 02fb 	CALL SUBOPT_0x3
                 ; 0000 0052                              lcd_gotoxy(6,0);
                 ; 0000 0053                               lcd_puts(s);
                 ; 0000 0054                              delay_ms(500);
                 ; 0000 0055                             lcd_gotoxy(0,1);
                 ; 0000 0056                lcd_puts("the temp is danger");
                +
000137 ecab     +LDI R26 , LOW ( _0x14 + ( 107 ) )
000138 e0b1     +LDI R27 , HIGH ( _0x14 + ( 107 ) )
                 	__POINTW2MN _0x14,107
                 _0x38:
000139 d050      	RCALL _lcd_puts
                 ; 0000 0057                                              }
                 ; 0000 0058       }
                 _0x2E:
                 _0x21:
                 _0x15:
00013a cf80      	RJMP _0x3
                 ; 0000 0059 }
                 _0x37:
00013b cfff      	RJMP _0x37
                 
                 	.DSEG
                 _0x14:
000160           	.BYTE 0x7E
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
00013c 93aa      	ST   -Y,R26
00013d b3e5      	IN   R30,0x15
00013e 70ef      	ANDI R30,LOW(0xF)
00013f 2fae      	MOV  R26,R30
000140 81e8      	LD   R30,Y
000141 7fe0      	ANDI R30,LOW(0xF0)
000142 2bea      	OR   R30,R26
000143 bbe5      	OUT  0x15,R30
                +
000144 e081     +LDI R24 , LOW ( 1 )
                +__DELAY_USB_LOOP :
000145 958a     +DEC R24
000146 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 1
000147 9aaa      	SBI  0x15,2
                +
000148 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000149 958a     +DEC R24
00014a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00014b 98aa      	CBI  0x15,2
                +
00014c e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00014d 958a     +DEC R24
00014e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00014f c076      	RJMP _0x20A0004
                 __lcd_write_data:
000150 93aa      	ST   -Y,R26
000151 81a8      	LD   R26,Y
000152 dfe9      	RCALL __lcd_write_nibble_G100
000153 81e8          ld    r30,y
000154 95e2          swap  r30
000155 83e8          st    y,r30
000156 81a8      	LD   R26,Y
000157 dfe4      	RCALL __lcd_write_nibble_G100
                +
000158 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
000159 958a     +DEC R24
00015a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
00015b c06a      	RJMP _0x20A0004
                 _lcd_gotoxy:
00015c 93aa      	ST   -Y,R26
00015d 81e8      	LD   R30,Y
00015e e0f0      	LDI  R31,0
00015f 51e9      	SUBI R30,LOW(-__base_y_G100)
000160 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000161 81e0      	LD   R30,Z
000162 81a9      	LDD  R26,Y+1
000163 0fae      	ADD  R26,R30
000164 dfeb      	RCALL __lcd_write_data
000165 8059      	LDD  R5,Y+1
000166 8048      	LDD  R4,Y+0
000167 9622      	ADIW R28,2
000168 9508      	RET
                 _lcd_clear:
000169 e0a2      	LDI  R26,LOW(2)
00016a 940e 031d 	CALL SUBOPT_0x6
00016c e0ac      	LDI  R26,LOW(12)
00016d dfe2      	RCALL __lcd_write_data
00016e e0a1      	LDI  R26,LOW(1)
00016f 940e 031d 	CALL SUBOPT_0x6
000171 e0e0      	LDI  R30,LOW(0)
000172 2e4e      	MOV  R4,R30
000173 2e5e      	MOV  R5,R30
000174 9508      	RET
                 _lcd_putchar:
000175 93aa      	ST   -Y,R26
000176 81a8      	LD   R26,Y
000177 30aa      	CPI  R26,LOW(0xA)
000178 f011      	BREQ _0x2000005
000179 1457      	CP   R5,R7
00017a f048      	BRLO _0x2000004
                 _0x2000005:
00017b e0e0      	LDI  R30,LOW(0)
00017c 93ea      	ST   -Y,R30
00017d 9443      	INC  R4
00017e 2da4      	MOV  R26,R4
00017f dfdc      	RCALL _lcd_gotoxy
000180 81a8      	LD   R26,Y
000181 30aa      	CPI  R26,LOW(0xA)
000182 f409      	BRNE _0x2000007
000183 c042      	RJMP _0x20A0004
                 _0x2000007:
                 _0x2000004:
000184 9453      	INC  R5
000185 9aa8      	SBI  0x15,0
000186 81a8      	LD   R26,Y
000187 dfc8      	RCALL __lcd_write_data
000188 98a8      	CBI  0x15,0
000189 c03c      	RJMP _0x20A0004
                 _lcd_puts:
00018a 93ba      	ST   -Y,R27
00018b 93aa      	ST   -Y,R26
00018c 931a      	ST   -Y,R17
                 _0x2000008:
00018d 81a9      	LDD  R26,Y+1
00018e 81ba      	LDD  R27,Y+1+1
00018f 91ed      	LD   R30,X+
000190 83a9      	STD  Y+1,R26
000191 83ba      	STD  Y+1+1,R27
000192 2f1e      	MOV  R17,R30
000193 30e0      	CPI  R30,0
000194 f019      	BREQ _0x200000A
000195 2fa1      	MOV  R26,R17
000196 dfde      	RCALL _lcd_putchar
000197 cff5      	RJMP _0x2000008
                 _0x200000A:
000198 8118      	LDD  R17,Y+0
000199 9623      	ADIW R28,3
00019a 9508      	RET
                 _lcd_init:
00019b 93aa      	ST   -Y,R26
00019c b3e4      	IN   R30,0x14
00019d 6fe0      	ORI  R30,LOW(0xF0)
00019e bbe4      	OUT  0x14,R30
00019f 9aa2      	SBI  0x14,2
0001a0 9aa0      	SBI  0x14,0
0001a1 9aa1      	SBI  0x14,1
0001a2 98aa      	CBI  0x15,2
0001a3 98a8      	CBI  0x15,0
0001a4 98a9      	CBI  0x15,1
0001a5 8078      	LDD  R7,Y+0
0001a6 81e8      	LD   R30,Y
0001a7 58e0      	SUBI R30,-LOW(128)
                +
0001a8 93e0 01e9+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001aa 81e8      	LD   R30,Y
0001ab 54e0      	SUBI R30,-LOW(192)
                +
0001ac 93e0 01ea+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001ae e1a4      	LDI  R26,LOW(20)
0001af e0b0      	LDI  R27,0
0001b0 940e 036c 	CALL _delay_ms
0001b2 940e 0323 	CALL SUBOPT_0x7
0001b4 940e 0323 	CALL SUBOPT_0x7
0001b6 940e 0323 	CALL SUBOPT_0x7
0001b8 e2a0      	LDI  R26,LOW(32)
0001b9 df82      	RCALL __lcd_write_nibble_G100
                +
0001ba e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0001bb 958a     +DEC R24
0001bc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0001bd e2a8      	LDI  R26,LOW(40)
0001be df91      	RCALL __lcd_write_data
0001bf e0a4      	LDI  R26,LOW(4)
0001c0 df8f      	RCALL __lcd_write_data
0001c1 e8a5      	LDI  R26,LOW(133)
0001c2 df8d      	RCALL __lcd_write_data
0001c3 e0a6      	LDI  R26,LOW(6)
0001c4 df8b      	RCALL __lcd_write_data
0001c5 dfa3      	RCALL _lcd_clear
                 _0x20A0004:
0001c6 9621      	ADIW R28,1
0001c7 9508      	RET
                 
                 	.CSEG
                 _ftoa:
0001c8 93ba      	ST   -Y,R27
0001c9 93aa      	ST   -Y,R26
0001ca 9724      	SBIW R28,4
0001cb e0e0      	LDI  R30,LOW(0)
0001cc 83e8      	ST   Y,R30
0001cd 83e9      	STD  Y+1,R30
0001ce 83ea      	STD  Y+2,R30
0001cf e3ef      	LDI  R30,LOW(63)
0001d0 83eb      	STD  Y+3,R30
0001d1 931a      	ST   -Y,R17
0001d2 930a      	ST   -Y,R16
0001d3 85eb      	LDD  R30,Y+11
0001d4 85fc      	LDD  R31,Y+11+1
0001d5 3fef      	CPI  R30,LOW(0xFFFF)
0001d6 efaf      	LDI  R26,HIGH(0xFFFF)
0001d7 07fa      	CPC  R31,R26
0001d8 f439      	BRNE _0x202000D
0001d9 940e 032a 	CALL SUBOPT_0x8
                +
0001db eaac     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
0001dc e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
0001dd 940e 02d7 	CALL _strcpyf
0001df c0ab      	RJMP _0x20A0003
                 _0x202000D:
0001e0 3fef      	CPI  R30,LOW(0x7FFF)
0001e1 e7af      	LDI  R26,HIGH(0x7FFF)
0001e2 07fa      	CPC  R31,R26
0001e3 f439      	BRNE _0x202000C
0001e4 940e 032a 	CALL SUBOPT_0x8
                +
0001e6 eaad     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
0001e7 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
0001e8 940e 02d7 	CALL _strcpyf
0001ea c0a0      	RJMP _0x20A0003
                 _0x202000C:
0001eb 85ac      	LDD  R26,Y+12
0001ec 23aa      	TST  R26
0001ed f462      	BRPL _0x202000F
                +
0001ee 85e9     +LDD R30 , Y + 9
0001ef 85fa     +LDD R31 , Y + 9 + 1
0001f0 856b     +LDD R22 , Y + 9 + 2
0001f1 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0001f2 940e 0376 	CALL __ANEGF1
0001f4 940e 032f 	CALL SUBOPT_0x9
0001f6 940e 0334 	CALL SUBOPT_0xA
0001f8 e2ed      	LDI  R30,LOW(45)
0001f9 93ec      	ST   X,R30
                 _0x202000F:
0001fa 85a8      	LDD  R26,Y+8
0001fb 30a7      	CPI  R26,LOW(0x7)
0001fc f010      	BRLO _0x2020010
0001fd e0e6      	LDI  R30,LOW(6)
0001fe 87e8      	STD  Y+8,R30
                 _0x2020010:
0001ff 8518      	LDD  R17,Y+8
                 _0x2020011:
000200 2fe1      	MOV  R30,R17
000201 5011      	SUBI R17,1
000202 30e0      	CPI  R30,0
000203 f039      	BREQ _0x2020013
000204 940e 033b 	CALL SUBOPT_0xB
000206 940e 0340 	CALL SUBOPT_0xC
000208 940e 0347 	CALL SUBOPT_0xD
00020a cff5      	RJMP _0x2020011
                 _0x2020013:
00020b 940e 034c 	CALL SUBOPT_0xE
00020d 940e 041c 	CALL __ADDF12
00020f 940e 032f 	CALL SUBOPT_0x9
000211 e010      	LDI  R17,LOW(0)
                +
000212 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000213 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000214 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000215 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000216 940e 0347 	CALL SUBOPT_0xD
                 _0x2020014:
000218 940e 034c 	CALL SUBOPT_0xE
00021a 940e 04ff 	CALL __CMPF12
00021c f088      	BRLO _0x2020016
00021d 940e 033b 	CALL SUBOPT_0xB
00021f 940e 0355 	CALL SUBOPT_0xF
000221 940e 0347 	CALL SUBOPT_0xD
000223 5f1f      	SUBI R17,-LOW(1)
000224 3217      	CPI  R17,39
000225 f038      	BRLO _0x2020017
000226 940e 032a 	CALL SUBOPT_0x8
                +
000228 eba1     +LDI R26 , LOW ( 2 * _0x2020000 + ( 5 ) )
000229 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 5 ) )
                 	__POINTW2FN _0x2020000,5
00022a 940e 02d7 	CALL _strcpyf
00022c c05e      	RJMP _0x20A0003
                 _0x2020017:
00022d cfea      	RJMP _0x2020014
                 _0x2020016:
00022e 3010      	CPI  R17,0
00022f f429      	BRNE _0x2020018
000230 940e 0334 	CALL SUBOPT_0xA
000232 e3e0      	LDI  R30,LOW(48)
000233 93ec      	ST   X,R30
000234 c02c      	RJMP _0x2020019
                 _0x2020018:
                 _0x202001A:
000235 2fe1      	MOV  R30,R17
000236 5011      	SUBI R17,1
000237 30e0      	CPI  R30,0
000238 f141      	BREQ _0x202001C
000239 940e 033b 	CALL SUBOPT_0xB
00023b 940e 0340 	CALL SUBOPT_0xC
                +
00023d e0a0     +LDI R26 , LOW ( 0x3F000000 )
00023e e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00023f e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000240 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000241 940e 041c 	CALL __ADDF12
000243 01df      	MOVW R26,R30
000244 01cb      	MOVW R24,R22
000245 940e 02c0 	CALL _floor
000247 940e 0347 	CALL SUBOPT_0xD
000249 940e 034c 	CALL SUBOPT_0xE
00024b 940e 04ba 	CALL __DIVF21
00024d 940e 03a9 	CALL __CFD1U
00024f 2f0e      	MOV  R16,R30
000250 940e 0334 	CALL SUBOPT_0xA
000252 940e 035c 	CALL SUBOPT_0x10
000254 940e 033b 	CALL SUBOPT_0xB
000256 940e 0527 	CALL __CWD1
000258 940e 03e2 	CALL __CDF1
00025a 940e 046c 	CALL __MULF12
00025c 940e 0362 	CALL SUBOPT_0x11
00025e 940e 0367 	CALL SUBOPT_0x12
000260 cfd4      	RJMP _0x202001A
                 _0x202001C:
                 _0x2020019:
000261 85e8      	LDD  R30,Y+8
000262 30e0      	CPI  R30,0
000263 f119      	BREQ _0x20A0002
000264 940e 0334 	CALL SUBOPT_0xA
000266 e2ee      	LDI  R30,LOW(46)
000267 93ec      	ST   X,R30
                 _0x202001E:
000268 85e8      	LDD  R30,Y+8
000269 50e1      	SUBI R30,LOW(1)
00026a 87e8      	STD  Y+8,R30
00026b 5fef      	SUBI R30,-LOW(1)
00026c f0d1      	BREQ _0x2020020
00026d 940e 0362 	CALL SUBOPT_0x11
00026f 940e 0355 	CALL SUBOPT_0xF
000271 940e 032f 	CALL SUBOPT_0x9
                +
000273 85e9     +LDD R30 , Y + 9
000274 85fa     +LDD R31 , Y + 9 + 1
000275 856b     +LDD R22 , Y + 9 + 2
000276 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000277 940e 03a9 	CALL __CFD1U
000279 2f0e      	MOV  R16,R30
00027a 940e 0334 	CALL SUBOPT_0xA
00027c 940e 035c 	CALL SUBOPT_0x10
00027e 940e 0362 	CALL SUBOPT_0x11
000280 940e 0527 	CALL __CWD1
000282 940e 03e2 	CALL __CDF1
000284 940e 0367 	CALL SUBOPT_0x12
000286 cfe1      	RJMP _0x202001E
                 _0x2020020:
                 _0x20A0002:
000287 81ae      	LDD  R26,Y+6
000288 81bf      	LDD  R27,Y+6+1
000289 e0e0      	LDI  R30,LOW(0)
00028a 93ec      	ST   X,R30
                 _0x20A0003:
00028b 8119      	LDD  R17,Y+1
00028c 8108      	LDD  R16,Y+0
00028d 962d      	ADIW R28,13
00028e 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
00028f 940e 0540 	CALL __PUTPARD2
000291 817b         ldd  r23,y+3
000292 816a         ldd  r22,y+2
000293 81f9         ldd  r31,y+1
000294 81e8         ld   r30,y
000295 fb77         bst  r23,7
000296 0f77         lsl  r23
000297 fd67         sbrc r22,7
000298 6071         sbr  r23,1
000299 2f97         mov  r25,r23
00029a 579e         subi r25,0x7e
00029b f081         breq __ftrunc0
00029c f078         brcs __ftrunc0
00029d 3198         cpi  r25,24
00029e f490         brsh __ftrunc1
00029f 27aa         clr  r26
0002a0 27bb         clr  r27
0002a1 2788         clr  r24
                 __ftrunc2:
0002a2 9408         sec
0002a3 9587         ror  r24
0002a4 95b7         ror  r27
0002a5 95a7         ror  r26
0002a6 959a         dec  r25
0002a7 f7d1         brne __ftrunc2
0002a8 23ea         and  r30,r26
0002a9 23fb         and  r31,r27
0002aa 2368         and  r22,r24
0002ab c005         rjmp __ftrunc1
                 __ftrunc0:
0002ac 94e8         clt
0002ad 2777         clr  r23
0002ae 27ee         clr  r30
0002af 27ff         clr  r31
0002b0 2766         clr  r22
                 __ftrunc1:
0002b1 776f         cbr  r22,0x80
0002b2 9576         lsr  r23
0002b3 f408         brcc __ftrunc3
0002b4 6860         sbr  r22,0x80
                 __ftrunc3:
0002b5 f977         bld  r23,7
0002b6 91a9         ld   r26,y+
0002b7 91b9         ld   r27,y+
0002b8 9189         ld   r24,y+
0002b9 9199         ld   r25,y+
0002ba 17ea         cp   r30,r26
0002bb 07fb         cpc  r31,r27
0002bc 0768         cpc  r22,r24
0002bd 0779         cpc  r23,r25
0002be fb97         bst  r25,7
0002bf 9508         ret
                 _floor:
0002c0 940e 0540 	CALL __PUTPARD2
0002c2 940e 0531 	CALL __GETD2S0
0002c4 940e 028f 	CALL _ftrunc
0002c6 940e 0536 	CALL __PUTD1S0
0002c8 f419          brne __floor1
                 __floor0:
0002c9 940e 052c 	CALL __GETD1S0
0002cb c009      	RJMP _0x20A0001
                 __floor1:
0002cc f7e6          brtc __floor0
0002cd 940e 052c 	CALL __GETD1S0
                +
0002cf e0a0     +LDI R26 , LOW ( 0x3F800000 )
0002d0 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0002d1 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0002d2 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0002d3 940e 0415 	CALL __SUBF12
                 _0x20A0001:
0002d5 9624      	ADIW R28,4
0002d6 9508      	RET
                 
                 	.CSEG
                 _strcpyf:
0002d7 93ba      	ST   -Y,R27
0002d8 93aa      	ST   -Y,R26
0002d9 91e9          ld   r30,y+
0002da 91f9          ld   r31,y+
0002db 91a9          ld   r26,y+
0002dc 91b9          ld   r27,y+
0002dd 01cd          movw r24,r26
                 strcpyf0:
0002de 9005      	lpm  r0,z+
0002df 920d          st   x+,r0
0002e0 2000          tst  r0
0002e1 f7e1          brne strcpyf0
0002e2 01fc          movw r30,r24
0002e3 9508          ret
                 
                 	.DSEG
                 _t:
0001de           	.BYTE 0x4
                 _s:
0001e2           	.BYTE 0x5
                 __base_y_G100:
0001e7           	.BYTE 0x4
                 __seed_G101:
0001eb           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x0:
0002e4 91a0 01de 	LDS  R26,_t
0002e6 91b0 01df 	LDS  R27,_t+1
0002e8 9180 01e0 	LDS  R24,_t+2
0002ea 9190 01e1 	LDS  R25,_t+3
0002ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
                +
0002ed e0e0     +LDI R30 , LOW ( 0x41700000 )
0002ee e0f0     +LDI R31 , HIGH ( 0x41700000 )
0002ef e760     +LDI R22 , BYTE3 ( 0x41700000 )
0002f0 e471     +LDI R23 , BYTE4 ( 0x41700000 )
                 	__GETD1N 0x41700000
0002f1 940e 04ff 	CALL __CMPF12
0002f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
0002f4 9892      	CBI  0x12,2
0002f5 9891      	CBI  0x12,1
0002f6 e0e0      	LDI  R30,LOW(0)
0002f7 93ea      	ST   -Y,R30
0002f8 e0a0      	LDI  R26,LOW(0)
0002f9 940c 015c 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x3:
0002fb 940e 018a 	CALL _lcd_puts
0002fd e0e6      	LDI  R30,LOW(6)
0002fe 93ea      	ST   -Y,R30
0002ff e0a0      	LDI  R26,LOW(0)
000300 940e 015c 	CALL _lcd_gotoxy
000302 eea2      	LDI  R26,LOW(_s)
000303 e0b1      	LDI  R27,HIGH(_s)
000304 940e 018a 	CALL _lcd_puts
000306 efa4      	LDI  R26,LOW(500)
000307 e0b1      	LDI  R27,HIGH(500)
000308 940e 036c 	CALL _delay_ms
00030a e0e0      	LDI  R30,LOW(0)
00030b 93ea      	ST   -Y,R30
00030c e0a1      	LDI  R26,LOW(1)
00030d 940c 015c 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
00030f 940e 018a 	CALL _lcd_puts
000311 efa4      	LDI  R26,LOW(500)
000312 e0b1      	LDI  R27,HIGH(500)
000313 940c 036c 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
000315 dfce      	RCALL SUBOPT_0x0
                +
000316 e0e0     +LDI R30 , LOW ( 0x41A00000 )
000317 e0f0     +LDI R31 , HIGH ( 0x41A00000 )
000318 ea60     +LDI R22 , BYTE3 ( 0x41A00000 )
000319 e471     +LDI R23 , BYTE4 ( 0x41A00000 )
                 	__GETD1N 0x41A00000
00031a 940e 04ff 	CALL __CMPF12
00031c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
00031d 940e 0150 	CALL __lcd_write_data
00031f e0a3      	LDI  R26,LOW(3)
000320 e0b0      	LDI  R27,0
000321 940c 036c 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
000323 e3a0      	LDI  R26,LOW(48)
000324 940e 013c 	CALL __lcd_write_nibble_G100
                +
000326 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000327 958a     +DEC R24
000328 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000329 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
00032a 81ee      	LDD  R30,Y+6
00032b 81ff      	LDD  R31,Y+6+1
00032c 93fa      	ST   -Y,R31
00032d 93ea      	ST   -Y,R30
00032e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
00032f 87e9     +STD Y + 9 , R30
000330 87fa     +STD Y + 9 + 1 , R31
000331 876b     +STD Y + 9 + 2 , R22
000332 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000333 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA:
000334 81ae      	LDD  R26,Y+6
000335 81bf      	LDD  R27,Y+6+1
000336 9611      	ADIW R26,1
000337 83ae      	STD  Y+6,R26
000338 83bf      	STD  Y+6+1,R27
000339 9711      	SBIW R26,1
00033a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
                +
00033b 81aa     +LDD R26 , Y + 2
00033c 81bb     +LDD R27 , Y + 2 + 1
00033d 818c     +LDD R24 , Y + 2 + 2
00033e 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00033f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
                +
000340 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000341 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000342 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000343 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000344 940e 046c 	CALL __MULF12
000346 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
                +
000347 83ea     +STD Y + 2 , R30
000348 83fb     +STD Y + 2 + 1 , R31
000349 836c     +STD Y + 2 + 2 , R22
00034a 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00034b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
                +
00034c 81ea     +LDD R30 , Y + 2
00034d 81fb     +LDD R31 , Y + 2 + 1
00034e 816c     +LDD R22 , Y + 2 + 2
00034f 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000350 85a9     +LDD R26 , Y + 9
000351 85ba     +LDD R27 , Y + 9 + 1
000352 858b     +LDD R24 , Y + 9 + 2
000353 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000354 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
                +
000355 e0e0     +LDI R30 , LOW ( 0x41200000 )
000356 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000357 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000358 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000359 940e 046c 	CALL __MULF12
00035b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x10:
00035c 2fe0      	MOV  R30,R16
00035d 5de0      	SUBI R30,-LOW(48)
00035e 93ec      	ST   X,R30
00035f 2fe0      	MOV  R30,R16
000360 e0f0      	LDI  R31,0
000361 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
000362 85a9     +LDD R26 , Y + 9
000363 85ba     +LDD R27 , Y + 9 + 1
000364 858b     +LDD R24 , Y + 9 + 2
000365 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000366 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000367 940e 0545 	CALL __SWAPD12
000369 940e 0415 	CALL __SUBF12
00036b cfc3      	RJMP SUBOPT_0x9
                 
                 
                 	.CSEG
                 _delay_ms:
00036c 9610      	adiw r26,0
00036d f039      	breq __delay_ms1
                 __delay_ms0:
                +
00036e ef8a     +LDI R24 , LOW ( 0xFA )
00036f e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000370 9701     +SBIW R24 , 1
000371 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000372 95a8      	wdr
000373 9711      	sbiw r26,1
000374 f7c9      	brne __delay_ms0
                 __delay_ms1:
000375 9508      	ret
                 
                 __ANEGF1:
000376 9730      	SBIW R30,0
000377 4060      	SBCI R22,0
000378 4070      	SBCI R23,0
000379 f009      	BREQ __ANEGF10
00037a 5870      	SUBI R23,0x80
                 __ANEGF10:
00037b 9508      	RET
                 
                 __ROUND_REPACK:
00037c 2355      	TST  R21
00037d f442      	BRPL __REPACK
00037e 3850      	CPI  R21,0x80
00037f f411      	BRNE __ROUND_REPACK0
000380 ffe0      	SBRS R30,0
000381 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000382 9631      	ADIW R30,1
000383 1f69      	ADC  R22,R25
000384 1f79      	ADC  R23,R25
000385 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000386 e850      	LDI  R21,0x80
000387 2757      	EOR  R21,R23
000388 f411      	BRNE __REPACK0
000389 935f      	PUSH R21
00038a c0cf      	RJMP __ZERORES
                 __REPACK0:
00038b 3f5f      	CPI  R21,0xFF
00038c f031      	BREQ __REPACK1
00038d 0f66      	LSL  R22
00038e 0c00      	LSL  R0
00038f 9557      	ROR  R21
000390 9567      	ROR  R22
000391 2f75      	MOV  R23,R21
000392 9508      	RET
                 __REPACK1:
000393 935f      	PUSH R21
000394 2000      	TST  R0
000395 f00a      	BRMI __REPACK2
000396 c0cf      	RJMP __MAXRES
                 __REPACK2:
000397 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000398 e850      	LDI  R21,0x80
000399 2e19      	MOV  R1,R25
00039a 2215      	AND  R1,R21
00039b 0f88      	LSL  R24
00039c 1f99      	ROL  R25
00039d 2795      	EOR  R25,R21
00039e 0f55      	LSL  R21
00039f 9587      	ROR  R24
                 
                 __UNPACK1:
0003a0 e850      	LDI  R21,0x80
0003a1 2e07      	MOV  R0,R23
0003a2 2205      	AND  R0,R21
0003a3 0f66      	LSL  R22
0003a4 1f77      	ROL  R23
0003a5 2775      	EOR  R23,R21
0003a6 0f55      	LSL  R21
0003a7 9567      	ROR  R22
0003a8 9508      	RET
                 
                 __CFD1U:
0003a9 9468      	SET
0003aa c001      	RJMP __CFD1U0
                 __CFD1:
0003ab 94e8      	CLT
                 __CFD1U0:
0003ac 935f      	PUSH R21
0003ad dff2      	RCALL __UNPACK1
0003ae 3870      	CPI  R23,0x80
0003af f018      	BRLO __CFD10
0003b0 3f7f      	CPI  R23,0xFF
0003b1 f408      	BRCC __CFD10
0003b2 c0a7      	RJMP __ZERORES
                 __CFD10:
0003b3 e156      	LDI  R21,22
0003b4 1b57      	SUB  R21,R23
0003b5 f4aa      	BRPL __CFD11
0003b6 9551      	NEG  R21
0003b7 3058      	CPI  R21,8
0003b8 f40e      	BRTC __CFD19
0003b9 3059      	CPI  R21,9
                 __CFD19:
0003ba f030      	BRLO __CFD17
0003bb efef      	SER  R30
0003bc efff      	SER  R31
0003bd ef6f      	SER  R22
0003be e77f      	LDI  R23,0x7F
0003bf f977      	BLD  R23,7
0003c0 c01a      	RJMP __CFD15
                 __CFD17:
0003c1 2777      	CLR  R23
0003c2 2355      	TST  R21
0003c3 f0b9      	BREQ __CFD15
                 __CFD18:
0003c4 0fee      	LSL  R30
0003c5 1fff      	ROL  R31
0003c6 1f66      	ROL  R22
0003c7 1f77      	ROL  R23
0003c8 955a      	DEC  R21
0003c9 f7d1      	BRNE __CFD18
0003ca c010      	RJMP __CFD15
                 __CFD11:
0003cb 2777      	CLR  R23
                 __CFD12:
0003cc 3058      	CPI  R21,8
0003cd f028      	BRLO __CFD13
0003ce 2fef      	MOV  R30,R31
0003cf 2ff6      	MOV  R31,R22
0003d0 2f67      	MOV  R22,R23
0003d1 5058      	SUBI R21,8
0003d2 cff9      	RJMP __CFD12
                 __CFD13:
0003d3 2355      	TST  R21
0003d4 f031      	BREQ __CFD15
                 __CFD14:
0003d5 9576      	LSR  R23
0003d6 9567      	ROR  R22
0003d7 95f7      	ROR  R31
0003d8 95e7      	ROR  R30
0003d9 955a      	DEC  R21
0003da f7d1      	BRNE __CFD14
                 __CFD15:
0003db 2000      	TST  R0
0003dc f40a      	BRPL __CFD16
0003dd d141      	RCALL __ANEGD1
                 __CFD16:
0003de 915f      	POP  R21
0003df 9508      	RET
                 
                 __CDF1U:
0003e0 9468      	SET
0003e1 c001      	RJMP __CDF1U0
                 __CDF1:
0003e2 94e8      	CLT
                 __CDF1U0:
0003e3 9730      	SBIW R30,0
0003e4 4060      	SBCI R22,0
0003e5 4070      	SBCI R23,0
0003e6 f0b1      	BREQ __CDF10
0003e7 2400      	CLR  R0
0003e8 f026      	BRTS __CDF11
0003e9 2377      	TST  R23
0003ea f412      	BRPL __CDF11
0003eb 9400      	COM  R0
0003ec d132      	RCALL __ANEGD1
                 __CDF11:
0003ed 2e17      	MOV  R1,R23
0003ee e17e      	LDI  R23,30
0003ef 2011      	TST  R1
                 __CDF12:
0003f0 f032      	BRMI __CDF13
0003f1 957a      	DEC  R23
0003f2 0fee      	LSL  R30
0003f3 1fff      	ROL  R31
0003f4 1f66      	ROL  R22
0003f5 1c11      	ROL  R1
0003f6 cff9      	RJMP __CDF12
                 __CDF13:
0003f7 2fef      	MOV  R30,R31
0003f8 2ff6      	MOV  R31,R22
0003f9 2d61      	MOV  R22,R1
0003fa 935f      	PUSH R21
0003fb df8a      	RCALL __REPACK
0003fc 915f      	POP  R21
                 __CDF10:
0003fd 9508      	RET
                 
                 __SWAPACC:
0003fe 934f      	PUSH R20
0003ff 01af      	MOVW R20,R30
000400 01fd      	MOVW R30,R26
000401 01da      	MOVW R26,R20
000402 01ab      	MOVW R20,R22
000403 01bc      	MOVW R22,R24
000404 01ca      	MOVW R24,R20
000405 2d40      	MOV  R20,R0
000406 2c01      	MOV  R0,R1
000407 2e14      	MOV  R1,R20
000408 914f      	POP  R20
000409 9508      	RET
                 
                 __UADD12:
00040a 0fea      	ADD  R30,R26
00040b 1ffb      	ADC  R31,R27
00040c 1f68      	ADC  R22,R24
00040d 9508      	RET
                 
                 __NEGMAN1:
00040e 95e0      	COM  R30
00040f 95f0      	COM  R31
000410 9560      	COM  R22
000411 5fef      	SUBI R30,-1
000412 4fff      	SBCI R31,-1
000413 4f6f      	SBCI R22,-1
000414 9508      	RET
                 
                 __SUBF12:
000415 935f      	PUSH R21
000416 df81      	RCALL __UNPACK
000417 3890      	CPI  R25,0x80
000418 f171      	BREQ __ADDF129
000419 e850      	LDI  R21,0x80
00041a 2615      	EOR  R1,R21
                 
00041b c004      	RJMP __ADDF120
                 
                 __ADDF12:
00041c 935f      	PUSH R21
00041d df7a      	RCALL __UNPACK
00041e 3890      	CPI  R25,0x80
00041f f139      	BREQ __ADDF129
                 
                 __ADDF120:
000420 3870      	CPI  R23,0x80
000421 f121      	BREQ __ADDF128
                 __ADDF121:
000422 2f57      	MOV  R21,R23
000423 1b59      	SUB  R21,R25
000424 f12b      	BRVS __ADDF1211
000425 f412      	BRPL __ADDF122
000426 dfd7      	RCALL __SWAPACC
000427 cffa      	RJMP __ADDF121
                 __ADDF122:
000428 3158      	CPI  R21,24
000429 f018      	BRLO __ADDF123
00042a 27aa      	CLR  R26
00042b 27bb      	CLR  R27
00042c 2788      	CLR  R24
                 __ADDF123:
00042d 3058      	CPI  R21,8
00042e f028      	BRLO __ADDF124
00042f 2fab      	MOV  R26,R27
000430 2fb8      	MOV  R27,R24
000431 2788      	CLR  R24
000432 5058      	SUBI R21,8
000433 cff9      	RJMP __ADDF123
                 __ADDF124:
000434 2355      	TST  R21
000435 f029      	BREQ __ADDF126
                 __ADDF125:
000436 9586      	LSR  R24
000437 95b7      	ROR  R27
000438 95a7      	ROR  R26
000439 955a      	DEC  R21
00043a f7d9      	BRNE __ADDF125
                 __ADDF126:
00043b 2d50      	MOV  R21,R0
00043c 2551      	EOR  R21,R1
00043d f072      	BRMI __ADDF127
00043e dfcb      	RCALL __UADD12
00043f f438      	BRCC __ADDF129
000440 9567      	ROR  R22
000441 95f7      	ROR  R31
000442 95e7      	ROR  R30
000443 9573      	INC  R23
000444 f413      	BRVC __ADDF129
000445 c020      	RJMP __MAXRES
                 __ADDF128:
000446 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000447 df3e      	RCALL __REPACK
000448 915f      	POP  R21
000449 9508      	RET
                 __ADDF1211:
00044a f7d8      	BRCC __ADDF128
00044b cffb      	RJMP __ADDF129
                 __ADDF127:
00044c 1bea      	SUB  R30,R26
00044d 0bfb      	SBC  R31,R27
00044e 0b68      	SBC  R22,R24
00044f f051      	BREQ __ZERORES
000450 f410      	BRCC __ADDF1210
000451 9400      	COM  R0
000452 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000453 2366      	TST  R22
000454 f392      	BRMI __ADDF129
000455 0fee      	LSL  R30
000456 1fff      	ROL  R31
000457 1f66      	ROL  R22
000458 957a      	DEC  R23
000459 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00045a 27ee      	CLR  R30
00045b 27ff      	CLR  R31
00045c 2766      	CLR  R22
00045d 2777      	CLR  R23
00045e 915f      	POP  R21
00045f 9508      	RET
                 
                 __MINRES:
000460 efef      	SER  R30
000461 efff      	SER  R31
000462 e76f      	LDI  R22,0x7F
000463 ef7f      	SER  R23
000464 915f      	POP  R21
000465 9508      	RET
                 
                 __MAXRES:
000466 efef      	SER  R30
000467 efff      	SER  R31
000468 e76f      	LDI  R22,0x7F
000469 e77f      	LDI  R23,0x7F
00046a 915f      	POP  R21
00046b 9508      	RET
                 
                 __MULF12:
00046c 935f      	PUSH R21
00046d df2a      	RCALL __UNPACK
00046e 3870      	CPI  R23,0x80
00046f f351      	BREQ __ZERORES
000470 3890      	CPI  R25,0x80
000471 f341      	BREQ __ZERORES
000472 2401      	EOR  R0,R1
000473 9408      	SEC
000474 1f79      	ADC  R23,R25
000475 f423      	BRVC __MULF124
000476 f31c      	BRLT __ZERORES
                 __MULF125:
000477 2000      	TST  R0
000478 f33a      	BRMI __MINRES
000479 cfec      	RJMP __MAXRES
                 __MULF124:
00047a 920f      	PUSH R0
00047b 931f      	PUSH R17
00047c 932f      	PUSH R18
00047d 933f      	PUSH R19
00047e 934f      	PUSH R20
00047f 2711      	CLR  R17
000480 2722      	CLR  R18
000481 2799      	CLR  R25
000482 9f68      	MUL  R22,R24
000483 01a0      	MOVW R20,R0
000484 9f8f      	MUL  R24,R31
000485 2d30      	MOV  R19,R0
000486 0d41      	ADD  R20,R1
000487 1f59      	ADC  R21,R25
000488 9f6b      	MUL  R22,R27
000489 0d30      	ADD  R19,R0
00048a 1d41      	ADC  R20,R1
00048b 1f59      	ADC  R21,R25
00048c 9f8e      	MUL  R24,R30
00048d d027      	RCALL __MULF126
00048e 9fbf      	MUL  R27,R31
00048f d025      	RCALL __MULF126
000490 9f6a      	MUL  R22,R26
000491 d023      	RCALL __MULF126
000492 9fbe      	MUL  R27,R30
000493 d01d      	RCALL __MULF127
000494 9faf      	MUL  R26,R31
000495 d01b      	RCALL __MULF127
000496 9fae      	MUL  R26,R30
000497 0d11      	ADD  R17,R1
000498 1f29      	ADC  R18,R25
000499 1f39      	ADC  R19,R25
00049a 1f49      	ADC  R20,R25
00049b 1f59      	ADC  R21,R25
00049c 2fe3      	MOV  R30,R19
00049d 2ff4      	MOV  R31,R20
00049e 2f65      	MOV  R22,R21
00049f 2f52      	MOV  R21,R18
0004a0 914f      	POP  R20
0004a1 913f      	POP  R19
0004a2 912f      	POP  R18
0004a3 911f      	POP  R17
0004a4 900f      	POP  R0
0004a5 2366      	TST  R22
0004a6 f02a      	BRMI __MULF122
0004a7 0f55      	LSL  R21
0004a8 1fee      	ROL  R30
0004a9 1fff      	ROL  R31
0004aa 1f66      	ROL  R22
0004ab c002      	RJMP __MULF123
                 __MULF122:
0004ac 9573      	INC  R23
0004ad f24b      	BRVS __MULF125
                 __MULF123:
0004ae decd      	RCALL __ROUND_REPACK
0004af 915f      	POP  R21
0004b0 9508      	RET
                 
                 __MULF127:
0004b1 0d10      	ADD  R17,R0
0004b2 1d21      	ADC  R18,R1
0004b3 1f39      	ADC  R19,R25
0004b4 c002      	RJMP __MULF128
                 __MULF126:
0004b5 0d20      	ADD  R18,R0
0004b6 1d31      	ADC  R19,R1
                 __MULF128:
0004b7 1f49      	ADC  R20,R25
0004b8 1f59      	ADC  R21,R25
0004b9 9508      	RET
                 
                 __DIVF21:
0004ba 935f      	PUSH R21
0004bb dedc      	RCALL __UNPACK
0004bc 3870      	CPI  R23,0x80
0004bd f421      	BRNE __DIVF210
0004be 2011      	TST  R1
                 __DIVF211:
0004bf f40a      	BRPL __DIVF219
0004c0 cf9f      	RJMP __MINRES
                 __DIVF219:
0004c1 cfa4      	RJMP __MAXRES
                 __DIVF210:
0004c2 3890      	CPI  R25,0x80
0004c3 f409      	BRNE __DIVF218
                 __DIVF217:
0004c4 cf95      	RJMP __ZERORES
                 __DIVF218:
0004c5 2401      	EOR  R0,R1
0004c6 9408      	SEC
0004c7 0b97      	SBC  R25,R23
0004c8 f41b      	BRVC __DIVF216
0004c9 f3d4      	BRLT __DIVF217
0004ca 2000      	TST  R0
0004cb cff3      	RJMP __DIVF211
                 __DIVF216:
0004cc 2f79      	MOV  R23,R25
0004cd 931f      	PUSH R17
0004ce 932f      	PUSH R18
0004cf 933f      	PUSH R19
0004d0 934f      	PUSH R20
0004d1 2411      	CLR  R1
0004d2 2711      	CLR  R17
0004d3 2722      	CLR  R18
0004d4 2733      	CLR  R19
0004d5 2744      	CLR  R20
0004d6 2755      	CLR  R21
0004d7 e290      	LDI  R25,32
                 __DIVF212:
0004d8 17ae      	CP   R26,R30
0004d9 07bf      	CPC  R27,R31
0004da 0786      	CPC  R24,R22
0004db 0741      	CPC  R20,R17
0004dc f030      	BRLO __DIVF213
0004dd 1bae      	SUB  R26,R30
0004de 0bbf      	SBC  R27,R31
0004df 0b86      	SBC  R24,R22
0004e0 0b41      	SBC  R20,R17
0004e1 9408      	SEC
0004e2 c001      	RJMP __DIVF214
                 __DIVF213:
0004e3 9488      	CLC
                 __DIVF214:
0004e4 1f55      	ROL  R21
0004e5 1f22      	ROL  R18
0004e6 1f33      	ROL  R19
0004e7 1c11      	ROL  R1
0004e8 1faa      	ROL  R26
0004e9 1fbb      	ROL  R27
0004ea 1f88      	ROL  R24
0004eb 1f44      	ROL  R20
0004ec 959a      	DEC  R25
0004ed f751      	BRNE __DIVF212
0004ee 01f9      	MOVW R30,R18
0004ef 2d61      	MOV  R22,R1
0004f0 914f      	POP  R20
0004f1 913f      	POP  R19
0004f2 912f      	POP  R18
0004f3 911f      	POP  R17
0004f4 2366      	TST  R22
0004f5 f032      	BRMI __DIVF215
0004f6 0f55      	LSL  R21
0004f7 1fee      	ROL  R30
0004f8 1fff      	ROL  R31
0004f9 1f66      	ROL  R22
0004fa 957a      	DEC  R23
0004fb f243      	BRVS __DIVF217
                 __DIVF215:
0004fc de7f      	RCALL __ROUND_REPACK
0004fd 915f      	POP  R21
0004fe 9508      	RET
                 
                 __CMPF12:
0004ff 2399      	TST  R25
000500 f09a      	BRMI __CMPF120
000501 2377      	TST  R23
000502 f042      	BRMI __CMPF121
000503 1797      	CP   R25,R23
000504 f048      	BRLO __CMPF122
000505 f429      	BRNE __CMPF121
000506 17ae      	CP   R26,R30
000507 07bf      	CPC  R27,R31
000508 0786      	CPC  R24,R22
000509 f020      	BRLO __CMPF122
00050a f031      	BREQ __CMPF123
                 __CMPF121:
00050b 9498      	CLZ
00050c 9488      	CLC
00050d 9508      	RET
                 __CMPF122:
00050e 9498      	CLZ
00050f 9408      	SEC
000510 9508      	RET
                 __CMPF123:
000511 9418      	SEZ
000512 9488      	CLC
000513 9508      	RET
                 __CMPF120:
000514 2377      	TST  R23
000515 f7c2      	BRPL __CMPF122
000516 1797      	CP   R25,R23
000517 f398      	BRLO __CMPF121
000518 f7a9      	BRNE __CMPF122
000519 17ea      	CP   R30,R26
00051a 07fb      	CPC  R31,R27
00051b 0768      	CPC  R22,R24
00051c f388      	BRLO __CMPF122
00051d f399      	BREQ __CMPF123
00051e cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
00051f 95f0      	COM  R31
000520 9560      	COM  R22
000521 9570      	COM  R23
000522 95e1      	NEG  R30
000523 4fff      	SBCI R31,-1
000524 4f6f      	SBCI R22,-1
000525 4f7f      	SBCI R23,-1
000526 9508      	RET
                 
                 __CWD1:
000527 2f6f      	MOV  R22,R31
000528 0f66      	ADD  R22,R22
000529 0b66      	SBC  R22,R22
00052a 2f76      	MOV  R23,R22
00052b 9508      	RET
                 
                 __GETD1S0:
00052c 81e8      	LD   R30,Y
00052d 81f9      	LDD  R31,Y+1
00052e 816a      	LDD  R22,Y+2
00052f 817b      	LDD  R23,Y+3
000530 9508      	RET
                 
                 __GETD2S0:
000531 81a8      	LD   R26,Y
000532 81b9      	LDD  R27,Y+1
000533 818a      	LDD  R24,Y+2
000534 819b      	LDD  R25,Y+3
000535 9508      	RET
                 
                 __PUTD1S0:
000536 83e8      	ST   Y,R30
000537 83f9      	STD  Y+1,R31
000538 836a      	STD  Y+2,R22
000539 837b      	STD  Y+3,R23
00053a 9508      	RET
                 
                 __PUTPARD1:
00053b 937a      	ST   -Y,R23
00053c 936a      	ST   -Y,R22
00053d 93fa      	ST   -Y,R31
00053e 93ea      	ST   -Y,R30
00053f 9508      	RET
                 
                 __PUTPARD2:
000540 939a      	ST   -Y,R25
000541 938a      	ST   -Y,R24
000542 93ba      	ST   -Y,R27
000543 93aa      	ST   -Y,R26
000544 9508      	RET
                 
                 __SWAPD12:
000545 2e18      	MOV  R1,R24
000546 2f86      	MOV  R24,R22
000547 2d61      	MOV  R22,R1
000548 2e19      	MOV  R1,R25
000549 2f97      	MOV  R25,R23
00054a 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00054b 2e1b      	MOV  R1,R27
00054c 2fbf      	MOV  R27,R31
00054d 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00054e 2e1a      	MOV  R1,R26
00054f 2fae      	MOV  R26,R30
000550 2de1      	MOV  R30,R1
000551 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  29 r1 :  30 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   6 r17:  25 r18:  12 r19:  12 r20:  22 r21:  63 r22:  77 r23:  72 
r24:  58 r25:  49 r26: 106 r27:  58 r28:   7 r29:   1 r30: 165 r31:  67 
x  :  10 y  : 129 z  :   9 
Registers used: 24 out of 35 (68.6%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   8 
adiw  :   8 and   :   5 andi  :   2 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  26 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  16 
brlt  :   2 brmi  :   9 brne  :  28 brpl  :   8 brsh  :   2 brtc  :   2 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  :  99 
cbi   :  12 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  31 cls   :   0 clt   :   3 clv   :   0 clz   :   2 com   :   8 
cp    :   7 cpc   :  12 cpi   :  28 cpse  :   0 dec   :  15 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   4 inc   :   4 jmp   :  29 ld    :  23 ldd   :  55 ldi   : 142 
lds   :   4 lpm   :   8 lsl   :  12 lsr   :   3 mov   :  51 movw  :  15 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   1 out   :  20 pop   :  18 push  :  18 rcall :  38 ret   :  49 
reti  :   0 rjmp  :  50 rol   :  24 ror   :  15 sbc   :   7 sbci  :  10 
sbi   :  11 sbic  :   0 sbis  :   1 sbiw  :   9 sbr   :   2 sbrc  :   1 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  42 std   :  20 sts   :   6 sub   :   4 subi  :  14 swap  :   1 
tst   :  19 wdr   :   1 
Instructions used: 78 out of 116 (67.2%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000aa4   2564    160   2724   16384  16.6%
[.dseg] 0x000060 0x0001ef      0    143    143    1119  12.8%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 5 warnings
