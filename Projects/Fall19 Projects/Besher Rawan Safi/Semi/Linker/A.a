;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 1/6/2020
;Author  : BeSHeRXs
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;
;bit C1=0;
;bit C2=0 ;
;bit C3=0;
;bit C4=0 ;
;bit C5=0;
;
;
;
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#include <lcd.h>
;#include <delay.h>
;#include <stdlib.h>
;unsigned char *str;
;#asm
;PCODE: $0000000D VOL: 0
.equ __lcd_port=0x15 ;PORTC
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 002A #endasm
;
;float Position_ref=0;
;float Position=0;
;
;bit sampling=0;
;
;
;interrupt [TIM2_COMP] void timer2_comp_isr(void)
; 0000 0033 {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0034 //sampling=1;
; 0000 0035 PORTA.7=1;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0036 ADCSRA.6=1;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0037 
; 0000 0038 }
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;
;
;
;interrupt [EXT_INT0] void direction (void)
; 0000 003D {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 003E 
; 0000 003F if(C1==1) Position_ref=30;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0040 else if(C2==1) Position_ref=60;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0041 else if(C3==1) Position_ref=90;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0042 else if(C4==1) Position_ref=120;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0043 else if(C5==1) Position_ref=150;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0044 else Position_ref=0;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0045 
; 0000 0046 
; 0000 0047 
; 0000 0048 }
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;
;
;void main(void)
; 0000 004C {
;PCODE: $00000048 VOL: 0
; 0000 004D 
; 0000 004E 
; 0000 004F 
; 0000 0050 // PI:
; 0000 0051 const float kp=1,ki=0,Ts=0.001;
; 0000 0052 float e_k=0,e_k_1=0;
; 0000 0053 float u_k=0,u_k_1=0;
; 0000 0054 const float a=(kp+ki*Ts),b=-kp;
; 0000 0055 //PI
; 0000 0056 
; 0000 0057 
; 0000 0058 
; 0000 0059 bit M=0;
; 0000 005A char moving[8]={0b00001001,0b00001000,0b00001100,0b00000100,0b000000110,0b00000010,0b00000011,0b000010001};
; 0000 005B 
; 0000 005C int counter=0;
; 0000 005D 
; 0000 005E lcd_init(16);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;	kp -> Y+40
;	ki -> Y+36
;	Ts -> Y+32
;	e_k -> Y+28
;	e_k_1 -> Y+24
;	u_k -> Y+20
;	u_k_1 -> Y+16
;	a -> Y+12
;	b -> Y+8
;	M -> R15.0
;	moving -> Y+0
;	counter -> R16,R17
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 005F 
; 0000 0060 DDRD=0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0061 DDRA.7=1;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0062 PORTD=0xFF;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0063 DDRB=0XFF;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0064 GICR=0b01000000;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0065 MCUCR=0B00000010;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0066 ADMUX=0b00000000;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0067 ADCSRA=0B10000110;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0068 
; 0000 0069 TCCR2=0b00001011;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 006A OCR2=0xF9;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 006B TIMSK=0b10000000;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 006C 
; 0000 006D 
; 0000 006E 
; 0000 006F 
; 0000 0070 
; 0000 0071 
; 0000 0072 
; 0000 0073 
; 0000 0074 
; 0000 0075 
; 0000 0076 
; 0000 0077 
; 0000 0078 #asm ("sei")
;PCODE: $00000069 VOL: 0
	sei
;PCODE: $0000006A VOL: 0
; 0000 0079 
; 0000 007A while (1)
;PCODE: $0000006B VOL: 0
; 0000 007B       {
; 0000 007C 
; 0000 007D       if (PIND.7==0&&M==0)
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 007E       {
; 0000 007F       M=1   ;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0080       C1=~C1  ;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0081       }
; 0000 0082 
; 0000 0083 
; 0000 0084     if (PIND.6==0&&M==0)
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0085       {
; 0000 0086       M=1   ;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0087       C2=~C2;   }
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0088 
; 0000 0089 
; 0000 008A     if (PIND.5==0&&M==0)
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 008B       {
; 0000 008C       M=1   ;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 008D       C3=~C3  ;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 008E       }
; 0000 008F 
; 0000 0090 
; 0000 0091     if (PIND.4==0&&M==0)
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0092       {
; 0000 0093       M=1   ;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0094       C4=~C4  ;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0095       }
; 0000 0096 
; 0000 0097 
; 0000 0098     if (PIND.3==0&&M==0)
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0099       {
; 0000 009A       M=1   ;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 009B       C5=~C5   ;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 009C       }
; 0000 009D 
; 0000 009E 
; 0000 009F     if (PIND.7==1 && PIND.6==1 && PIND.5==1 && PIND.4==1 && PIND.3==1 && M==1)
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00A0                  M=0;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 00A1 
; 0000 00A2 
; 0000 00A3 
; 0000 00A4 
; 0000 00A5 
; 0000 00A6 
; 0000 00A7 
; 0000 00A8       //start lcd
; 0000 00A9       lcd_clear();
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 00AA      lcd_puts("Position=");
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 00AB itoa(Position,str);
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 00AC   lcd_puts(str) ;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00AD 
; 0000 00AE 
; 0000 00AF 
; 0000 00B0      lcd_gotoxy(0,1);
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00B1 
; 0000 00B2      if (C1==1)
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 00B3      {
; 0000 00B4      //Position_ref=10;
; 0000 00B5      lcd_puts("C1");
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 00B6      }
; 0000 00B7      else
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 00B8      lcd_puts("  ");
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00B9 
; 0000 00BA 
; 0000 00BB      if (C2==1)
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00BC      {//Position_ref=15 ;
; 0000 00BD      lcd_puts("C2");
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00BE      }
; 0000 00BF      else
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00C0      lcd_puts("  ");
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 00C1 
; 0000 00C2 
; 0000 00C3      if (C3==1)
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00C4      { //Position_ref=20 ;
; 0000 00C5 
; 0000 00C6 
; 0000 00C7      lcd_puts("C3");
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00C8      }
; 0000 00C9      else
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00CA      lcd_puts("  ");
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00CB 
; 0000 00CC 
; 0000 00CD 
; 0000 00CE      if (C4==1)
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00CF      {
; 0000 00D0      //Position_ref=25;
; 0000 00D1      lcd_puts("C4");
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 00D2      }
; 0000 00D3      else
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00D4      lcd_puts("  ");
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00D5 
; 0000 00D6 
; 0000 00D7      if (C5==1)
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00D8      {  //Position_ref=30;
; 0000 00D9 
; 0000 00DA 
; 0000 00DB      lcd_puts("C5");
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00DC      }
; 0000 00DD      else
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00DE      lcd_puts("  ");
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00DF      delay_ms(50);
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00E0      //end lcd
; 0000 00E1 
; 0000 00E2 
; 0000 00E3 
; 0000 00E4 
; 0000 00E5 //if(sampling==1)
; 0000 00E6 //{
; 0000 00E7 
; 0000 00E8       //adc start
; 0000 00E9 Position=0.175953*ADCW;   //0.175953 = 180/1023
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00EA //adc end
; 0000 00EB 
; 0000 00EC e_k=Position_ref-Position;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00ED u_k=a*e_k+b*e_k_1+u_k_1;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 00EE u_k_1=u_k;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00EF e_k_1=e_k;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00F0 
; 0000 00F1 if(u_k>1.5) {
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00F2 PORTB=moving[counter] ;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00F3 counter++;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 00F4 if(counter==8) counter=0;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00F5 }
;PCODE: $0000015B VOL: 0
; 0000 00F6 
; 0000 00F7 if(u_k<-1.5) {
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00F8 counter=8;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00F9  PORTB=moving[counter];
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00FA counter--;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00FB if(counter==-1) counter=8;
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00FC  }
;PCODE: $0000016E VOL: 0
; 0000 00FD 
; 0000 00FE 
; 0000 00FF 
; 0000 0100 sampling=0;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0101 }
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 0102 
; 0000 0103 }
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0

	.DSEG
_0x29:
	.BYTE 0x28
