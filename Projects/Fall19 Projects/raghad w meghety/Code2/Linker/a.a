;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
; unsigned char z;
;// USART Receiver interrupt service routine
;interrupt [USART_RXC] void usart_rx_isr(void)
; 0000 0006 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0007 z=UDR;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0008 }
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;
;
;
;// Declare your global variables here
;
;void main(void)
; 0000 000F {
;PCODE: $00000014 VOL: 0
; 0000 0010 
; 0000 0011 DDRB=0xFF;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0012 DDRD=0x20;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0013 
; 0000 0014 // Timer/Counter 1 initialization
; 0000 0015 // Clock source: System Clock
; 0000 0016 // Clock value: 125.000 kHz
; 0000 0017 // Mode: Fast PWM top=0x00FF
; 0000 0018 // OC1A output: Non-Inv.
; 0000 0019 // OC1B output: Discon.
; 0000 001A // Noise Canceler: Off
; 0000 001B // Input Capture on Falling Edge
; 0000 001C // Timer1 Overflow Interrupt: Off
; 0000 001D // Input Capture Interrupt: Off
; 0000 001E // Compare A Match Interrupt: Off
; 0000 001F // Compare B Match Interrupt: Off
; 0000 0020 TCCR1A=0x81;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0021 TCCR1B=0x0B;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0022 TCNT1H=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0023 TCNT1L=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0024 ICR1H=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0025 ICR1L=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0026 OCR1AH=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0027 OCR1AL=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0028 OCR1BH=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0029 OCR1BL=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002A 
; 0000 002B // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 002C TIMSK=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 002D 
; 0000 002E // USART initialization
; 0000 002F // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0030 // USART Receiver: On
; 0000 0031 // USART Transmitter: Off
; 0000 0032 // USART Mode: Asynchronous
; 0000 0033 // USART Baud Rate: 9600
; 0000 0034 UCSRA=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0035 UCSRB=0x90;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0036 UCSRC=0x86;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0037 UBRRH=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0038 UBRRL=0x33;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0039 
; 0000 003A // Global enable interrupts
; 0000 003B #asm("sei")
;PCODE: $00000039 VOL: 0
	sei
;PCODE: $0000003A VOL: 0
; 0000 003C 
; 0000 003D OCR1AH=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 003E OCR1AL=127;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 003F while (1)
;PCODE: $0000003F VOL: 0
; 0000 0040       {
; 0000 0041          if (z>170) {PORTB=0;}
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0042 else  {  PORTB=~z;};
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0043 
; 0000 0044      OCR1AH=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0045      if (z>170) {OCR1A=0 ;}
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0046 else  {   OCR1AL=170-z;};
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0047 
; 0000 0048 
; 0000 0049 
; 0000 004A 
; 0000 004B }
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 004C }
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
