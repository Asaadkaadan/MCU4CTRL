;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :  ADC
;Version :
;Date    : 03/01/2020
;Author  : HP
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdlib.h>
;#include <delay.h>
;// Alphanumeric LCD functions
;#include <alcd.h>
;unsigned long int a,volt;
;unsigned char *b;
;// Standard Input/Output functions
;#include <stdio.h>
;
;
;
;// Declare your global variables here
;
;void main(void)
; 0000 0027 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0028 // Declare your local variables here
; 0000 0029 
; 0000 002A // Input/Output Ports initialization
; 0000 002B // Port A initialization
; 0000 002C // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 002D // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 002E PORTA=0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 002F DDRA=0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0030 
; 0000 0031 // Port B initialization
; 0000 0032 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0033 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0034 PORTB=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0035 DDRB=0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0036 
; 0000 0037 // Port C initialization
; 0000 0038 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0039 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 003A PORTC=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 003B DDRC=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 003C 
; 0000 003D // Port D initialization
; 0000 003E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 003F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0040 PORTD=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0041 DDRD=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0042 
; 0000 0043 // Timer/Counter 0 initialization
; 0000 0044 // Clock source: System Clock
; 0000 0045 // Clock value: Timer 0 Stopped
; 0000 0046 // Mode: Normal top=0xFF
; 0000 0047 // OC0 output: Disconnected
; 0000 0048 TCCR0=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0049 TCNT0=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 004A OCR0=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 004B 
; 0000 004C // Timer/Counter 1 initialization
; 0000 004D // Clock source: System Clock
; 0000 004E // Clock value: Timer1 Stopped
; 0000 004F // Mode: Normal top=0xFFFF
; 0000 0050 // OC1A output: Discon.
; 0000 0051 // OC1B output: Discon.
; 0000 0052 // Noise Canceler: Off
; 0000 0053 // Input Capture on Falling Edge
; 0000 0054 // Timer1 Overflow Interrupt: Off
; 0000 0055 // Input Capture Interrupt: Off
; 0000 0056 // Compare A Match Interrupt: Off
; 0000 0057 // Compare B Match Interrupt: Off
; 0000 0058 TCCR1A=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0059 TCCR1B=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 005A TCNT1H=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 005B TCNT1L=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 005C ICR1H=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 005D ICR1L=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 005E OCR1AH=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 005F OCR1AL=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0060 OCR1BH=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0061 OCR1BL=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0062 
; 0000 0063 // Timer/Counter 2 initialization
; 0000 0064 // Clock source: System Clock
; 0000 0065 // Clock value: Timer2 Stopped
; 0000 0066 // Mode: Normal top=0xFF
; 0000 0067 // OC2 output: Disconnected
; 0000 0068 ASSR=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0069 TCCR2=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 006A TCNT2=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 006B OCR2=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 006C 
; 0000 006D // External Interrupt(s) initialization
; 0000 006E // INT0: Off
; 0000 006F // INT1: Off
; 0000 0070 // INT2: Off
; 0000 0071 MCUCR=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0072 MCUCSR=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0073 
; 0000 0074 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0075 TIMSK=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0076 
; 0000 0077 // USART initialization
; 0000 0078 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0079 // USART Receiver: Off
; 0000 007A // USART Transmitter: On
; 0000 007B // USART Mode: Asynchronous
; 0000 007C // USART Baud Rate: 9600
; 0000 007D UCSRA=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 007E UCSRB=0x08;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 007F UCSRC=0x86;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0080 UBRRH=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0081 UBRRL=0x33;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0082 
; 0000 0083 // Analog Comparator initialization
; 0000 0084 // Analog Comparator: Off
; 0000 0085 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0086 ACSR=0x80;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0087 SFIOR=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0088 
; 0000 0089 // ADC initialization
; 0000 008A // ADC Clock frequency: 125.000 kHz
; 0000 008B // ADC Voltage Reference: AREF pin
; 0000 008C // ADC Auto Trigger Source: ADC Stopped
; 0000 008D // Only the 8 most significant bits of
; 0000 008E // the AD conversion result are used
; 0000 008F ADMUX=0x22;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0090 ADCSRA=0x86;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0091 
; 0000 0092 // SPI initialization
; 0000 0093 // SPI disabled
; 0000 0094 SPCR=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0095 
; 0000 0096 // TWI initialization
; 0000 0097 // TWI disabled
; 0000 0098 TWCR=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0099 
; 0000 009A // Alphanumeric LCD initialization
; 0000 009B // Connections are specified in the
; 0000 009C // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 009D // RS - PORTC Bit 0
; 0000 009E // RD - PORTC Bit 1
; 0000 009F // EN - PORTC Bit 2
; 0000 00A0 // D4 - PORTC Bit 4
; 0000 00A1 // D5 - PORTC Bit 5
; 0000 00A2 // D6 - PORTC Bit 6
; 0000 00A3 // D7 - PORTC Bit 7
; 0000 00A4 // Characters/line: 16
; 0000 00A5 lcd_init(16);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 00A6 
; 0000 00A7 while (1)
;PCODE: $0000005E VOL: 0
; 0000 00A8       {
; 0000 00A9      ADCSRA.6=1;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 00AA           while (ADCSRA.4==0) {};
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 00AB           a=ADCH;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 00AC 
; 0000 00AD           volt=(5000*a)/256;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00AE           itoa(a,b);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00AF           lcd_puts("ADC=");
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 00B0           lcd_puts(b);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 00B1           lcd_gotoxy(0,1);
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 00B2           itoa(volt,b);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 00B3           lcd_puts("mVolt=");
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 00B4           lcd_puts(b);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 00B5           delay_ms(1000);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 00B6           lcd_clear();
;PCODE: $00000089 VOL: 0
; 0000 00B7           delay_ms(100);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 00B8 
; 0000 00B9            while (UCSRA.5==0) {};
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 00BA            UDR=a;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00BB 
; 0000 00BC 
; 0000 00BD       }
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00BE }
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0

	.DSEG
_0xB:
	.BYTE 0xC
