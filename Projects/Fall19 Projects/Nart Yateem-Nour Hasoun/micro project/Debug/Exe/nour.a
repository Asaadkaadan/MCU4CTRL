;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdlib.h>
;#include <delay.h>
;#include <lcd.h>
;#asm
;PCODE: $0000000D VOL: 0
.equ __lcd_port=0x15 ;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0007 #endasm
;unsigned int adc_data[2];
;char i;
;char *s;
;char *x;
;char *y;
;float a;
;float temp;
;float m1;
;float m2;
;float m3;
;float volt;
;float lux;
;float z;
;interrupt [ADC_INT] void adc_isr(void)
; 0000 0016 {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0017 // Read the AD conversion result
; 0000 0018 adc_data[i]=ADCW;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0019 // Select next ADC input
; 0000 001A i++;
;PCODE: $00000019 VOL: 0
; 0000 001B if (i==2) i=0;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001C ADMUX=i;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 001D delay_us(1);
;PCODE: $00000021 VOL: 0
; 0000 001E 
; 0000 001F ADCSRA.6=1;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0020 }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;void main(void)
; 0000 0022 {
;PCODE: $00000027 VOL: 0
; 0000 0023 TCCR0=0b01101010;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0024 TCNT0=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0025 OCR0=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0026 m1=-0.8;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0027 m2=-0.25;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0028 m3=-0.125;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0029 
; 0000 002A DDRB.3=1;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 002B // Select ADC1 channel
; 0000 002C // ADC initialization
; 0000 002D // ADC Clock frequency: 125.000 kHz
; 0000 002E // ADC Voltage Reference: AREF pin
; 0000 002F // ADC Auto Trigger Source: ADC Stopped
; 0000 0030 ADMUX=0;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0031 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (1<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (0<<ADPS0);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0032 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0033 
; 0000 0034 lcd_init(16);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0035 lcd_clear();
;PCODE: $0000003E VOL: 0
; 0000 0036 // Global enable interrupts
; 0000 0037 #asm("sei")
;PCODE: $0000003F VOL: 0
	sei
;PCODE: $00000040 VOL: 0
; 0000 0038 // Start the AD conversion
; 0000 0039 ADCSRA.6=1;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003A while (1)
;PCODE: $00000043 VOL: 0
; 0000 003B {
; 0000 003C a=adc_data[0];
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 003D volt=adc_data[1]*4.88281;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 003E if (volt<800)
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 003F {
; 0000 0040 lux=1000; }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0041 else if(volt>=800&&volt<1300)
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0042   {lux=m1*volt+1640;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0043   }
; 0000 0044   else if(volt>=1400&&volt<2200)
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0045   {lux=m2*volt+750;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0046   }
; 0000 0047   else if (volt>=2500&&volt<3500)
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0048   {lux=m3*volt+487.5;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0049   }
; 0000 004A   else if(volt>4300)
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 004B {
; 0000 004C lux=0;}
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 004D 
; 0000 004E z=lux;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 004F OCR0=a/4;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0050 temp=a*0.488281;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0051 itoa(temp,s);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0052 lcd_gotoxy(0,0);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0053 lcd_puts("temp=");
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0054 lcd_puts(s);
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0055 lcd_gotoxy(0,1);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0056 lcd_puts("LUX=");
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0057 itoa(z,x);
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0058 lcd_gotoxy(4,1);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0059 lcd_puts(x);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 005A lcd_gotoxy(9,1);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 005B lcd_puts("vo=");
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 005C itoa(volt,y);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 005D lcd_puts(y);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 005E delay_ms(50);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 005F lcd_clear();
;PCODE: $000000D9 VOL: 0
; 0000 0060 }
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0061 }
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0

	.DSEG
_0x1C:
	.BYTE 0xF
