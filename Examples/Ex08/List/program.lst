
AVRASM ver. 2.1.30  C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application17\List\program.asm Sat Apr 16 19:27:30 2016

C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application17\List\program.asm(1072): warning: Register r5 already defined by the .DEF directive
C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application17\List\program.asm(1073): warning: Register r4 already defined by the .DEF directive
C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application17\List\program.asm(1074): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 1.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0044 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 6f56
00002b 746c
00002c 203d
00002d 2020      	.DB  0x56,0x6F,0x6C,0x74,0x3D,0x20,0x20,0x20
00002e 2020
00002f 2020
000030 2020
000031 5620      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x56
C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application17\List\program.asm(1108): warning: .cseg .db misalignment - padding zero byte
000032 0000      	.DB  0x0
                 _0x2000060:
C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application17\List\program.asm(1110): warning: .cseg .db misalignment - padding zero byte
000033 0001      	.DB  0x1
                 _0x2000000:
000034 4e2d
000035 4e41
000036 4900
000037 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application17\List\program.asm(1113): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x0
                 _0x2020003:
000039 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003a 0011      	.DW  0x11
00003b 0160      	.DW  _0xB
00003c 0054      	.DW  _0x0*2
                 
00003d 0001      	.DW  0x01
00003e 0179      	.DW  __seed_G100
00003f 0066      	.DW  _0x2000060*2
                 
000040 0002      	.DW  0x02
000041 017d      	.DW  __base_y_G101
000042 0072      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
000043 0000      	.DW  0
                 
                 __RESET:
000044 94f8      	CLI
000045 27ee      	CLR  R30
000046 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000047 e0f1      	LDI  R31,1
000048 bffb      	OUT  GICR,R31
000049 bfeb      	OUT  GICR,R30
00004a bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00004b e1f8      	LDI  R31,0x18
00004c bdf1      	OUT  WDTCR,R31
00004d bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00004e e08d      	LDI  R24,(14-2)+1
00004f e0a2      	LDI  R26,2
000050 27bb      	CLR  R27
                 __CLEAR_REG:
000051 93ed      	ST   X+,R30
000052 958a      	DEC  R24
000053 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000054 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000055 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000056 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000057 93ed      	ST   X+,R30
000058 9701      	SBIW R24,1
000059 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005a e7e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005c 9185      	LPM  R24,Z+
00005d 9195      	LPM  R25,Z+
00005e 9700      	SBIW R24,0
00005f f061      	BREQ __GLOBAL_INI_END
000060 91a5      	LPM  R26,Z+
000061 91b5      	LPM  R27,Z+
000062 9005      	LPM  R0,Z+
000063 9015      	LPM  R1,Z+
000064 01bf      	MOVW R22,R30
000065 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000066 9005      	LPM  R0,Z+
000067 920d      	ST   X+,R0
000068 9701      	SBIW R24,1
000069 f7e1      	BRNE __GLOBAL_INI_LOOP
00006a 01fb      	MOVW R30,R22
00006b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006d bfed      	OUT  SPL,R30
00006e e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000070 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000071 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000072 940c 0074 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include <lcd.h>
                 ;#asm
                 .equ __lcd_port=0x15 ;PORTC
                 ; 0000 0007 #endasm
                 ;float  v;
                 ;char s[4];
                 ;void main(void)
                 ; 0000 000B {
                 
                 	.CSEG
                 _main:
                 ; 0000 000C // Select ADC0 channel
                 ; 0000 000D //ADC Voltage Reference: AVcc pin
                 ; 0000 000E ADMUX=0B01000000;
000074 e4e0      	LDI  R30,LOW(64)
000075 b9e7      	OUT  0x7,R30
                 ; 0000 000F // ADC Clock frequency: 125 kHz
                 ; 0000 0010 // Single Conversion mode
                 ; 0000 0011 ADCSRA=0B10000011;
000076 e8e3      	LDI  R30,LOW(131)
000077 b9e6      	OUT  0x6,R30
                 ; 0000 0012 lcd_init(16);
000078 e1a0      	LDI  R26,LOW(16)
000079 940e 027f 	CALL _lcd_init
                 ; 0000 0013 lcd_clear();
00007b 940e 0230 	CALL _lcd_clear
                 ; 0000 0014 while (1)
                 _0x3:
                 ; 0000 0015   {
                 ; 0000 0016 ADCSRA.6=1;   // Start the AD conversion
00007d 9a36      	SBI  0x6,6
                 ; 0000 0017 while (ADCSRA.4==0){}  // Wait for the AD conversion to complete
                 _0x8:
00007e 9b34      	SBIS 0x6,4
00007f cffe      	RJMP _0x8
                 ; 0000 0018     v=ADCW*0.009775;
000080 b1e4      	IN   R30,0x4
000081 b1f5      	IN   R31,0x4+1
000082 2766      	CLR  R22
000083 2777      	CLR  R23
000084 940e 0383 	CALL __CDF1
                +
000086 e5a2     +LDI R26 , LOW ( 0x3C202752 )
000087 e2b7     +LDI R27 , HIGH ( 0x3C202752 )
000088 e280     +LDI R24 , BYTE3 ( 0x3C202752 )
000089 e39c     +LDI R25 , BYTE4 ( 0x3C202752 )
                 	__GETD2N 0x3C202752
00008a 940e 040d 	CALL __MULF12
00008c 93e0 0171 	STS  _v,R30
00008e 93f0 0172 	STS  _v+1,R31
000090 9360 0173 	STS  _v+2,R22
000092 9370 0174 	STS  _v+3,R23
                 ; 0000 0019     ftoa(v,3,s);
000094 940e 04dc 	CALL __PUTPARD1
000096 e0e3      	LDI  R30,LOW(3)
000097 93ea      	ST   -Y,R30
000098 e7a5      	LDI  R26,LOW(_s)
000099 e0b1      	LDI  R27,HIGH(_s)
00009a 940e 00b4 	CALL _ftoa
                 ; 0000 001A     lcd_gotoxy(0,0);
00009c e0e0      	LDI  R30,LOW(0)
00009d 93ea      	ST   -Y,R30
00009e e0a0      	LDI  R26,LOW(0)
00009f 940e 0220 	CALL _lcd_gotoxy
                 ; 0000 001B     lcd_puts("Volt=          V");
                +
0000a1 e6a0     +LDI R26 , LOW ( _0xB + ( 0 ) )
0000a2 e0b1     +LDI R27 , HIGH ( _0xB + ( 0 ) )
                 	__POINTW2MN _0xB,0
0000a3 940e 025d 	CALL _lcd_puts
                 ; 0000 001C     lcd_gotoxy(5,0);
0000a5 e0e5      	LDI  R30,LOW(5)
0000a6 93ea      	ST   -Y,R30
0000a7 e0a0      	LDI  R26,LOW(0)
0000a8 940e 0220 	CALL _lcd_gotoxy
                 ; 0000 001D     lcd_puts(s);
0000aa e7a5      	LDI  R26,LOW(_s)
0000ab e0b1      	LDI  R27,HIGH(_s)
0000ac 940e 025d 	CALL _lcd_puts
                 ; 0000 001E     delay_ms(250);
0000ae efaa      	LDI  R26,LOW(250)
0000af e0b0      	LDI  R27,0
0000b0 940e 030d 	CALL _delay_ms
                 ; 0000 001F   };
0000b2 cfca      	RJMP _0x3
                 ; 0000 0020 }
                 _0xC:
0000b3 cfff      	RJMP _0xC
                 
                 	.DSEG
                 _0xB:
000160           	.BYTE 0x11
                 
                 	.CSEG
                 _ftoa:
0000b4 93ba      	ST   -Y,R27
0000b5 93aa      	ST   -Y,R26
0000b6 9724      	SBIW R28,4
0000b7 e0e0      	LDI  R30,LOW(0)
0000b8 83e8      	ST   Y,R30
0000b9 83e9      	STD  Y+1,R30
0000ba 83ea      	STD  Y+2,R30
0000bb e3ef      	LDI  R30,LOW(63)
0000bc 83eb      	STD  Y+3,R30
0000bd 931a      	ST   -Y,R17
0000be 930a      	ST   -Y,R16
0000bf 85eb      	LDD  R30,Y+11
0000c0 85fc      	LDD  R31,Y+11+1
0000c1 3fef      	CPI  R30,LOW(0xFFFF)
0000c2 efaf      	LDI  R26,HIGH(0xFFFF)
0000c3 07fa      	CPC  R31,R26
0000c4 f449      	BRNE _0x200000D
0000c5 81ee      	LDD  R30,Y+6
0000c6 81ff      	LDD  R31,Y+6+1
0000c7 93fa      	ST   -Y,R31
0000c8 93ea      	ST   -Y,R30
                +
0000c9 e6a8     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
0000ca e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
0000cb 940e 0300 	CALL _strcpyf
0000cd c10e      	RJMP _0x20A0004
                 _0x200000D:
0000ce 3fef      	CPI  R30,LOW(0x7FFF)
0000cf e7af      	LDI  R26,HIGH(0x7FFF)
0000d0 07fa      	CPC  R31,R26
0000d1 f449      	BRNE _0x200000C
0000d2 81ee      	LDD  R30,Y+6
0000d3 81ff      	LDD  R31,Y+6+1
0000d4 93fa      	ST   -Y,R31
0000d5 93ea      	ST   -Y,R30
                +
0000d6 e6a9     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0000d7 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
0000d8 940e 0300 	CALL _strcpyf
0000da c101      	RJMP _0x20A0004
                 _0x200000C:
0000db 85ac      	LDD  R26,Y+12
0000dc 23aa      	TST  R26
0000dd f492      	BRPL _0x200000F
                +
0000de 85e9     +LDD R30 , Y + 9
0000df 85fa     +LDD R31 , Y + 9 + 1
0000e0 856b     +LDD R22 , Y + 9 + 2
0000e1 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0000e2 940e 0317 	CALL __ANEGF1
                +
0000e4 87e9     +STD Y + 9 , R30
0000e5 87fa     +STD Y + 9 + 1 , R31
0000e6 876b     +STD Y + 9 + 2 , R22
0000e7 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0000e8 81ae      	LDD  R26,Y+6
0000e9 81bf      	LDD  R27,Y+6+1
0000ea 9611      	ADIW R26,1
0000eb 83ae      	STD  Y+6,R26
0000ec 83bf      	STD  Y+6+1,R27
0000ed 9711      	SBIW R26,1
0000ee e2ed      	LDI  R30,LOW(45)
0000ef 93ec      	ST   X,R30
                 _0x200000F:
0000f0 85a8      	LDD  R26,Y+8
0000f1 30a7      	CPI  R26,LOW(0x7)
0000f2 f010      	BRLO _0x2000010
0000f3 e0e6      	LDI  R30,LOW(6)
0000f4 87e8      	STD  Y+8,R30
                 _0x2000010:
0000f5 8518      	LDD  R17,Y+8
                 _0x2000011:
0000f6 2fe1      	MOV  R30,R17
0000f7 5011      	SUBI R17,1
0000f8 30e0      	CPI  R30,0
0000f9 f079      	BREQ _0x2000013
                +
0000fa 81aa     +LDD R26 , Y + 2
0000fb 81bb     +LDD R27 , Y + 2 + 1
0000fc 818c     +LDD R24 , Y + 2 + 2
0000fd 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
0000fe eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0000ff ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000100 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000101 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000102 940e 040d 	CALL __MULF12
                +
000104 83ea     +STD Y + 2 , R30
000105 83fb     +STD Y + 2 + 1 , R31
000106 836c     +STD Y + 2 + 2 , R22
000107 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000108 cfed      	RJMP _0x2000011
                 _0x2000013:
                +
000109 81ea     +LDD R30 , Y + 2
00010a 81fb     +LDD R31 , Y + 2 + 1
00010b 816c     +LDD R22 , Y + 2 + 2
00010c 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00010d 85a9     +LDD R26 , Y + 9
00010e 85ba     +LDD R27 , Y + 9 + 1
00010f 858b     +LDD R24 , Y + 9 + 2
000110 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000111 940e 03bd 	CALL __ADDF12
                +
000113 87e9     +STD Y + 9 , R30
000114 87fa     +STD Y + 9 + 1 , R31
000115 876b     +STD Y + 9 + 2 , R22
000116 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000117 e010      	LDI  R17,LOW(0)
                +
000118 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000119 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00011a e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00011b e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
00011c 83ea     +STD Y + 2 , R30
00011d 83fb     +STD Y + 2 + 1 , R31
00011e 836c     +STD Y + 2 + 2 , R22
00011f 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 _0x2000014:
                +
000120 81ea     +LDD R30 , Y + 2
000121 81fb     +LDD R31 , Y + 2 + 1
000122 816c     +LDD R22 , Y + 2 + 2
000123 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000124 85a9     +LDD R26 , Y + 9
000125 85ba     +LDD R27 , Y + 9 + 1
000126 858b     +LDD R24 , Y + 9 + 2
000127 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000128 940e 04a0 	CALL __CMPF12
00012a f0d8      	BRLO _0x2000016
                +
00012b 81aa     +LDD R26 , Y + 2
00012c 81bb     +LDD R27 , Y + 2 + 1
00012d 818c     +LDD R24 , Y + 2 + 2
00012e 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
00012f e0e0     +LDI R30 , LOW ( 0x41200000 )
000130 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000131 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000132 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000133 940e 040d 	CALL __MULF12
                +
000135 83ea     +STD Y + 2 , R30
000136 83fb     +STD Y + 2 + 1 , R31
000137 836c     +STD Y + 2 + 2 , R22
000138 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000139 5f1f      	SUBI R17,-LOW(1)
00013a 3217      	CPI  R17,39
00013b f048      	BRLO _0x2000017
00013c 81ee      	LDD  R30,Y+6
00013d 81ff      	LDD  R31,Y+6+1
00013e 93fa      	ST   -Y,R31
00013f 93ea      	ST   -Y,R30
                +
000140 e6ad     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
000141 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTW2FN _0x2000000,5
000142 940e 0300 	CALL _strcpyf
000144 c097      	RJMP _0x20A0004
                 _0x2000017:
000145 cfda      	RJMP _0x2000014
                 _0x2000016:
000146 3010      	CPI  R17,0
000147 f449      	BRNE _0x2000018
000148 81ae      	LDD  R26,Y+6
000149 81bf      	LDD  R27,Y+6+1
00014a 9611      	ADIW R26,1
00014b 83ae      	STD  Y+6,R26
00014c 83bf      	STD  Y+6+1,R27
00014d 9711      	SBIW R26,1
00014e e3e0      	LDI  R30,LOW(48)
00014f 93ec      	ST   X,R30
000150 c049      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
000151 2fe1      	MOV  R30,R17
000152 5011      	SUBI R17,1
000153 30e0      	CPI  R30,0
000154 f411      	BRNE PC+3
000155 940c 019a 	JMP _0x200001C
                +
000157 81aa     +LDD R26 , Y + 2
000158 81bb     +LDD R27 , Y + 2 + 1
000159 818c     +LDD R24 , Y + 2 + 2
00015a 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
00015b eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00015c ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00015d ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00015e e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00015f 940e 040d 	CALL __MULF12
                +
000161 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000162 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000163 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000164 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000165 940e 03bd 	CALL __ADDF12
000167 01df      	MOVW R26,R30
000168 01cb      	MOVW R24,R22
000169 940e 02e9 	CALL _floor
                +
00016b 83ea     +STD Y + 2 , R30
00016c 83fb     +STD Y + 2 + 1 , R31
00016d 836c     +STD Y + 2 + 2 , R22
00016e 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                +
00016f 85a9     +LDD R26 , Y + 9
000170 85ba     +LDD R27 , Y + 9 + 1
000171 858b     +LDD R24 , Y + 9 + 2
000172 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000173 940e 045b 	CALL __DIVF21
000175 940e 034a 	CALL __CFD1U
000177 2f0e      	MOV  R16,R30
000178 81ae      	LDD  R26,Y+6
000179 81bf      	LDD  R27,Y+6+1
00017a 9611      	ADIW R26,1
00017b 83ae      	STD  Y+6,R26
00017c 83bf      	STD  Y+6+1,R27
00017d 9711      	SBIW R26,1
00017e 2fe0      	MOV  R30,R16
00017f 5de0      	SUBI R30,-LOW(48)
000180 93ec      	ST   X,R30
000181 2fe0      	MOV  R30,R16
000182 e0f0      	LDI  R31,0
                +
000183 81aa     +LDD R26 , Y + 2
000184 81bb     +LDD R27 , Y + 2 + 1
000185 818c     +LDD R24 , Y + 2 + 2
000186 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000187 940e 04c8 	CALL __CWD1
000189 940e 0383 	CALL __CDF1
00018b 940e 040d 	CALL __MULF12
                +
00018d 85a9     +LDD R26 , Y + 9
00018e 85ba     +LDD R27 , Y + 9 + 1
00018f 858b     +LDD R24 , Y + 9 + 2
000190 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000191 940e 04e6 	CALL __SWAPD12
000193 940e 03b6 	CALL __SUBF12
                +
000195 87e9     +STD Y + 9 , R30
000196 87fa     +STD Y + 9 + 1 , R31
000197 876b     +STD Y + 9 + 2 , R22
000198 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000199 cfb7      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
00019a 85e8      	LDD  R30,Y+8
00019b 30e0      	CPI  R30,0
00019c f409      	BRNE _0x200001D
00019d c03a      	RJMP _0x20A0003
                 _0x200001D:
00019e 81ae      	LDD  R26,Y+6
00019f 81bf      	LDD  R27,Y+6+1
0001a0 9611      	ADIW R26,1
0001a1 83ae      	STD  Y+6,R26
0001a2 83bf      	STD  Y+6+1,R27
0001a3 9711      	SBIW R26,1
0001a4 e2ee      	LDI  R30,LOW(46)
0001a5 93ec      	ST   X,R30
                 _0x200001E:
0001a6 85e8      	LDD  R30,Y+8
0001a7 50e1      	SUBI R30,LOW(1)
0001a8 87e8      	STD  Y+8,R30
0001a9 5fef      	SUBI R30,-LOW(1)
0001aa f169      	BREQ _0x2000020
                +
0001ab 85a9     +LDD R26 , Y + 9
0001ac 85ba     +LDD R27 , Y + 9 + 1
0001ad 858b     +LDD R24 , Y + 9 + 2
0001ae 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
                +
0001af e0e0     +LDI R30 , LOW ( 0x41200000 )
0001b0 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0001b1 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0001b2 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0001b3 940e 040d 	CALL __MULF12
                +
0001b5 87e9     +STD Y + 9 , R30
0001b6 87fa     +STD Y + 9 + 1 , R31
0001b7 876b     +STD Y + 9 + 2 , R22
0001b8 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0001b9 940e 034a 	CALL __CFD1U
0001bb 2f0e      	MOV  R16,R30
0001bc 81ae      	LDD  R26,Y+6
0001bd 81bf      	LDD  R27,Y+6+1
0001be 9611      	ADIW R26,1
0001bf 83ae      	STD  Y+6,R26
0001c0 83bf      	STD  Y+6+1,R27
0001c1 9711      	SBIW R26,1
0001c2 2fe0      	MOV  R30,R16
0001c3 5de0      	SUBI R30,-LOW(48)
0001c4 93ec      	ST   X,R30
0001c5 2fe0      	MOV  R30,R16
0001c6 e0f0      	LDI  R31,0
                +
0001c7 85a9     +LDD R26 , Y + 9
0001c8 85ba     +LDD R27 , Y + 9 + 1
0001c9 858b     +LDD R24 , Y + 9 + 2
0001ca 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0001cb 940e 04c8 	CALL __CWD1
0001cd 940e 0383 	CALL __CDF1
0001cf 940e 04e6 	CALL __SWAPD12
0001d1 940e 03b6 	CALL __SUBF12
                +
0001d3 87e9     +STD Y + 9 , R30
0001d4 87fa     +STD Y + 9 + 1 , R31
0001d5 876b     +STD Y + 9 + 2 , R22
0001d6 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0001d7 cfce      	RJMP _0x200001E
                 _0x2000020:
                 _0x20A0003:
0001d8 81ae      	LDD  R26,Y+6
0001d9 81bf      	LDD  R27,Y+6+1
0001da e0e0      	LDI  R30,LOW(0)
0001db 93ec      	ST   X,R30
                 _0x20A0004:
0001dc 8119      	LDD  R17,Y+1
0001dd 8108      	LDD  R16,Y+0
0001de 962d      	ADIW R28,13
0001df 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G101:
0001e0 e0ff          ldi   r31,15
                 __lcd_delay0:
0001e1 95fa          dec   r31
0001e2 f7f1          brne  __lcd_delay0
0001e3 9508      	RET
                 __lcd_ready:
0001e4 b3a4          in    r26,__lcd_direction
0001e5 70af          andi  r26,0xf                 ;set as input
0001e6 bba4          out   __lcd_direction,r26
0001e7 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0001e8 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
0001e9 dff6      	RCALL __lcd_delay_G101
0001ea 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001eb dff4      	RCALL __lcd_delay_G101
0001ec b3a3          in    r26,__lcd_pin
0001ed 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001ee dff1      	RCALL __lcd_delay_G101
0001ef 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001f0 dfef      	RCALL __lcd_delay_G101
0001f1 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001f2 fda7          sbrc  r26,__lcd_busy_flag
0001f3 cff5          rjmp  __lcd_busy
0001f4 9508      	RET
                 __lcd_write_nibble_G101:
0001f5 7fa0          andi  r26,0xf0
0001f6 2bab          or    r26,r27
0001f7 bba5          out   __lcd_port,r26          ;write
0001f8 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001f9 940e 01e0 	CALL __lcd_delay_G101
0001fb 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001fc 940e 01e0 	CALL __lcd_delay_G101
0001fe 9508      	RET
                 __lcd_write_data:
0001ff 93aa      	ST   -Y,R26
000200 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000201 b3a4          in    r26,__lcd_direction
000202 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
000203 bba4          out   __lcd_direction,r26
000204 b3b5          in    r27,__lcd_port
000205 70bf          andi  r27,0xf
000206 81a8          ld    r26,y
000207 dfed      	RCALL __lcd_write_nibble_G101
000208 81a8          ld    r26,y
000209 95a2          swap  r26
00020a dfea      	RCALL __lcd_write_nibble_G101
00020b 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
00020c 940c 02b6 	JMP  _0x20A0002
                 __lcd_read_nibble_G101:
00020e 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
00020f 940e 01e0 	CALL __lcd_delay_G101
000211 b3e3          in    r30,__lcd_pin           ;read
000212 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000213 940e 01e0 	CALL __lcd_delay_G101
000215 7fe0          andi  r30,0xf0
000216 9508      	RET
                 _lcd_read_byte0_G101:
000217 940e 01e0 	CALL __lcd_delay_G101
000219 dff4      	RCALL __lcd_read_nibble_G101
00021a 2fae          mov   r26,r30
00021b dff2      	RCALL __lcd_read_nibble_G101
00021c 98a9          cbi   __lcd_port,__lcd_rd     ;RD=0
00021d 95e2          swap  r30
00021e 2bea          or    r30,r26
00021f 9508      	RET
                 _lcd_gotoxy:
000220 93aa      	ST   -Y,R26
000221 940e 01e4 	CALL __lcd_ready
000223 81e8      	LD   R30,Y
000224 e0f0      	LDI  R31,0
000225 58e3      	SUBI R30,LOW(-__base_y_G101)
000226 4ffe      	SBCI R31,HIGH(-__base_y_G101)
000227 81e0      	LD   R30,Z
000228 81a9      	LDD  R26,Y+1
000229 0fae      	ADD  R26,R30
00022a 940e 01ff 	CALL __lcd_write_data
00022c 8059      	LDD  R5,Y+1
00022d 8048      	LDD  R4,Y+0
00022e 9622      	ADIW R28,2
00022f 9508      	RET
                 _lcd_clear:
000230 940e 01e4 	CALL __lcd_ready
000232 e0a2      	LDI  R26,LOW(2)
000233 940e 01ff 	CALL __lcd_write_data
000235 940e 01e4 	CALL __lcd_ready
000237 e0ac      	LDI  R26,LOW(12)
000238 940e 01ff 	CALL __lcd_write_data
00023a 940e 01e4 	CALL __lcd_ready
00023c e0a1      	LDI  R26,LOW(1)
00023d 940e 01ff 	CALL __lcd_write_data
00023f e0e0      	LDI  R30,LOW(0)
000240 2e4e      	MOV  R4,R30
000241 2e5e      	MOV  R5,R30
000242 9508      	RET
                 _lcd_putchar:
000243 93aa      	ST   -Y,R26
000244 93ef          push r30
000245 93ff          push r31
000246 81a8          ld   r26,y
000247 9468          set
000248 30aa          cpi  r26,10
000249 f019          breq __lcd_putchar1
00024a 94e8          clt
00024b 1457      	CP   R5,R7
00024c f030      	BRLO _0x2020004
                 	__lcd_putchar1:
00024d 9443      	INC  R4
00024e e0e0      	LDI  R30,LOW(0)
00024f 93ea      	ST   -Y,R30
000250 2da4      	MOV  R26,R4
000251 dfce      	RCALL _lcd_gotoxy
000252 f036      	brts __lcd_putchar0
                 _0x2020004:
000253 9453      	INC  R5
000254 df8f          rcall __lcd_ready
000255 9aa8          sbi  __lcd_port,__lcd_rs ;RS=1
000256 81a8      	LD   R26,Y
000257 940e 01ff 	CALL __lcd_write_data
                 __lcd_putchar0:
000259 91ff          pop  r31
00025a 91ef          pop  r30
00025b 940c 02b6 	JMP  _0x20A0002
                 _lcd_puts:
00025d 93ba      	ST   -Y,R27
00025e 93aa      	ST   -Y,R26
00025f 931a      	ST   -Y,R17
                 _0x2020005:
000260 81a9      	LDD  R26,Y+1
000261 81ba      	LDD  R27,Y+1+1
000262 91ed      	LD   R30,X+
000263 83a9      	STD  Y+1,R26
000264 83ba      	STD  Y+1+1,R27
000265 2f1e      	MOV  R17,R30
000266 30e0      	CPI  R30,0
000267 f019      	BREQ _0x2020007
000268 2fa1      	MOV  R26,R17
000269 dfd9      	RCALL _lcd_putchar
00026a cff5      	RJMP _0x2020005
                 _0x2020007:
00026b 8118      	LDD  R17,Y+0
00026c 9623      	ADIW R28,3
00026d 9508      	RET
                 __long_delay_G101:
00026e 27aa          clr   r26
00026f 27bb          clr   r27
                 __long_delay0:
000270 9711          sbiw  r26,1         ;2 cycles
000271 f7f1          brne  __long_delay0 ;2 cycles
000272 9508      	RET
                 __lcd_init_write_G101:
000273 93aa      	ST   -Y,R26
000274 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000275 b3a4          in    r26,__lcd_direction
000276 6fa7          ori   r26,0xf7                ;set as output
000277 bba4          out   __lcd_direction,r26
000278 b3b5          in    r27,__lcd_port
000279 70bf          andi  r27,0xf
00027a 81a8          ld    r26,y
00027b 940e 01f5 	CALL __lcd_write_nibble_G101
00027d 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
00027e c037      	RJMP _0x20A0002
                 _lcd_init:
00027f 93aa      	ST   -Y,R26
000280 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000281 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
000282 8078      	LDD  R7,Y+0
000283 81e8      	LD   R30,Y
000284 58e0      	SUBI R30,-LOW(128)
                +
000285 93e0 017f+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000287 81e8      	LD   R30,Y
000288 54e0      	SUBI R30,-LOW(192)
                +
000289 93e0 0180+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
00028b dfe2      	RCALL __long_delay_G101
00028c e3a0      	LDI  R26,LOW(48)
00028d dfe5      	RCALL __lcd_init_write_G101
00028e dfdf      	RCALL __long_delay_G101
00028f e3a0      	LDI  R26,LOW(48)
000290 dfe2      	RCALL __lcd_init_write_G101
000291 dfdc      	RCALL __long_delay_G101
000292 e3a0      	LDI  R26,LOW(48)
000293 dfdf      	RCALL __lcd_init_write_G101
000294 dfd9      	RCALL __long_delay_G101
000295 e2a0      	LDI  R26,LOW(32)
000296 dfdc      	RCALL __lcd_init_write_G101
000297 dfd6      	RCALL __long_delay_G101
000298 e2a8      	LDI  R26,LOW(40)
000299 940e 01ff 	CALL __lcd_write_data
00029b dfd2      	RCALL __long_delay_G101
00029c e0a4      	LDI  R26,LOW(4)
00029d 940e 01ff 	CALL __lcd_write_data
00029f dfce      	RCALL __long_delay_G101
0002a0 e8a5      	LDI  R26,LOW(133)
0002a1 940e 01ff 	CALL __lcd_write_data
0002a3 dfca      	RCALL __long_delay_G101
0002a4 b3a4          in    r26,__lcd_direction
0002a5 70af          andi  r26,0xf                 ;set as input
0002a6 bba4          out   __lcd_direction,r26
0002a7 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0002a8 940e 0217 	CALL _lcd_read_byte0_G101
0002aa 30e5      	CPI  R30,LOW(0x5)
0002ab f011      	BREQ _0x202000B
0002ac e0e0      	LDI  R30,LOW(0)
0002ad c008      	RJMP _0x20A0002
                 _0x202000B:
0002ae 940e 01e4 	CALL __lcd_ready
0002b0 e0a6      	LDI  R26,LOW(6)
0002b1 940e 01ff 	CALL __lcd_write_data
0002b3 940e 0230 	CALL _lcd_clear
0002b5 e0e1      	LDI  R30,LOW(1)
                 _0x20A0002:
0002b6 9621      	ADIW R28,1
0002b7 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
0002b8 940e 04e1 	CALL __PUTPARD2
0002ba 817b         ldd  r23,y+3
0002bb 816a         ldd  r22,y+2
0002bc 81f9         ldd  r31,y+1
0002bd 81e8         ld   r30,y
0002be fb77         bst  r23,7
0002bf 0f77         lsl  r23
0002c0 fd67         sbrc r22,7
0002c1 6071         sbr  r23,1
0002c2 2f97         mov  r25,r23
0002c3 579e         subi r25,0x7e
0002c4 f081         breq __ftrunc0
0002c5 f078         brcs __ftrunc0
0002c6 3198         cpi  r25,24
0002c7 f490         brsh __ftrunc1
0002c8 27aa         clr  r26
0002c9 27bb         clr  r27
0002ca 2788         clr  r24
                 __ftrunc2:
0002cb 9408         sec
0002cc 9587         ror  r24
0002cd 95b7         ror  r27
0002ce 95a7         ror  r26
0002cf 959a         dec  r25
0002d0 f7d1         brne __ftrunc2
0002d1 23ea         and  r30,r26
0002d2 23fb         and  r31,r27
0002d3 2368         and  r22,r24
0002d4 c005         rjmp __ftrunc1
                 __ftrunc0:
0002d5 94e8         clt
0002d6 2777         clr  r23
0002d7 27ee         clr  r30
0002d8 27ff         clr  r31
0002d9 2766         clr  r22
                 __ftrunc1:
0002da 776f         cbr  r22,0x80
0002db 9576         lsr  r23
0002dc f408         brcc __ftrunc3
0002dd 6860         sbr  r22,0x80
                 __ftrunc3:
0002de f977         bld  r23,7
0002df 91a9         ld   r26,y+
0002e0 91b9         ld   r27,y+
0002e1 9189         ld   r24,y+
0002e2 9199         ld   r25,y+
0002e3 17ea         cp   r30,r26
0002e4 07fb         cpc  r31,r27
0002e5 0768         cpc  r22,r24
0002e6 0779         cpc  r23,r25
0002e7 fb97         bst  r25,7
0002e8 9508         ret
                 _floor:
0002e9 940e 04e1 	CALL __PUTPARD2
0002eb 940e 04d2 	CALL __GETD2S0
0002ed 940e 02b8 	CALL _ftrunc
0002ef 940e 04d7 	CALL __PUTD1S0
0002f1 f419          brne __floor1
                 __floor0:
0002f2 940e 04cd 	CALL __GETD1S0
0002f4 c009      	RJMP _0x20A0001
                 __floor1:
0002f5 f7e6          brtc __floor0
0002f6 940e 04cd 	CALL __GETD1S0
                +
0002f8 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0002f9 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0002fa e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0002fb e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0002fc 940e 03b6 	CALL __SUBF12
                 _0x20A0001:
0002fe 9624      	ADIW R28,4
0002ff 9508      	RET
                 
                 	.CSEG
                 _strcpyf:
000300 93ba      	ST   -Y,R27
000301 93aa      	ST   -Y,R26
000302 91e9          ld   r30,y+
000303 91f9          ld   r31,y+
000304 91a9          ld   r26,y+
000305 91b9          ld   r27,y+
000306 01cd          movw r24,r26
                 strcpyf0:
000307 9005      	lpm  r0,z+
000308 920d          st   x+,r0
000309 2000          tst  r0
00030a f7e1          brne strcpyf0
00030b 01fc          movw r30,r24
00030c 9508          ret
                 
                 	.DSEG
                 _v:
000171           	.BYTE 0x4
                 _s:
000175           	.BYTE 0x4
                 __seed_G100:
000179           	.BYTE 0x4
                 __base_y_G101:
00017d           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
00030d 9610      	adiw r26,0
00030e f039      	breq __delay_ms1
                 __delay_ms0:
                +
00030f ef8a     +LDI R24 , LOW ( 0xFA )
000310 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000311 9701     +SBIW R24 , 1
000312 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000313 95a8      	wdr
000314 9711      	sbiw r26,1
000315 f7c9      	brne __delay_ms0
                 __delay_ms1:
000316 9508      	ret
                 
                 __ANEGF1:
000317 9730      	SBIW R30,0
000318 4060      	SBCI R22,0
000319 4070      	SBCI R23,0
00031a f009      	BREQ __ANEGF10
00031b 5870      	SUBI R23,0x80
                 __ANEGF10:
00031c 9508      	RET
                 
                 __ROUND_REPACK:
00031d 2355      	TST  R21
00031e f442      	BRPL __REPACK
00031f 3850      	CPI  R21,0x80
000320 f411      	BRNE __ROUND_REPACK0
000321 ffe0      	SBRS R30,0
000322 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000323 9631      	ADIW R30,1
000324 1f69      	ADC  R22,R25
000325 1f79      	ADC  R23,R25
000326 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000327 e850      	LDI  R21,0x80
000328 2757      	EOR  R21,R23
000329 f411      	BRNE __REPACK0
00032a 935f      	PUSH R21
00032b c0cf      	RJMP __ZERORES
                 __REPACK0:
00032c 3f5f      	CPI  R21,0xFF
00032d f031      	BREQ __REPACK1
00032e 0f66      	LSL  R22
00032f 0c00      	LSL  R0
000330 9557      	ROR  R21
000331 9567      	ROR  R22
000332 2f75      	MOV  R23,R21
000333 9508      	RET
                 __REPACK1:
000334 935f      	PUSH R21
000335 2000      	TST  R0
000336 f00a      	BRMI __REPACK2
000337 c0cf      	RJMP __MAXRES
                 __REPACK2:
000338 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000339 e850      	LDI  R21,0x80
00033a 2e19      	MOV  R1,R25
00033b 2215      	AND  R1,R21
00033c 0f88      	LSL  R24
00033d 1f99      	ROL  R25
00033e 2795      	EOR  R25,R21
00033f 0f55      	LSL  R21
000340 9587      	ROR  R24
                 
                 __UNPACK1:
000341 e850      	LDI  R21,0x80
000342 2e07      	MOV  R0,R23
000343 2205      	AND  R0,R21
000344 0f66      	LSL  R22
000345 1f77      	ROL  R23
000346 2775      	EOR  R23,R21
000347 0f55      	LSL  R21
000348 9567      	ROR  R22
000349 9508      	RET
                 
                 __CFD1U:
00034a 9468      	SET
00034b c001      	RJMP __CFD1U0
                 __CFD1:
00034c 94e8      	CLT
                 __CFD1U0:
00034d 935f      	PUSH R21
00034e dff2      	RCALL __UNPACK1
00034f 3870      	CPI  R23,0x80
000350 f018      	BRLO __CFD10
000351 3f7f      	CPI  R23,0xFF
000352 f408      	BRCC __CFD10
000353 c0a7      	RJMP __ZERORES
                 __CFD10:
000354 e156      	LDI  R21,22
000355 1b57      	SUB  R21,R23
000356 f4aa      	BRPL __CFD11
000357 9551      	NEG  R21
000358 3058      	CPI  R21,8
000359 f40e      	BRTC __CFD19
00035a 3059      	CPI  R21,9
                 __CFD19:
00035b f030      	BRLO __CFD17
00035c efef      	SER  R30
00035d efff      	SER  R31
00035e ef6f      	SER  R22
00035f e77f      	LDI  R23,0x7F
000360 f977      	BLD  R23,7
000361 c01a      	RJMP __CFD15
                 __CFD17:
000362 2777      	CLR  R23
000363 2355      	TST  R21
000364 f0b9      	BREQ __CFD15
                 __CFD18:
000365 0fee      	LSL  R30
000366 1fff      	ROL  R31
000367 1f66      	ROL  R22
000368 1f77      	ROL  R23
000369 955a      	DEC  R21
00036a f7d1      	BRNE __CFD18
00036b c010      	RJMP __CFD15
                 __CFD11:
00036c 2777      	CLR  R23
                 __CFD12:
00036d 3058      	CPI  R21,8
00036e f028      	BRLO __CFD13
00036f 2fef      	MOV  R30,R31
000370 2ff6      	MOV  R31,R22
000371 2f67      	MOV  R22,R23
000372 5058      	SUBI R21,8
000373 cff9      	RJMP __CFD12
                 __CFD13:
000374 2355      	TST  R21
000375 f031      	BREQ __CFD15
                 __CFD14:
000376 9576      	LSR  R23
000377 9567      	ROR  R22
000378 95f7      	ROR  R31
000379 95e7      	ROR  R30
00037a 955a      	DEC  R21
00037b f7d1      	BRNE __CFD14
                 __CFD15:
00037c 2000      	TST  R0
00037d f40a      	BRPL __CFD16
00037e d141      	RCALL __ANEGD1
                 __CFD16:
00037f 915f      	POP  R21
000380 9508      	RET
                 
                 __CDF1U:
000381 9468      	SET
000382 c001      	RJMP __CDF1U0
                 __CDF1:
000383 94e8      	CLT
                 __CDF1U0:
000384 9730      	SBIW R30,0
000385 4060      	SBCI R22,0
000386 4070      	SBCI R23,0
000387 f0b1      	BREQ __CDF10
000388 2400      	CLR  R0
000389 f026      	BRTS __CDF11
00038a 2377      	TST  R23
00038b f412      	BRPL __CDF11
00038c 9400      	COM  R0
00038d d132      	RCALL __ANEGD1
                 __CDF11:
00038e 2e17      	MOV  R1,R23
00038f e17e      	LDI  R23,30
000390 2011      	TST  R1
                 __CDF12:
000391 f032      	BRMI __CDF13
000392 957a      	DEC  R23
000393 0fee      	LSL  R30
000394 1fff      	ROL  R31
000395 1f66      	ROL  R22
000396 1c11      	ROL  R1
000397 cff9      	RJMP __CDF12
                 __CDF13:
000398 2fef      	MOV  R30,R31
000399 2ff6      	MOV  R31,R22
00039a 2d61      	MOV  R22,R1
00039b 935f      	PUSH R21
00039c df8a      	RCALL __REPACK
00039d 915f      	POP  R21
                 __CDF10:
00039e 9508      	RET
                 
                 __SWAPACC:
00039f 934f      	PUSH R20
0003a0 01af      	MOVW R20,R30
0003a1 01fd      	MOVW R30,R26
0003a2 01da      	MOVW R26,R20
0003a3 01ab      	MOVW R20,R22
0003a4 01bc      	MOVW R22,R24
0003a5 01ca      	MOVW R24,R20
0003a6 2d40      	MOV  R20,R0
0003a7 2c01      	MOV  R0,R1
0003a8 2e14      	MOV  R1,R20
0003a9 914f      	POP  R20
0003aa 9508      	RET
                 
                 __UADD12:
0003ab 0fea      	ADD  R30,R26
0003ac 1ffb      	ADC  R31,R27
0003ad 1f68      	ADC  R22,R24
0003ae 9508      	RET
                 
                 __NEGMAN1:
0003af 95e0      	COM  R30
0003b0 95f0      	COM  R31
0003b1 9560      	COM  R22
0003b2 5fef      	SUBI R30,-1
0003b3 4fff      	SBCI R31,-1
0003b4 4f6f      	SBCI R22,-1
0003b5 9508      	RET
                 
                 __SUBF12:
0003b6 935f      	PUSH R21
0003b7 df81      	RCALL __UNPACK
0003b8 3890      	CPI  R25,0x80
0003b9 f171      	BREQ __ADDF129
0003ba e850      	LDI  R21,0x80
0003bb 2615      	EOR  R1,R21
                 
0003bc c004      	RJMP __ADDF120
                 
                 __ADDF12:
0003bd 935f      	PUSH R21
0003be df7a      	RCALL __UNPACK
0003bf 3890      	CPI  R25,0x80
0003c0 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0003c1 3870      	CPI  R23,0x80
0003c2 f121      	BREQ __ADDF128
                 __ADDF121:
0003c3 2f57      	MOV  R21,R23
0003c4 1b59      	SUB  R21,R25
0003c5 f12b      	BRVS __ADDF1211
0003c6 f412      	BRPL __ADDF122
0003c7 dfd7      	RCALL __SWAPACC
0003c8 cffa      	RJMP __ADDF121
                 __ADDF122:
0003c9 3158      	CPI  R21,24
0003ca f018      	BRLO __ADDF123
0003cb 27aa      	CLR  R26
0003cc 27bb      	CLR  R27
0003cd 2788      	CLR  R24
                 __ADDF123:
0003ce 3058      	CPI  R21,8
0003cf f028      	BRLO __ADDF124
0003d0 2fab      	MOV  R26,R27
0003d1 2fb8      	MOV  R27,R24
0003d2 2788      	CLR  R24
0003d3 5058      	SUBI R21,8
0003d4 cff9      	RJMP __ADDF123
                 __ADDF124:
0003d5 2355      	TST  R21
0003d6 f029      	BREQ __ADDF126
                 __ADDF125:
0003d7 9586      	LSR  R24
0003d8 95b7      	ROR  R27
0003d9 95a7      	ROR  R26
0003da 955a      	DEC  R21
0003db f7d9      	BRNE __ADDF125
                 __ADDF126:
0003dc 2d50      	MOV  R21,R0
0003dd 2551      	EOR  R21,R1
0003de f072      	BRMI __ADDF127
0003df dfcb      	RCALL __UADD12
0003e0 f438      	BRCC __ADDF129
0003e1 9567      	ROR  R22
0003e2 95f7      	ROR  R31
0003e3 95e7      	ROR  R30
0003e4 9573      	INC  R23
0003e5 f413      	BRVC __ADDF129
0003e6 c020      	RJMP __MAXRES
                 __ADDF128:
0003e7 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0003e8 df3e      	RCALL __REPACK
0003e9 915f      	POP  R21
0003ea 9508      	RET
                 __ADDF1211:
0003eb f7d8      	BRCC __ADDF128
0003ec cffb      	RJMP __ADDF129
                 __ADDF127:
0003ed 1bea      	SUB  R30,R26
0003ee 0bfb      	SBC  R31,R27
0003ef 0b68      	SBC  R22,R24
0003f0 f051      	BREQ __ZERORES
0003f1 f410      	BRCC __ADDF1210
0003f2 9400      	COM  R0
0003f3 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0003f4 2366      	TST  R22
0003f5 f392      	BRMI __ADDF129
0003f6 0fee      	LSL  R30
0003f7 1fff      	ROL  R31
0003f8 1f66      	ROL  R22
0003f9 957a      	DEC  R23
0003fa f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0003fb 27ee      	CLR  R30
0003fc 27ff      	CLR  R31
0003fd 2766      	CLR  R22
0003fe 2777      	CLR  R23
0003ff 915f      	POP  R21
000400 9508      	RET
                 
                 __MINRES:
000401 efef      	SER  R30
000402 efff      	SER  R31
000403 e76f      	LDI  R22,0x7F
000404 ef7f      	SER  R23
000405 915f      	POP  R21
000406 9508      	RET
                 
                 __MAXRES:
000407 efef      	SER  R30
000408 efff      	SER  R31
000409 e76f      	LDI  R22,0x7F
00040a e77f      	LDI  R23,0x7F
00040b 915f      	POP  R21
00040c 9508      	RET
                 
                 __MULF12:
00040d 935f      	PUSH R21
00040e df2a      	RCALL __UNPACK
00040f 3870      	CPI  R23,0x80
000410 f351      	BREQ __ZERORES
000411 3890      	CPI  R25,0x80
000412 f341      	BREQ __ZERORES
000413 2401      	EOR  R0,R1
000414 9408      	SEC
000415 1f79      	ADC  R23,R25
000416 f423      	BRVC __MULF124
000417 f31c      	BRLT __ZERORES
                 __MULF125:
000418 2000      	TST  R0
000419 f33a      	BRMI __MINRES
00041a cfec      	RJMP __MAXRES
                 __MULF124:
00041b 920f      	PUSH R0
00041c 931f      	PUSH R17
00041d 932f      	PUSH R18
00041e 933f      	PUSH R19
00041f 934f      	PUSH R20
000420 2711      	CLR  R17
000421 2722      	CLR  R18
000422 2799      	CLR  R25
000423 9f68      	MUL  R22,R24
000424 01a0      	MOVW R20,R0
000425 9f8f      	MUL  R24,R31
000426 2d30      	MOV  R19,R0
000427 0d41      	ADD  R20,R1
000428 1f59      	ADC  R21,R25
000429 9f6b      	MUL  R22,R27
00042a 0d30      	ADD  R19,R0
00042b 1d41      	ADC  R20,R1
00042c 1f59      	ADC  R21,R25
00042d 9f8e      	MUL  R24,R30
00042e d027      	RCALL __MULF126
00042f 9fbf      	MUL  R27,R31
000430 d025      	RCALL __MULF126
000431 9f6a      	MUL  R22,R26
000432 d023      	RCALL __MULF126
000433 9fbe      	MUL  R27,R30
000434 d01d      	RCALL __MULF127
000435 9faf      	MUL  R26,R31
000436 d01b      	RCALL __MULF127
000437 9fae      	MUL  R26,R30
000438 0d11      	ADD  R17,R1
000439 1f29      	ADC  R18,R25
00043a 1f39      	ADC  R19,R25
00043b 1f49      	ADC  R20,R25
00043c 1f59      	ADC  R21,R25
00043d 2fe3      	MOV  R30,R19
00043e 2ff4      	MOV  R31,R20
00043f 2f65      	MOV  R22,R21
000440 2f52      	MOV  R21,R18
000441 914f      	POP  R20
000442 913f      	POP  R19
000443 912f      	POP  R18
000444 911f      	POP  R17
000445 900f      	POP  R0
000446 2366      	TST  R22
000447 f02a      	BRMI __MULF122
000448 0f55      	LSL  R21
000449 1fee      	ROL  R30
00044a 1fff      	ROL  R31
00044b 1f66      	ROL  R22
00044c c002      	RJMP __MULF123
                 __MULF122:
00044d 9573      	INC  R23
00044e f24b      	BRVS __MULF125
                 __MULF123:
00044f decd      	RCALL __ROUND_REPACK
000450 915f      	POP  R21
000451 9508      	RET
                 
                 __MULF127:
000452 0d10      	ADD  R17,R0
000453 1d21      	ADC  R18,R1
000454 1f39      	ADC  R19,R25
000455 c002      	RJMP __MULF128
                 __MULF126:
000456 0d20      	ADD  R18,R0
000457 1d31      	ADC  R19,R1
                 __MULF128:
000458 1f49      	ADC  R20,R25
000459 1f59      	ADC  R21,R25
00045a 9508      	RET
                 
                 __DIVF21:
00045b 935f      	PUSH R21
00045c dedc      	RCALL __UNPACK
00045d 3870      	CPI  R23,0x80
00045e f421      	BRNE __DIVF210
00045f 2011      	TST  R1
                 __DIVF211:
000460 f40a      	BRPL __DIVF219
000461 cf9f      	RJMP __MINRES
                 __DIVF219:
000462 cfa4      	RJMP __MAXRES
                 __DIVF210:
000463 3890      	CPI  R25,0x80
000464 f409      	BRNE __DIVF218
                 __DIVF217:
000465 cf95      	RJMP __ZERORES
                 __DIVF218:
000466 2401      	EOR  R0,R1
000467 9408      	SEC
000468 0b97      	SBC  R25,R23
000469 f41b      	BRVC __DIVF216
00046a f3d4      	BRLT __DIVF217
00046b 2000      	TST  R0
00046c cff3      	RJMP __DIVF211
                 __DIVF216:
00046d 2f79      	MOV  R23,R25
00046e 931f      	PUSH R17
00046f 932f      	PUSH R18
000470 933f      	PUSH R19
000471 934f      	PUSH R20
000472 2411      	CLR  R1
000473 2711      	CLR  R17
000474 2722      	CLR  R18
000475 2733      	CLR  R19
000476 2744      	CLR  R20
000477 2755      	CLR  R21
000478 e290      	LDI  R25,32
                 __DIVF212:
000479 17ae      	CP   R26,R30
00047a 07bf      	CPC  R27,R31
00047b 0786      	CPC  R24,R22
00047c 0741      	CPC  R20,R17
00047d f030      	BRLO __DIVF213
00047e 1bae      	SUB  R26,R30
00047f 0bbf      	SBC  R27,R31
000480 0b86      	SBC  R24,R22
000481 0b41      	SBC  R20,R17
000482 9408      	SEC
000483 c001      	RJMP __DIVF214
                 __DIVF213:
000484 9488      	CLC
                 __DIVF214:
000485 1f55      	ROL  R21
000486 1f22      	ROL  R18
000487 1f33      	ROL  R19
000488 1c11      	ROL  R1
000489 1faa      	ROL  R26
00048a 1fbb      	ROL  R27
00048b 1f88      	ROL  R24
00048c 1f44      	ROL  R20
00048d 959a      	DEC  R25
00048e f751      	BRNE __DIVF212
00048f 01f9      	MOVW R30,R18
000490 2d61      	MOV  R22,R1
000491 914f      	POP  R20
000492 913f      	POP  R19
000493 912f      	POP  R18
000494 911f      	POP  R17
000495 2366      	TST  R22
000496 f032      	BRMI __DIVF215
000497 0f55      	LSL  R21
000498 1fee      	ROL  R30
000499 1fff      	ROL  R31
00049a 1f66      	ROL  R22
00049b 957a      	DEC  R23
00049c f243      	BRVS __DIVF217
                 __DIVF215:
00049d de7f      	RCALL __ROUND_REPACK
00049e 915f      	POP  R21
00049f 9508      	RET
                 
                 __CMPF12:
0004a0 2399      	TST  R25
0004a1 f09a      	BRMI __CMPF120
0004a2 2377      	TST  R23
0004a3 f042      	BRMI __CMPF121
0004a4 1797      	CP   R25,R23
0004a5 f048      	BRLO __CMPF122
0004a6 f429      	BRNE __CMPF121
0004a7 17ae      	CP   R26,R30
0004a8 07bf      	CPC  R27,R31
0004a9 0786      	CPC  R24,R22
0004aa f020      	BRLO __CMPF122
0004ab f031      	BREQ __CMPF123
                 __CMPF121:
0004ac 9498      	CLZ
0004ad 9488      	CLC
0004ae 9508      	RET
                 __CMPF122:
0004af 9498      	CLZ
0004b0 9408      	SEC
0004b1 9508      	RET
                 __CMPF123:
0004b2 9418      	SEZ
0004b3 9488      	CLC
0004b4 9508      	RET
                 __CMPF120:
0004b5 2377      	TST  R23
0004b6 f7c2      	BRPL __CMPF122
0004b7 1797      	CP   R25,R23
0004b8 f398      	BRLO __CMPF121
0004b9 f7a9      	BRNE __CMPF122
0004ba 17ea      	CP   R30,R26
0004bb 07fb      	CPC  R31,R27
0004bc 0768      	CPC  R22,R24
0004bd f388      	BRLO __CMPF122
0004be f399      	BREQ __CMPF123
0004bf cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
0004c0 95f0      	COM  R31
0004c1 9560      	COM  R22
0004c2 9570      	COM  R23
0004c3 95e1      	NEG  R30
0004c4 4fff      	SBCI R31,-1
0004c5 4f6f      	SBCI R22,-1
0004c6 4f7f      	SBCI R23,-1
0004c7 9508      	RET
                 
                 __CWD1:
0004c8 2f6f      	MOV  R22,R31
0004c9 0f66      	ADD  R22,R22
0004ca 0b66      	SBC  R22,R22
0004cb 2f76      	MOV  R23,R22
0004cc 9508      	RET
                 
                 __GETD1S0:
0004cd 81e8      	LD   R30,Y
0004ce 81f9      	LDD  R31,Y+1
0004cf 816a      	LDD  R22,Y+2
0004d0 817b      	LDD  R23,Y+3
0004d1 9508      	RET
                 
                 __GETD2S0:
0004d2 81a8      	LD   R26,Y
0004d3 81b9      	LDD  R27,Y+1
0004d4 818a      	LDD  R24,Y+2
0004d5 819b      	LDD  R25,Y+3
0004d6 9508      	RET
                 
                 __PUTD1S0:
0004d7 83e8      	ST   Y,R30
0004d8 83f9      	STD  Y+1,R31
0004d9 836a      	STD  Y+2,R22
0004da 837b      	STD  Y+3,R23
0004db 9508      	RET
                 
                 __PUTPARD1:
0004dc 937a      	ST   -Y,R23
0004dd 936a      	ST   -Y,R22
0004de 93fa      	ST   -Y,R31
0004df 93ea      	ST   -Y,R30
0004e0 9508      	RET
                 
                 __PUTPARD2:
0004e1 939a      	ST   -Y,R25
0004e2 938a      	ST   -Y,R24
0004e3 93ba      	ST   -Y,R27
0004e4 93aa      	ST   -Y,R26
0004e5 9508      	RET
                 
                 __SWAPD12:
0004e6 2e18      	MOV  R1,R24
0004e7 2f86      	MOV  R24,R22
0004e8 2d61      	MOV  R22,R1
0004e9 2e19      	MOV  R1,R25
0004ea 2f97      	MOV  R25,R23
0004eb 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0004ec 2e1b      	MOV  R1,R27
0004ed 2fbf      	MOV  R27,R31
0004ee 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0004ef 2e1a      	MOV  R1,R26
0004f0 2fae      	MOV  R26,R30
0004f1 2de1      	MOV  R30,R1
0004f2 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  29 r1 :  30 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   8 r17:  25 r18:  12 r19:  12 r20:  22 r21:  63 r22:  82 r23:  77 
r24:  52 r25:  55 r26: 137 r27:  68 r28:   7 r29:   1 r30: 162 r31:  81 
x  :  11 y  : 204 z  :   9 
Registers used: 24 out of 35 (68.6%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   8 
adiw  :  12 and   :   5 andi  :   6 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   1 break :   0 breq  :  22 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  14 
brlt  :   2 brmi  :   9 brne  :  25 brpl  :   8 brsh  :   1 brtc  :   2 
brts  :   2 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  :  65 
cbi   :  10 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  33 cls   :   0 clt   :   4 clv   :   0 clz   :   2 com   :   8 
cp    :   7 cpc   :  12 cpi   :  28 cpse  :   0 dec   :  10 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :  10 inc   :   4 jmp   :  25 ld    :  21 ldd   :  95 ldi   : 109 
lds   :   0 lpm   :   8 lsl   :  12 lsr   :   3 mov   :  53 movw  :  15 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   2 out   :  15 pop   :  20 push  :  20 rcall :  43 ret   :  41 
reti  :   0 rjmp  :  44 rol   :  24 ror   :  15 sbc   :   7 sbci  :  10 
sbi   :  10 sbic  :   0 sbis  :   1 sbiw  :  14 sbr   :   2 sbrc  :   2 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   3 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  44 std   :  56 sts   :   6 sub   :   4 subi  :  15 swap  :   2 
tst   :  19 wdr   :   1 
Instructions used: 77 out of 116 (66.4%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0009e6   2482     52   2534   16384  15.5%
[.dseg] 0x000060 0x000181      0     33     33    1119   2.9%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 6 warnings
