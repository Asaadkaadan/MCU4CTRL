;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;unsigned char v=255;
;interrupt [2] void ext_int0_isr(void)
; 0000 0005 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0006 if(v>1)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0007 {  v--;
;PCODE: $00000012 VOL: 0
; 0000 0008 OCR0=v;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0009 }
; 0000 000A }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;interrupt [3] void ext_int1_isr(void)
; 0000 000C {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 000D if (v<255)
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 000E  {v++;
;PCODE: $0000001E VOL: 0
; 0000 000F   OCR0=v ;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0010   }
; 0000 0011 }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;void main(void)
; 0000 0013 {
;PCODE: $00000025 VOL: 0
; 0000 0014 DDRB.3=1;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0015 PORTD=0B00001100;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0016 MCUCR=0B00001111;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0017 GICR=0B11000000;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0018 //prescaler=8, enable ctc, toggle oco on compare
; 0000 0019 TCCR0=0B00011010;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 001A OCR0=255;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 001B #asm("sei")
;PCODE: $00000032 VOL: 0
	sei
;PCODE: $00000033 VOL: 0
; 0000 001C while (1)
;PCODE: $00000034 VOL: 0
; 0000 001D {}
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 001E }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
