;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;unsigned char i=0;
;
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0007 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0008  i++;
;PCODE: $0000000F VOL: 0
; 0000 0009  if(i==10)
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 000A  i=9;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000B }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 000E {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 000F if(i>0)
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0010   i--;
;PCODE: $0000001E VOL: 0
; 0000 0011 }
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;
;void main(void)
; 0000 0014 {
;PCODE: $00000023 VOL: 0
; 0000 0015 unsigned char decode[10]={0x3f,0x06,0x5B,0x4f,0x66,0x6d, 0x7c,0x07,0x7f,0x6f};
; 0000 0016 PORTC=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;	decode -> Y+0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0017 DDRC=0xFF;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0018 PORTD=0x0C;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0019 DDRD=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 001A // External Interrupt(s) initialization
; 0000 001B // INT0: On
; 0000 001C // INT0 Mode: Falling Edge
; 0000 001D // INT1: On
; 0000 001E // INT1 Mode: Falling Edge
; 0000 001F // INT2: Off
; 0000 0020 GICR|=0xC0;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0021 MCUCR=0x0A;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0022 MCUCSR=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0023 GIFR=0xC0;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0024 // Global enable interrupts
; 0000 0025 #asm("sei")
;PCODE: $0000003A VOL: 0
	sei
;PCODE: $0000003B VOL: 0
; 0000 0026 while (1)
;PCODE: $0000003C VOL: 0
; 0000 0027       {
; 0000 0028        PORTC=decode[i];
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0029        delay_ms(100);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 002A       }
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 002B }
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
