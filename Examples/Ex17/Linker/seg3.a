;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;char sevenseg_code[10]={0x3f,6,0x5B,0x4f,0x66,0x6d,0x7c,0x07,0x7f,0x6f};

	.DSEG
;char a,b,second=0,minute=0,hour=12;
;interrupt [2] void change_minute (void)
; 0000 0006 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0007 minute++;
;PCODE: $0000000F VOL: 0
; 0000 0008 if (minute==60)minute= 0;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0009 }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;interrupt [3] void change_hour (void)
; 0000 000B {
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 000C hour++;
;PCODE: $0000001A VOL: 0
; 0000 000D if (hour==13) hour= 1;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 000E }
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;interrupt [5] void ext_int0_isr(void)
; 0000 0010 {
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0011 PORTC.0=~PORTC.0;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0012 second++;
;PCODE: $00000030 VOL: 0
; 0000 0013 if  (second==60)
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0014 {minute++;
;PCODE: $00000034 VOL: 0
; 0000 0015  second=0;
;PCODE: $00000035 VOL: 0
; 0000 0016  if  (minute==60)
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0017  { minute=0;
;PCODE: $00000039 VOL: 0
; 0000 0018   hour++;
;PCODE: $0000003A VOL: 0
; 0000 0019 
; 0000 001A   if (hour==13)
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 001B   {
; 0000 001C   hour=1;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 001D   }
; 0000 001E  }
;PCODE: $00000040 VOL: 0
; 0000 001F }
;PCODE: $00000041 VOL: 0
; 0000 0020 }
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;
;void main(void)
; 0000 0023 {
;PCODE: $00000046 VOL: 0
; 0000 0024 DDRA=0B11111111;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0025 DDRB=0B00001111;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0026 DDRC.0=1;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0027 PORTD=0B00001100;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0028 //count External clock source on T0 pin. Clock on rising edge.
; 0000 0029 // enable CTC
; 0000 002A TCCR2=0B00000101;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 002B TIMSK=0B01000000;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 002C ASSR=0B00001000;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 002D // External Interrupt(s) initialization
; 0000 002E // INT0 Mode: Falling Edge
; 0000 002F // INT1 Mode: Falling Edge
; 0000 0030 MCUCR=0B00001111;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0031 // INT0: On
; 0000 0032 // INT1: On
; 0000 0033 GICR=0B11000000;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0034 // Global enable interrupts
; 0000 0035 #asm("sei")
;PCODE: $00000059 VOL: 0
	sei
;PCODE: $0000005A VOL: 0
; 0000 0036 while (1)
;PCODE: $0000005B VOL: 0
; 0000 0037       {
; 0000 0038        a=minute/10;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0039        PORTB=0B00001110;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 003A        PORTA=sevenseg_code[a];
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 003B        delay_ms(2);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 003C        b=minute%10;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 003D        PORTB=0B00001101;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 003E        PORTA=sevenseg_code[b];
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 003F        delay_ms(2);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0040        a=hour/10;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0041        PORTB=0B00001011;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0042       if (a==1)
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0043        { PORTA=0x06;}
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0044         else
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0045         { PORTA=0x00;}
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0046        delay_ms(2);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0047        b=hour%10;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0048        PORTB=0B00000111;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0049        PORTA=sevenseg_code[b];
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 004A        delay_ms(2);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 004B       }
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 004C }
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
