;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;char press_f;
;int speed;
;void main(void){
; 0000 0004 void main(void){

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0005 // Timer/Counter 1 initialization
; 0000 0006 // Prescaler: 1
; 0000 0007 // Mode: Fast PWM R=10Bit
; 0000 0008 // OC1A output: Non-Inv.
; 0000 0009 // OC1B output: Discon.
; 0000 000A // Timer1 Overflow Interrupt: Off
; 0000 000B // Input Capture Interrupt: Off
; 0000 000C // Compare A Match Interrupt: Off
; 0000 000D // Compare B Match Interrupt: Off
; 0000 000E TCCR1A=0B10000011;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000F TCCR1B=0B00001001;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0010 //configure PD5(OC1A)-->OUTPUT
; 0000 0011 DDRD.5=1;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0012 PORTA=0B00000011;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0013 speed=500;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0014 OCR1A=speed;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0015 while(1){
;PCODE: $0000001A VOL: 0
; 0000 0016 if (PINA.0==0 && press_f==0)
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0017    { if (speed<1000)
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0018    speed=speed+100;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0019    OCR1A=speed;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001A    press_f=1; }
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 001B     if (PINA.1==0 && press_f==0)
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 001C    {if (speed >0)
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 001D    speed=speed-100;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 001E    OCR1A=speed;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 001F     press_f=1;}
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0020   if (PINA.0==1 && PINA.1==1  && press_f==1) {
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0021    press_f=0;}
;PCODE: $00000055 VOL: 0
; 0000 0022 }}
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
