;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdlib.h>
;#include <delay.h>
;#include <lcd.h>
;#define FOSC 1000000// Clock Speed
;#define BAUD 2400
;#define MYUBRR FOSC/16/BAUD-1
;#asm
;PCODE: $0000000D VOL: 0
.equ __lcd_port=0x15 ;PORTC
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000A #endasm
;char ch;
;void USART_Init( unsigned int ubrr)
; 0000 000D {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000E /* Set baud rate */
; 0000 000F UBRRH = (unsigned char)(ubrr>>8);
;PCODE: $00000012 VOL: 0
;	ubrr -> Y+0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0010 UBRRL = (unsigned char)ubrr;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0011 /* Enable receiver and transmitter */
; 0000 0012 UCSRB = (1<<RXEN)|(1<<TXEN)|(1<<RXCIE);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0013 /* Set frame format: 8data, 1 stop bit */
; 0000 0014 UCSRC = (1<<URSEL)|(3<<UCSZ0);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0015 }
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;interrupt [12] void usart_tx_isr(void)
; 0000 0017 {ch=UDR;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0018 lcd_gotoxy(0,0);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0019 lcd_putchar(ch);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 001A  }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;
;void main(void)
; 0000 001D {lcd_init(16);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001E USART_Init ( MYUBRR );
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 001F #asm("sei");
;PCODE: $00000032 VOL: 0
	sei
;PCODE: $00000033 VOL: 0
; 0000 0020 while(1){}
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0021 }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;
