;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;char sevenseg_code[10]={0x3f,0x06,0x5B,0x4f,0x66,0x6d, 0x7c,0x07,0x7f,0x6f};

	.DSEG
;char i=0,v=0 ,a,b;
;unsigned  int c;
;interrupt [2] void extrenal_int0 (void)
; 0000 0007 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0008 i++;
;PCODE: $0000000F VOL: 0
; 0000 0009 }
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;interrupt [20] void compare_t0_int (void)
; 0000 000B {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000C c++;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 000D if (c==125)
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 000E {
; 0000 000F v=i;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0010 i=0;
;PCODE: $0000001D VOL: 0
; 0000 0011 c=0;
;PCODE: $0000001E VOL: 0
; 0000 0012 }
; 0000 0013 }
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;
;void main(void)
; 0000 0016 {
;PCODE: $00000023 VOL: 0
; 0000 0017 DDRA=0B11111111;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0018 DDRB=0B00000011;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0019 MCUCR=0B00000011;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 001A GICR=0B01000000;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 001B TCCR0=0B00001011;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 001C TIMSK=0B00000010;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 001D OCR0=124;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 001E #asm("sei")
;PCODE: $00000032 VOL: 0
	sei
;PCODE: $00000033 VOL: 0
; 0000 001F while (1)
;PCODE: $00000034 VOL: 0
; 0000 0020       {
; 0000 0021        a=v%10;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0022        PORTB=0B00000001;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0023        PORTA=sevenseg_code[a];
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0024        delay_ms(3);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0025        b=v/10;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0026        PORTB=0B00000010;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0027        PORTA=sevenseg_code[b];
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0028        delay_ms(3);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0029       }
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 002A }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
