;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdlib.h>
;#include <lcd.h>
;#asm
;PCODE: $0000000D VOL: 0
.equ __lcd_port=0x15 ;PORTC
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0006 #endasm
;float  t,r=40;

	.DSEG
;char s[3];
;interrupt [2] void incr_button(void)
; 0000 000A {if (r<100)r=r+1;}

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;interrupt [3] void decr_button(void)
; 0000 000C {if(r>35)r=r-1 ;}
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;void main(void)
; 0000 000E {DDRD.0=1;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 000F //configure int0 && int1
; 0000 0010 PORTD=0B00001100;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0011 MCUCR=0B00001111;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0012 GICR=0B11000000;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0013 //configure adc
; 0000 0014 ADMUX=0B00000000;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0015 ADCSRA=0B10000011;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0016 lcd_init(20);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0017 lcd_clear();
;PCODE: $0000003B VOL: 0
; 0000 0018 #asm("sei")
;PCODE: $0000003C VOL: 0
	sei
;PCODE: $0000003D VOL: 0
; 0000 0019 while (1)
;PCODE: $0000003E VOL: 0
; 0000 001A   {ADCSRA.6=1;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 001B while (ADCSRA.4==0){}
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 001C     t=ADCW*0.09775;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 001D     if (t<=r)
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 001E     PORTD.0=1;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 001F     else
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0020     PORTD.0=0;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0021     ftoa(t,0,s);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0022     lcd_gotoxy(0,0);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0023     lcd_puts("Current T=    %");
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0024     lcd_gotoxy(10,0);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0025     lcd_puts(s);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0026     ftoa(r,0,s);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0027     lcd_gotoxy(0,1);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0028     lcd_puts("requisite T=    %");
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0029     lcd_gotoxy(13,1);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 002A     lcd_puts(s);  }}
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0

	.DSEG
_0x16:
	.BYTE 0x22
