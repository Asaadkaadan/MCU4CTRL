
AVRASM ver. 2.1.30  C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application19\List\program.asm Sun Apr 24 10:37:24 2016

C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application19\List\program.asm(1072): warning: Register r5 already defined by the .DEF directive
C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application19\List\program.asm(1073): warning: Register r4 already defined by the .DEF directive
C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application19\List\program.asm(1074): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 1.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0054 	JMP  __RESET
000002 940c 0084 	JMP  _incr_button
000004 940c 00c2 	JMP  _decr_button
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x3:
00002a 0000
00002b 4220      	.DB  0x0,0x0,0x20,0x42
                 _0x0:
00002c 7543
00002d 7272
00002e 6e65
00002f 2074      	.DB  0x43,0x75,0x72,0x72,0x65,0x6E,0x74,0x20
000030 3d54
000031 2020
000032 2020
000033 0025      	.DB  0x54,0x3D,0x20,0x20,0x20,0x20,0x25,0x0
000034 6572
000035 7571
000036 7369
000037 7469      	.DB  0x72,0x65,0x71,0x75,0x69,0x73,0x69,0x74
000038 2065
000039 3d54
00003a 2020
00003b 2020      	.DB  0x65,0x20,0x54,0x3D,0x20,0x20,0x20,0x20
00003c 0025      	.DB  0x25,0x0
                 _0x2000060:
C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application19\List\program.asm(1114): warning: .cseg .db misalignment - padding zero byte
00003d 0001      	.DB  0x1
                 _0x2000000:
00003e 4e2d
00003f 4e41
000040 4900
000041 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\shift\Desktop\my work\COURSE MICRO\applications\application19\List\program.asm(1117): warning: .cseg .db misalignment - padding zero byte
000042 0000      	.DB  0x0
                 _0x2020003:
000043 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000044 0004      	.DW  0x04
000045 0186      	.DW  _r
000046 0054      	.DW  _0x3*2
                 
000047 0010      	.DW  0x10
000048 0160      	.DW  _0x16
000049 0058      	.DW  _0x0*2
                 
00004a 0012      	.DW  0x12
00004b 0170      	.DW  _0x16+16
00004c 0068      	.DW  _0x0*2+16
                 
00004d 0001      	.DW  0x01
00004e 018d      	.DW  __seed_G100
00004f 007a      	.DW  _0x2000060*2
                 
000050 0002      	.DW  0x02
000051 0191      	.DW  __base_y_G101
000052 0086      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
000053 0000      	.DW  0
                 
                 __RESET:
000054 94f8      	CLI
000055 27ee      	CLR  R30
000056 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000057 e0f1      	LDI  R31,1
000058 bffb      	OUT  GICR,R31
000059 bfeb      	OUT  GICR,R30
00005a bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00005b e1f8      	LDI  R31,0x18
00005c bdf1      	OUT  WDTCR,R31
00005d bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00005e e08d      	LDI  R24,(14-2)+1
00005f e0a2      	LDI  R26,2
000060 27bb      	CLR  R27
                 __CLEAR_REG:
000061 93ed      	ST   X+,R30
000062 958a      	DEC  R24
000063 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000064 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000065 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000066 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000067 93ed      	ST   X+,R30
000068 9701      	SBIW R24,1
000069 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00006a e8e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00006b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00006c 9185      	LPM  R24,Z+
00006d 9195      	LPM  R25,Z+
00006e 9700      	SBIW R24,0
00006f f061      	BREQ __GLOBAL_INI_END
000070 91a5      	LPM  R26,Z+
000071 91b5      	LPM  R27,Z+
000072 9005      	LPM  R0,Z+
000073 9015      	LPM  R1,Z+
000074 01bf      	MOVW R22,R30
000075 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000076 9005      	LPM  R0,Z+
000077 920d      	ST   X+,R0
000078 9701      	SBIW R24,1
000079 f7e1      	BRNE __GLOBAL_INI_LOOP
00007a 01fb      	MOVW R30,R22
00007b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00007c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00007d bfed      	OUT  SPL,R30
00007e e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000080 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000081 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000082 940c 0103 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <lcd.h>
                 ;#asm
                 .equ __lcd_port=0x15 ;PORTC
                 ; 0000 0006 #endasm
                 ;float  t,r=40;
                 
                 	.DSEG
                 ;char s[3];
                 ;interrupt [2] void incr_button(void)
                 ; 0000 000A {if (r<100)r=r+1;}
                 
                 	.CSEG
                 _incr_button:
000084 920a      	ST   -Y,R0
000085 921a      	ST   -Y,R1
000086 936a      	ST   -Y,R22
000087 937a      	ST   -Y,R23
000088 938a      	ST   -Y,R24
000089 939a      	ST   -Y,R25
00008a 93aa      	ST   -Y,R26
00008b 93ba      	ST   -Y,R27
00008c 93ea      	ST   -Y,R30
00008d 93fa      	ST   -Y,R31
00008e b7ef      	IN   R30,SREG
00008f 93ea      	ST   -Y,R30
000090 91a0 0186 	LDS  R26,_r
000092 91b0 0187 	LDS  R27,_r+1
000094 9180 0188 	LDS  R24,_r+2
000096 9190 0189 	LDS  R25,_r+3
                +
000098 e0e0     +LDI R30 , LOW ( 0x42C80000 )
000099 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
00009a ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
00009b e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
00009c 940e 056c 	CALL __CMPF12
00009e f4b0      	BRSH _0x4
00009f 91e0 0186 	LDS  R30,_r
0000a1 91f0 0187 	LDS  R31,_r+1
0000a3 9160 0188 	LDS  R22,_r+2
0000a5 9170 0189 	LDS  R23,_r+3
                +
0000a7 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0000a8 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0000a9 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0000aa e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0000ab 940e 0489 	CALL __ADDF12
0000ad 93e0 0186 	STS  _r,R30
0000af 93f0 0187 	STS  _r+1,R31
0000b1 9360 0188 	STS  _r+2,R22
0000b3 9370 0189 	STS  _r+3,R23
                 _0x4:
0000b5 91e9      	LD   R30,Y+
0000b6 bfef      	OUT  SREG,R30
0000b7 91f9      	LD   R31,Y+
0000b8 91e9      	LD   R30,Y+
0000b9 91b9      	LD   R27,Y+
0000ba 91a9      	LD   R26,Y+
0000bb 9199      	LD   R25,Y+
0000bc 9189      	LD   R24,Y+
0000bd 9179      	LD   R23,Y+
0000be 9169      	LD   R22,Y+
0000bf 9019      	LD   R1,Y+
0000c0 9009      	LD   R0,Y+
0000c1 9518      	RETI
                 ;interrupt [3] void decr_button(void)
                 ; 0000 000C {if(r>35)r=r-1 ;}
                 _decr_button:
0000c2 920a      	ST   -Y,R0
0000c3 921a      	ST   -Y,R1
0000c4 936a      	ST   -Y,R22
0000c5 937a      	ST   -Y,R23
0000c6 938a      	ST   -Y,R24
0000c7 939a      	ST   -Y,R25
0000c8 93aa      	ST   -Y,R26
0000c9 93ba      	ST   -Y,R27
0000ca 93ea      	ST   -Y,R30
0000cb 93fa      	ST   -Y,R31
0000cc b7ef      	IN   R30,SREG
0000cd 93ea      	ST   -Y,R30
0000ce 91a0 0186 	LDS  R26,_r
0000d0 91b0 0187 	LDS  R27,_r+1
0000d2 9180 0188 	LDS  R24,_r+2
0000d4 9190 0189 	LDS  R25,_r+3
                +
0000d6 e0e0     +LDI R30 , LOW ( 0x420C0000 )
0000d7 e0f0     +LDI R31 , HIGH ( 0x420C0000 )
0000d8 e06c     +LDI R22 , BYTE3 ( 0x420C0000 )
0000d9 e472     +LDI R23 , BYTE4 ( 0x420C0000 )
                 	__GETD1N 0x420C0000
0000da 940e 056c 	CALL __CMPF12
0000dc f009      	BREQ PC+2
0000dd f410      	BRCC PC+3
0000de 940c 00f6 	JMP  _0x5
0000e0 91e0 0186 	LDS  R30,_r
0000e2 91f0 0187 	LDS  R31,_r+1
0000e4 9160 0188 	LDS  R22,_r+2
0000e6 9170 0189 	LDS  R23,_r+3
                +
0000e8 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0000e9 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0000ea e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0000eb e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0000ec 940e 0482 	CALL __SUBF12
0000ee 93e0 0186 	STS  _r,R30
0000f0 93f0 0187 	STS  _r+1,R31
0000f2 9360 0188 	STS  _r+2,R22
0000f4 9370 0189 	STS  _r+3,R23
                 _0x5:
0000f6 91e9      	LD   R30,Y+
0000f7 bfef      	OUT  SREG,R30
0000f8 91f9      	LD   R31,Y+
0000f9 91e9      	LD   R30,Y+
0000fa 91b9      	LD   R27,Y+
0000fb 91a9      	LD   R26,Y+
0000fc 9199      	LD   R25,Y+
0000fd 9189      	LD   R24,Y+
0000fe 9179      	LD   R23,Y+
0000ff 9169      	LD   R22,Y+
000100 9019      	LD   R1,Y+
000101 9009      	LD   R0,Y+
000102 9518      	RETI
                 ;void main(void)
                 ; 0000 000E {DDRD.0=1;
                 _main:
000103 9a88      	SBI  0x11,0
                 ; 0000 000F //configure int0 && int1
                 ; 0000 0010 PORTD=0B00001100;
000104 e0ec      	LDI  R30,LOW(12)
000105 bbe2      	OUT  0x12,R30
                 ; 0000 0011 MCUCR=0B00001111;
000106 e0ef      	LDI  R30,LOW(15)
000107 bfe5      	OUT  0x35,R30
                 ; 0000 0012 GICR=0B11000000;
000108 ece0      	LDI  R30,LOW(192)
000109 bfeb      	OUT  0x3B,R30
                 ; 0000 0013 //configure adc
                 ; 0000 0014 ADMUX=0B00000000;
00010a e0e0      	LDI  R30,LOW(0)
00010b b9e7      	OUT  0x7,R30
                 ; 0000 0015 ADCSRA=0B10000011;
00010c e8e3      	LDI  R30,LOW(131)
00010d b9e6      	OUT  0x6,R30
                 ; 0000 0016 lcd_init(20);
00010e e1a4      	LDI  R26,LOW(20)
00010f 940e 0355 	CALL _lcd_init
                 ; 0000 0017 lcd_clear();
000111 940e 0306 	CALL _lcd_clear
                 ; 0000 0018 #asm("sei")
000113 9478      	sei
                 ; 0000 0019 while (1)
                 _0x8:
                 ; 0000 001A   {ADCSRA.6=1;
000114 9a36      	SBI  0x6,6
                 ; 0000 001B while (ADCSRA.4==0){}
                 _0xD:
000115 9b34      	SBIS 0x6,4
000116 cffe      	RJMP _0xD
                 ; 0000 001C     t=ADCW*0.09775;
000117 b1e4      	IN   R30,0x4
000118 b1f5      	IN   R31,0x4+1
000119 2766      	CLR  R22
00011a 2777      	CLR  R23
00011b 940e 044f 	CALL __CDF1
                +
00011d e2a7     +LDI R26 , LOW ( 0x3DC83127 )
00011e e3b1     +LDI R27 , HIGH ( 0x3DC83127 )
00011f ec88     +LDI R24 , BYTE3 ( 0x3DC83127 )
000120 e39d     +LDI R25 , BYTE4 ( 0x3DC83127 )
                 	__GETD2N 0x3DC83127
000121 940e 04d9 	CALL __MULF12
000123 93e0 0182 	STS  _t,R30
000125 93f0 0183 	STS  _t+1,R31
000127 9360 0184 	STS  _t+2,R22
000129 9370 0185 	STS  _t+3,R23
                 ; 0000 001D     if (t<=r)
00012b 91e0 0186 	LDS  R30,_r
00012d 91f0 0187 	LDS  R31,_r+1
00012f 9160 0188 	LDS  R22,_r+2
000131 9170 0189 	LDS  R23,_r+3
000133 91a0 0182 	LDS  R26,_t
000135 91b0 0183 	LDS  R27,_t+1
000137 9180 0184 	LDS  R24,_t+2
000139 9190 0185 	LDS  R25,_t+3
00013b 940e 056c 	CALL __CMPF12
00013d f019      	BREQ PC+4
00013e f010      	BRCS PC+3
00013f 940c 0143 	JMP  _0x10
                 ; 0000 001E     PORTD.0=1;
000141 9a90      	SBI  0x12,0
                 ; 0000 001F     else
000142 c001      	RJMP _0x13
                 _0x10:
                 ; 0000 0020     PORTD.0=0;
000143 9890      	CBI  0x12,0
                 ; 0000 0021     ftoa(t,0,s);
                 _0x13:
000144 91e0 0182 	LDS  R30,_t
000146 91f0 0183 	LDS  R31,_t+1
000148 9160 0184 	LDS  R22,_t+2
00014a 9170 0185 	LDS  R23,_t+3
00014c 940e 05a8 	CALL __PUTPARD1
00014e e0e0      	LDI  R30,LOW(0)
00014f 93ea      	ST   -Y,R30
000150 e8aa      	LDI  R26,LOW(_s)
000151 e0b1      	LDI  R27,HIGH(_s)
000152 940e 018a 	CALL _ftoa
                 ; 0000 0022     lcd_gotoxy(0,0);
000154 e0e0      	LDI  R30,LOW(0)
000155 93ea      	ST   -Y,R30
000156 e0a0      	LDI  R26,LOW(0)
000157 940e 02f6 	CALL _lcd_gotoxy
                 ; 0000 0023     lcd_puts("Current T=    %");
                +
000159 e6a0     +LDI R26 , LOW ( _0x16 + ( 0 ) )
00015a e0b1     +LDI R27 , HIGH ( _0x16 + ( 0 ) )
                 	__POINTW2MN _0x16,0
00015b 940e 0333 	CALL _lcd_puts
                 ; 0000 0024     lcd_gotoxy(10,0);
00015d e0ea      	LDI  R30,LOW(10)
00015e 93ea      	ST   -Y,R30
00015f e0a0      	LDI  R26,LOW(0)
000160 940e 02f6 	CALL _lcd_gotoxy
                 ; 0000 0025     lcd_puts(s);
000162 e8aa      	LDI  R26,LOW(_s)
000163 e0b1      	LDI  R27,HIGH(_s)
000164 940e 0333 	CALL _lcd_puts
                 ; 0000 0026     ftoa(r,0,s);
000166 91e0 0186 	LDS  R30,_r
000168 91f0 0187 	LDS  R31,_r+1
00016a 9160 0188 	LDS  R22,_r+2
00016c 9170 0189 	LDS  R23,_r+3
00016e 940e 05a8 	CALL __PUTPARD1
000170 e0e0      	LDI  R30,LOW(0)
000171 93ea      	ST   -Y,R30
000172 e8aa      	LDI  R26,LOW(_s)
000173 e0b1      	LDI  R27,HIGH(_s)
000174 940e 018a 	CALL _ftoa
                 ; 0000 0027     lcd_gotoxy(0,1);
000176 e0e0      	LDI  R30,LOW(0)
000177 93ea      	ST   -Y,R30
000178 e0a1      	LDI  R26,LOW(1)
000179 940e 02f6 	CALL _lcd_gotoxy
                 ; 0000 0028     lcd_puts("requisite T=    %");
                +
00017b e7a0     +LDI R26 , LOW ( _0x16 + ( 16 ) )
00017c e0b1     +LDI R27 , HIGH ( _0x16 + ( 16 ) )
                 	__POINTW2MN _0x16,16
00017d 940e 0333 	CALL _lcd_puts
                 ; 0000 0029     lcd_gotoxy(13,1);
00017f e0ed      	LDI  R30,LOW(13)
000180 93ea      	ST   -Y,R30
000181 e0a1      	LDI  R26,LOW(1)
000182 940e 02f6 	CALL _lcd_gotoxy
                 ; 0000 002A     lcd_puts(s);  }}
000184 e8aa      	LDI  R26,LOW(_s)
000185 e0b1      	LDI  R27,HIGH(_s)
000186 940e 0333 	CALL _lcd_puts
000188 cf8b      	RJMP _0x8
                 _0x17:
000189 cfff      	RJMP _0x17
                 
                 	.DSEG
                 _0x16:
000160           	.BYTE 0x22
                 
                 	.CSEG
                 _ftoa:
00018a 93ba      	ST   -Y,R27
00018b 93aa      	ST   -Y,R26
00018c 9724      	SBIW R28,4
00018d e0e0      	LDI  R30,LOW(0)
00018e 83e8      	ST   Y,R30
00018f 83e9      	STD  Y+1,R30
000190 83ea      	STD  Y+2,R30
000191 e3ef      	LDI  R30,LOW(63)
000192 83eb      	STD  Y+3,R30
000193 931a      	ST   -Y,R17
000194 930a      	ST   -Y,R16
000195 85eb      	LDD  R30,Y+11
000196 85fc      	LDD  R31,Y+11+1
000197 3fef      	CPI  R30,LOW(0xFFFF)
000198 efaf      	LDI  R26,HIGH(0xFFFF)
000199 07fa      	CPC  R31,R26
00019a f449      	BRNE _0x200000D
00019b 81ee      	LDD  R30,Y+6
00019c 81ff      	LDD  R31,Y+6+1
00019d 93fa      	ST   -Y,R31
00019e 93ea      	ST   -Y,R30
                +
00019f e7ac     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
0001a0 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
0001a1 940e 03d6 	CALL _strcpyf
0001a3 c10e      	RJMP _0x20A0004
                 _0x200000D:
0001a4 3fef      	CPI  R30,LOW(0x7FFF)
0001a5 e7af      	LDI  R26,HIGH(0x7FFF)
0001a6 07fa      	CPC  R31,R26
0001a7 f449      	BRNE _0x200000C
0001a8 81ee      	LDD  R30,Y+6
0001a9 81ff      	LDD  R31,Y+6+1
0001aa 93fa      	ST   -Y,R31
0001ab 93ea      	ST   -Y,R30
                +
0001ac e7ad     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0001ad e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
0001ae 940e 03d6 	CALL _strcpyf
0001b0 c101      	RJMP _0x20A0004
                 _0x200000C:
0001b1 85ac      	LDD  R26,Y+12
0001b2 23aa      	TST  R26
0001b3 f492      	BRPL _0x200000F
                +
0001b4 85e9     +LDD R30 , Y + 9
0001b5 85fa     +LDD R31 , Y + 9 + 1
0001b6 856b     +LDD R22 , Y + 9 + 2
0001b7 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0001b8 940e 03e3 	CALL __ANEGF1
                +
0001ba 87e9     +STD Y + 9 , R30
0001bb 87fa     +STD Y + 9 + 1 , R31
0001bc 876b     +STD Y + 9 + 2 , R22
0001bd 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0001be 81ae      	LDD  R26,Y+6
0001bf 81bf      	LDD  R27,Y+6+1
0001c0 9611      	ADIW R26,1
0001c1 83ae      	STD  Y+6,R26
0001c2 83bf      	STD  Y+6+1,R27
0001c3 9711      	SBIW R26,1
0001c4 e2ed      	LDI  R30,LOW(45)
0001c5 93ec      	ST   X,R30
                 _0x200000F:
0001c6 85a8      	LDD  R26,Y+8
0001c7 30a7      	CPI  R26,LOW(0x7)
0001c8 f010      	BRLO _0x2000010
0001c9 e0e6      	LDI  R30,LOW(6)
0001ca 87e8      	STD  Y+8,R30
                 _0x2000010:
0001cb 8518      	LDD  R17,Y+8
                 _0x2000011:
0001cc 2fe1      	MOV  R30,R17
0001cd 5011      	SUBI R17,1
0001ce 30e0      	CPI  R30,0
0001cf f079      	BREQ _0x2000013
                +
0001d0 81aa     +LDD R26 , Y + 2
0001d1 81bb     +LDD R27 , Y + 2 + 1
0001d2 818c     +LDD R24 , Y + 2 + 2
0001d3 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
0001d4 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0001d5 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0001d6 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0001d7 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0001d8 940e 04d9 	CALL __MULF12
                +
0001da 83ea     +STD Y + 2 , R30
0001db 83fb     +STD Y + 2 + 1 , R31
0001dc 836c     +STD Y + 2 + 2 , R22
0001dd 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0001de cfed      	RJMP _0x2000011
                 _0x2000013:
                +
0001df 81ea     +LDD R30 , Y + 2
0001e0 81fb     +LDD R31 , Y + 2 + 1
0001e1 816c     +LDD R22 , Y + 2 + 2
0001e2 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0001e3 85a9     +LDD R26 , Y + 9
0001e4 85ba     +LDD R27 , Y + 9 + 1
0001e5 858b     +LDD R24 , Y + 9 + 2
0001e6 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0001e7 940e 0489 	CALL __ADDF12
                +
0001e9 87e9     +STD Y + 9 , R30
0001ea 87fa     +STD Y + 9 + 1 , R31
0001eb 876b     +STD Y + 9 + 2 , R22
0001ec 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0001ed e010      	LDI  R17,LOW(0)
                +
0001ee e0e0     +LDI R30 , LOW ( 0x3F800000 )
0001ef e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0001f0 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0001f1 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
0001f2 83ea     +STD Y + 2 , R30
0001f3 83fb     +STD Y + 2 + 1 , R31
0001f4 836c     +STD Y + 2 + 2 , R22
0001f5 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 _0x2000014:
                +
0001f6 81ea     +LDD R30 , Y + 2
0001f7 81fb     +LDD R31 , Y + 2 + 1
0001f8 816c     +LDD R22 , Y + 2 + 2
0001f9 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0001fa 85a9     +LDD R26 , Y + 9
0001fb 85ba     +LDD R27 , Y + 9 + 1
0001fc 858b     +LDD R24 , Y + 9 + 2
0001fd 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0001fe 940e 056c 	CALL __CMPF12
000200 f0d8      	BRLO _0x2000016
                +
000201 81aa     +LDD R26 , Y + 2
000202 81bb     +LDD R27 , Y + 2 + 1
000203 818c     +LDD R24 , Y + 2 + 2
000204 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000205 e0e0     +LDI R30 , LOW ( 0x41200000 )
000206 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000207 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000208 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000209 940e 04d9 	CALL __MULF12
                +
00020b 83ea     +STD Y + 2 , R30
00020c 83fb     +STD Y + 2 + 1 , R31
00020d 836c     +STD Y + 2 + 2 , R22
00020e 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00020f 5f1f      	SUBI R17,-LOW(1)
000210 3217      	CPI  R17,39
000211 f048      	BRLO _0x2000017
000212 81ee      	LDD  R30,Y+6
000213 81ff      	LDD  R31,Y+6+1
000214 93fa      	ST   -Y,R31
000215 93ea      	ST   -Y,R30
                +
000216 e8a1     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
000217 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTW2FN _0x2000000,5
000218 940e 03d6 	CALL _strcpyf
00021a c097      	RJMP _0x20A0004
                 _0x2000017:
00021b cfda      	RJMP _0x2000014
                 _0x2000016:
00021c 3010      	CPI  R17,0
00021d f449      	BRNE _0x2000018
00021e 81ae      	LDD  R26,Y+6
00021f 81bf      	LDD  R27,Y+6+1
000220 9611      	ADIW R26,1
000221 83ae      	STD  Y+6,R26
000222 83bf      	STD  Y+6+1,R27
000223 9711      	SBIW R26,1
000224 e3e0      	LDI  R30,LOW(48)
000225 93ec      	ST   X,R30
000226 c049      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
000227 2fe1      	MOV  R30,R17
000228 5011      	SUBI R17,1
000229 30e0      	CPI  R30,0
00022a f411      	BRNE PC+3
00022b 940c 0270 	JMP _0x200001C
                +
00022d 81aa     +LDD R26 , Y + 2
00022e 81bb     +LDD R27 , Y + 2 + 1
00022f 818c     +LDD R24 , Y + 2 + 2
000230 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000231 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000232 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000233 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000234 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000235 940e 04d9 	CALL __MULF12
                +
000237 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000238 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000239 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00023a e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00023b 940e 0489 	CALL __ADDF12
00023d 01df      	MOVW R26,R30
00023e 01cb      	MOVW R24,R22
00023f 940e 03bf 	CALL _floor
                +
000241 83ea     +STD Y + 2 , R30
000242 83fb     +STD Y + 2 + 1 , R31
000243 836c     +STD Y + 2 + 2 , R22
000244 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                +
000245 85a9     +LDD R26 , Y + 9
000246 85ba     +LDD R27 , Y + 9 + 1
000247 858b     +LDD R24 , Y + 9 + 2
000248 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000249 940e 0527 	CALL __DIVF21
00024b 940e 0416 	CALL __CFD1U
00024d 2f0e      	MOV  R16,R30
00024e 81ae      	LDD  R26,Y+6
00024f 81bf      	LDD  R27,Y+6+1
000250 9611      	ADIW R26,1
000251 83ae      	STD  Y+6,R26
000252 83bf      	STD  Y+6+1,R27
000253 9711      	SBIW R26,1
000254 2fe0      	MOV  R30,R16
000255 5de0      	SUBI R30,-LOW(48)
000256 93ec      	ST   X,R30
000257 2fe0      	MOV  R30,R16
000258 e0f0      	LDI  R31,0
                +
000259 81aa     +LDD R26 , Y + 2
00025a 81bb     +LDD R27 , Y + 2 + 1
00025b 818c     +LDD R24 , Y + 2 + 2
00025c 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00025d 940e 0594 	CALL __CWD1
00025f 940e 044f 	CALL __CDF1
000261 940e 04d9 	CALL __MULF12
                +
000263 85a9     +LDD R26 , Y + 9
000264 85ba     +LDD R27 , Y + 9 + 1
000265 858b     +LDD R24 , Y + 9 + 2
000266 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000267 940e 05b2 	CALL __SWAPD12
000269 940e 0482 	CALL __SUBF12
                +
00026b 87e9     +STD Y + 9 , R30
00026c 87fa     +STD Y + 9 + 1 , R31
00026d 876b     +STD Y + 9 + 2 , R22
00026e 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00026f cfb7      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
000270 85e8      	LDD  R30,Y+8
000271 30e0      	CPI  R30,0
000272 f409      	BRNE _0x200001D
000273 c03a      	RJMP _0x20A0003
                 _0x200001D:
000274 81ae      	LDD  R26,Y+6
000275 81bf      	LDD  R27,Y+6+1
000276 9611      	ADIW R26,1
000277 83ae      	STD  Y+6,R26
000278 83bf      	STD  Y+6+1,R27
000279 9711      	SBIW R26,1
00027a e2ee      	LDI  R30,LOW(46)
00027b 93ec      	ST   X,R30
                 _0x200001E:
00027c 85e8      	LDD  R30,Y+8
00027d 50e1      	SUBI R30,LOW(1)
00027e 87e8      	STD  Y+8,R30
00027f 5fef      	SUBI R30,-LOW(1)
000280 f169      	BREQ _0x2000020
                +
000281 85a9     +LDD R26 , Y + 9
000282 85ba     +LDD R27 , Y + 9 + 1
000283 858b     +LDD R24 , Y + 9 + 2
000284 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
                +
000285 e0e0     +LDI R30 , LOW ( 0x41200000 )
000286 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000287 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000288 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000289 940e 04d9 	CALL __MULF12
                +
00028b 87e9     +STD Y + 9 , R30
00028c 87fa     +STD Y + 9 + 1 , R31
00028d 876b     +STD Y + 9 + 2 , R22
00028e 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00028f 940e 0416 	CALL __CFD1U
000291 2f0e      	MOV  R16,R30
000292 81ae      	LDD  R26,Y+6
000293 81bf      	LDD  R27,Y+6+1
000294 9611      	ADIW R26,1
000295 83ae      	STD  Y+6,R26
000296 83bf      	STD  Y+6+1,R27
000297 9711      	SBIW R26,1
000298 2fe0      	MOV  R30,R16
000299 5de0      	SUBI R30,-LOW(48)
00029a 93ec      	ST   X,R30
00029b 2fe0      	MOV  R30,R16
00029c e0f0      	LDI  R31,0
                +
00029d 85a9     +LDD R26 , Y + 9
00029e 85ba     +LDD R27 , Y + 9 + 1
00029f 858b     +LDD R24 , Y + 9 + 2
0002a0 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0002a1 940e 0594 	CALL __CWD1
0002a3 940e 044f 	CALL __CDF1
0002a5 940e 05b2 	CALL __SWAPD12
0002a7 940e 0482 	CALL __SUBF12
                +
0002a9 87e9     +STD Y + 9 , R30
0002aa 87fa     +STD Y + 9 + 1 , R31
0002ab 876b     +STD Y + 9 + 2 , R22
0002ac 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0002ad cfce      	RJMP _0x200001E
                 _0x2000020:
                 _0x20A0003:
0002ae 81ae      	LDD  R26,Y+6
0002af 81bf      	LDD  R27,Y+6+1
0002b0 e0e0      	LDI  R30,LOW(0)
0002b1 93ec      	ST   X,R30
                 _0x20A0004:
0002b2 8119      	LDD  R17,Y+1
0002b3 8108      	LDD  R16,Y+0
0002b4 962d      	ADIW R28,13
0002b5 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G101:
0002b6 e0ff          ldi   r31,15
                 __lcd_delay0:
0002b7 95fa          dec   r31
0002b8 f7f1          brne  __lcd_delay0
0002b9 9508      	RET
                 __lcd_ready:
0002ba b3a4          in    r26,__lcd_direction
0002bb 70af          andi  r26,0xf                 ;set as input
0002bc bba4          out   __lcd_direction,r26
0002bd 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0002be 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
0002bf dff6      	RCALL __lcd_delay_G101
0002c0 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0002c1 dff4      	RCALL __lcd_delay_G101
0002c2 b3a3          in    r26,__lcd_pin
0002c3 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0002c4 dff1      	RCALL __lcd_delay_G101
0002c5 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0002c6 dfef      	RCALL __lcd_delay_G101
0002c7 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0002c8 fda7          sbrc  r26,__lcd_busy_flag
0002c9 cff5          rjmp  __lcd_busy
0002ca 9508      	RET
                 __lcd_write_nibble_G101:
0002cb 7fa0          andi  r26,0xf0
0002cc 2bab          or    r26,r27
0002cd bba5          out   __lcd_port,r26          ;write
0002ce 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0002cf 940e 02b6 	CALL __lcd_delay_G101
0002d1 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0002d2 940e 02b6 	CALL __lcd_delay_G101
0002d4 9508      	RET
                 __lcd_write_data:
0002d5 93aa      	ST   -Y,R26
0002d6 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
0002d7 b3a4          in    r26,__lcd_direction
0002d8 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
0002d9 bba4          out   __lcd_direction,r26
0002da b3b5          in    r27,__lcd_port
0002db 70bf          andi  r27,0xf
0002dc 81a8          ld    r26,y
0002dd dfed      	RCALL __lcd_write_nibble_G101
0002de 81a8          ld    r26,y
0002df 95a2          swap  r26
0002e0 dfea      	RCALL __lcd_write_nibble_G101
0002e1 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0002e2 940c 038c 	JMP  _0x20A0002
                 __lcd_read_nibble_G101:
0002e4 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0002e5 940e 02b6 	CALL __lcd_delay_G101
0002e7 b3e3          in    r30,__lcd_pin           ;read
0002e8 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0002e9 940e 02b6 	CALL __lcd_delay_G101
0002eb 7fe0          andi  r30,0xf0
0002ec 9508      	RET
                 _lcd_read_byte0_G101:
0002ed 940e 02b6 	CALL __lcd_delay_G101
0002ef dff4      	RCALL __lcd_read_nibble_G101
0002f0 2fae          mov   r26,r30
0002f1 dff2      	RCALL __lcd_read_nibble_G101
0002f2 98a9          cbi   __lcd_port,__lcd_rd     ;RD=0
0002f3 95e2          swap  r30
0002f4 2bea          or    r30,r26
0002f5 9508      	RET
                 _lcd_gotoxy:
0002f6 93aa      	ST   -Y,R26
0002f7 940e 02ba 	CALL __lcd_ready
0002f9 81e8      	LD   R30,Y
0002fa e0f0      	LDI  R31,0
0002fb 56ef      	SUBI R30,LOW(-__base_y_G101)
0002fc 4ffe      	SBCI R31,HIGH(-__base_y_G101)
0002fd 81e0      	LD   R30,Z
0002fe 81a9      	LDD  R26,Y+1
0002ff 0fae      	ADD  R26,R30
000300 940e 02d5 	CALL __lcd_write_data
000302 8059      	LDD  R5,Y+1
000303 8048      	LDD  R4,Y+0
000304 9622      	ADIW R28,2
000305 9508      	RET
                 _lcd_clear:
000306 940e 02ba 	CALL __lcd_ready
000308 e0a2      	LDI  R26,LOW(2)
000309 940e 02d5 	CALL __lcd_write_data
00030b 940e 02ba 	CALL __lcd_ready
00030d e0ac      	LDI  R26,LOW(12)
00030e 940e 02d5 	CALL __lcd_write_data
000310 940e 02ba 	CALL __lcd_ready
000312 e0a1      	LDI  R26,LOW(1)
000313 940e 02d5 	CALL __lcd_write_data
000315 e0e0      	LDI  R30,LOW(0)
000316 2e4e      	MOV  R4,R30
000317 2e5e      	MOV  R5,R30
000318 9508      	RET
                 _lcd_putchar:
000319 93aa      	ST   -Y,R26
00031a 93ef          push r30
00031b 93ff          push r31
00031c 81a8          ld   r26,y
00031d 9468          set
00031e 30aa          cpi  r26,10
00031f f019          breq __lcd_putchar1
000320 94e8          clt
000321 1457      	CP   R5,R7
000322 f030      	BRLO _0x2020004
                 	__lcd_putchar1:
000323 9443      	INC  R4
000324 e0e0      	LDI  R30,LOW(0)
000325 93ea      	ST   -Y,R30
000326 2da4      	MOV  R26,R4
000327 dfce      	RCALL _lcd_gotoxy
000328 f036      	brts __lcd_putchar0
                 _0x2020004:
000329 9453      	INC  R5
00032a df8f          rcall __lcd_ready
00032b 9aa8          sbi  __lcd_port,__lcd_rs ;RS=1
00032c 81a8      	LD   R26,Y
00032d 940e 02d5 	CALL __lcd_write_data
                 __lcd_putchar0:
00032f 91ff          pop  r31
000330 91ef          pop  r30
000331 940c 038c 	JMP  _0x20A0002
                 _lcd_puts:
000333 93ba      	ST   -Y,R27
000334 93aa      	ST   -Y,R26
000335 931a      	ST   -Y,R17
                 _0x2020005:
000336 81a9      	LDD  R26,Y+1
000337 81ba      	LDD  R27,Y+1+1
000338 91ed      	LD   R30,X+
000339 83a9      	STD  Y+1,R26
00033a 83ba      	STD  Y+1+1,R27
00033b 2f1e      	MOV  R17,R30
00033c 30e0      	CPI  R30,0
00033d f019      	BREQ _0x2020007
00033e 2fa1      	MOV  R26,R17
00033f dfd9      	RCALL _lcd_putchar
000340 cff5      	RJMP _0x2020005
                 _0x2020007:
000341 8118      	LDD  R17,Y+0
000342 9623      	ADIW R28,3
000343 9508      	RET
                 __long_delay_G101:
000344 27aa          clr   r26
000345 27bb          clr   r27
                 __long_delay0:
000346 9711          sbiw  r26,1         ;2 cycles
000347 f7f1          brne  __long_delay0 ;2 cycles
000348 9508      	RET
                 __lcd_init_write_G101:
000349 93aa      	ST   -Y,R26
00034a 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
00034b b3a4          in    r26,__lcd_direction
00034c 6fa7          ori   r26,0xf7                ;set as output
00034d bba4          out   __lcd_direction,r26
00034e b3b5          in    r27,__lcd_port
00034f 70bf          andi  r27,0xf
000350 81a8          ld    r26,y
000351 940e 02cb 	CALL __lcd_write_nibble_G101
000353 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
000354 c037      	RJMP _0x20A0002
                 _lcd_init:
000355 93aa      	ST   -Y,R26
000356 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000357 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
000358 8078      	LDD  R7,Y+0
000359 81e8      	LD   R30,Y
00035a 58e0      	SUBI R30,-LOW(128)
                +
00035b 93e0 0193+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
00035d 81e8      	LD   R30,Y
00035e 54e0      	SUBI R30,-LOW(192)
                +
00035f 93e0 0194+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000361 dfe2      	RCALL __long_delay_G101
000362 e3a0      	LDI  R26,LOW(48)
000363 dfe5      	RCALL __lcd_init_write_G101
000364 dfdf      	RCALL __long_delay_G101
000365 e3a0      	LDI  R26,LOW(48)
000366 dfe2      	RCALL __lcd_init_write_G101
000367 dfdc      	RCALL __long_delay_G101
000368 e3a0      	LDI  R26,LOW(48)
000369 dfdf      	RCALL __lcd_init_write_G101
00036a dfd9      	RCALL __long_delay_G101
00036b e2a0      	LDI  R26,LOW(32)
00036c dfdc      	RCALL __lcd_init_write_G101
00036d dfd6      	RCALL __long_delay_G101
00036e e2a8      	LDI  R26,LOW(40)
00036f 940e 02d5 	CALL __lcd_write_data
000371 dfd2      	RCALL __long_delay_G101
000372 e0a4      	LDI  R26,LOW(4)
000373 940e 02d5 	CALL __lcd_write_data
000375 dfce      	RCALL __long_delay_G101
000376 e8a5      	LDI  R26,LOW(133)
000377 940e 02d5 	CALL __lcd_write_data
000379 dfca      	RCALL __long_delay_G101
00037a b3a4          in    r26,__lcd_direction
00037b 70af          andi  r26,0xf                 ;set as input
00037c bba4          out   __lcd_direction,r26
00037d 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
00037e 940e 02ed 	CALL _lcd_read_byte0_G101
000380 30e5      	CPI  R30,LOW(0x5)
000381 f011      	BREQ _0x202000B
000382 e0e0      	LDI  R30,LOW(0)
000383 c008      	RJMP _0x20A0002
                 _0x202000B:
000384 940e 02ba 	CALL __lcd_ready
000386 e0a6      	LDI  R26,LOW(6)
000387 940e 02d5 	CALL __lcd_write_data
000389 940e 0306 	CALL _lcd_clear
00038b e0e1      	LDI  R30,LOW(1)
                 _0x20A0002:
00038c 9621      	ADIW R28,1
00038d 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
00038e 940e 05ad 	CALL __PUTPARD2
000390 817b         ldd  r23,y+3
000391 816a         ldd  r22,y+2
000392 81f9         ldd  r31,y+1
000393 81e8         ld   r30,y
000394 fb77         bst  r23,7
000395 0f77         lsl  r23
000396 fd67         sbrc r22,7
000397 6071         sbr  r23,1
000398 2f97         mov  r25,r23
000399 579e         subi r25,0x7e
00039a f081         breq __ftrunc0
00039b f078         brcs __ftrunc0
00039c 3198         cpi  r25,24
00039d f490         brsh __ftrunc1
00039e 27aa         clr  r26
00039f 27bb         clr  r27
0003a0 2788         clr  r24
                 __ftrunc2:
0003a1 9408         sec
0003a2 9587         ror  r24
0003a3 95b7         ror  r27
0003a4 95a7         ror  r26
0003a5 959a         dec  r25
0003a6 f7d1         brne __ftrunc2
0003a7 23ea         and  r30,r26
0003a8 23fb         and  r31,r27
0003a9 2368         and  r22,r24
0003aa c005         rjmp __ftrunc1
                 __ftrunc0:
0003ab 94e8         clt
0003ac 2777         clr  r23
0003ad 27ee         clr  r30
0003ae 27ff         clr  r31
0003af 2766         clr  r22
                 __ftrunc1:
0003b0 776f         cbr  r22,0x80
0003b1 9576         lsr  r23
0003b2 f408         brcc __ftrunc3
0003b3 6860         sbr  r22,0x80
                 __ftrunc3:
0003b4 f977         bld  r23,7
0003b5 91a9         ld   r26,y+
0003b6 91b9         ld   r27,y+
0003b7 9189         ld   r24,y+
0003b8 9199         ld   r25,y+
0003b9 17ea         cp   r30,r26
0003ba 07fb         cpc  r31,r27
0003bb 0768         cpc  r22,r24
0003bc 0779         cpc  r23,r25
0003bd fb97         bst  r25,7
0003be 9508         ret
                 _floor:
0003bf 940e 05ad 	CALL __PUTPARD2
0003c1 940e 059e 	CALL __GETD2S0
0003c3 940e 038e 	CALL _ftrunc
0003c5 940e 05a3 	CALL __PUTD1S0
0003c7 f419          brne __floor1
                 __floor0:
0003c8 940e 0599 	CALL __GETD1S0
0003ca c009      	RJMP _0x20A0001
                 __floor1:
0003cb f7e6          brtc __floor0
0003cc 940e 0599 	CALL __GETD1S0
                +
0003ce e0a0     +LDI R26 , LOW ( 0x3F800000 )
0003cf e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0003d0 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0003d1 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0003d2 940e 0482 	CALL __SUBF12
                 _0x20A0001:
0003d4 9624      	ADIW R28,4
0003d5 9508      	RET
                 
                 	.CSEG
                 _strcpyf:
0003d6 93ba      	ST   -Y,R27
0003d7 93aa      	ST   -Y,R26
0003d8 91e9          ld   r30,y+
0003d9 91f9          ld   r31,y+
0003da 91a9          ld   r26,y+
0003db 91b9          ld   r27,y+
0003dc 01cd          movw r24,r26
                 strcpyf0:
0003dd 9005      	lpm  r0,z+
0003de 920d          st   x+,r0
0003df 2000          tst  r0
0003e0 f7e1          brne strcpyf0
0003e1 01fc          movw r30,r24
0003e2 9508          ret
                 
                 	.DSEG
                 _t:
000182           	.BYTE 0x4
                 _r:
000186           	.BYTE 0x4
                 _s:
00018a           	.BYTE 0x3
                 __seed_G100:
00018d           	.BYTE 0x4
                 __base_y_G101:
000191           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 __ANEGF1:
0003e3 9730      	SBIW R30,0
0003e4 4060      	SBCI R22,0
0003e5 4070      	SBCI R23,0
0003e6 f009      	BREQ __ANEGF10
0003e7 5870      	SUBI R23,0x80
                 __ANEGF10:
0003e8 9508      	RET
                 
                 __ROUND_REPACK:
0003e9 2355      	TST  R21
0003ea f442      	BRPL __REPACK
0003eb 3850      	CPI  R21,0x80
0003ec f411      	BRNE __ROUND_REPACK0
0003ed ffe0      	SBRS R30,0
0003ee c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0003ef 9631      	ADIW R30,1
0003f0 1f69      	ADC  R22,R25
0003f1 1f79      	ADC  R23,R25
0003f2 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0003f3 e850      	LDI  R21,0x80
0003f4 2757      	EOR  R21,R23
0003f5 f411      	BRNE __REPACK0
0003f6 935f      	PUSH R21
0003f7 c0cf      	RJMP __ZERORES
                 __REPACK0:
0003f8 3f5f      	CPI  R21,0xFF
0003f9 f031      	BREQ __REPACK1
0003fa 0f66      	LSL  R22
0003fb 0c00      	LSL  R0
0003fc 9557      	ROR  R21
0003fd 9567      	ROR  R22
0003fe 2f75      	MOV  R23,R21
0003ff 9508      	RET
                 __REPACK1:
000400 935f      	PUSH R21
000401 2000      	TST  R0
000402 f00a      	BRMI __REPACK2
000403 c0cf      	RJMP __MAXRES
                 __REPACK2:
000404 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000405 e850      	LDI  R21,0x80
000406 2e19      	MOV  R1,R25
000407 2215      	AND  R1,R21
000408 0f88      	LSL  R24
000409 1f99      	ROL  R25
00040a 2795      	EOR  R25,R21
00040b 0f55      	LSL  R21
00040c 9587      	ROR  R24
                 
                 __UNPACK1:
00040d e850      	LDI  R21,0x80
00040e 2e07      	MOV  R0,R23
00040f 2205      	AND  R0,R21
000410 0f66      	LSL  R22
000411 1f77      	ROL  R23
000412 2775      	EOR  R23,R21
000413 0f55      	LSL  R21
000414 9567      	ROR  R22
000415 9508      	RET
                 
                 __CFD1U:
000416 9468      	SET
000417 c001      	RJMP __CFD1U0
                 __CFD1:
000418 94e8      	CLT
                 __CFD1U0:
000419 935f      	PUSH R21
00041a dff2      	RCALL __UNPACK1
00041b 3870      	CPI  R23,0x80
00041c f018      	BRLO __CFD10
00041d 3f7f      	CPI  R23,0xFF
00041e f408      	BRCC __CFD10
00041f c0a7      	RJMP __ZERORES
                 __CFD10:
000420 e156      	LDI  R21,22
000421 1b57      	SUB  R21,R23
000422 f4aa      	BRPL __CFD11
000423 9551      	NEG  R21
000424 3058      	CPI  R21,8
000425 f40e      	BRTC __CFD19
000426 3059      	CPI  R21,9
                 __CFD19:
000427 f030      	BRLO __CFD17
000428 efef      	SER  R30
000429 efff      	SER  R31
00042a ef6f      	SER  R22
00042b e77f      	LDI  R23,0x7F
00042c f977      	BLD  R23,7
00042d c01a      	RJMP __CFD15
                 __CFD17:
00042e 2777      	CLR  R23
00042f 2355      	TST  R21
000430 f0b9      	BREQ __CFD15
                 __CFD18:
000431 0fee      	LSL  R30
000432 1fff      	ROL  R31
000433 1f66      	ROL  R22
000434 1f77      	ROL  R23
000435 955a      	DEC  R21
000436 f7d1      	BRNE __CFD18
000437 c010      	RJMP __CFD15
                 __CFD11:
000438 2777      	CLR  R23
                 __CFD12:
000439 3058      	CPI  R21,8
00043a f028      	BRLO __CFD13
00043b 2fef      	MOV  R30,R31
00043c 2ff6      	MOV  R31,R22
00043d 2f67      	MOV  R22,R23
00043e 5058      	SUBI R21,8
00043f cff9      	RJMP __CFD12
                 __CFD13:
000440 2355      	TST  R21
000441 f031      	BREQ __CFD15
                 __CFD14:
000442 9576      	LSR  R23
000443 9567      	ROR  R22
000444 95f7      	ROR  R31
000445 95e7      	ROR  R30
000446 955a      	DEC  R21
000447 f7d1      	BRNE __CFD14
                 __CFD15:
000448 2000      	TST  R0
000449 f40a      	BRPL __CFD16
00044a d141      	RCALL __ANEGD1
                 __CFD16:
00044b 915f      	POP  R21
00044c 9508      	RET
                 
                 __CDF1U:
00044d 9468      	SET
00044e c001      	RJMP __CDF1U0
                 __CDF1:
00044f 94e8      	CLT
                 __CDF1U0:
000450 9730      	SBIW R30,0
000451 4060      	SBCI R22,0
000452 4070      	SBCI R23,0
000453 f0b1      	BREQ __CDF10
000454 2400      	CLR  R0
000455 f026      	BRTS __CDF11
000456 2377      	TST  R23
000457 f412      	BRPL __CDF11
000458 9400      	COM  R0
000459 d132      	RCALL __ANEGD1
                 __CDF11:
00045a 2e17      	MOV  R1,R23
00045b e17e      	LDI  R23,30
00045c 2011      	TST  R1
                 __CDF12:
00045d f032      	BRMI __CDF13
00045e 957a      	DEC  R23
00045f 0fee      	LSL  R30
000460 1fff      	ROL  R31
000461 1f66      	ROL  R22
000462 1c11      	ROL  R1
000463 cff9      	RJMP __CDF12
                 __CDF13:
000464 2fef      	MOV  R30,R31
000465 2ff6      	MOV  R31,R22
000466 2d61      	MOV  R22,R1
000467 935f      	PUSH R21
000468 df8a      	RCALL __REPACK
000469 915f      	POP  R21
                 __CDF10:
00046a 9508      	RET
                 
                 __SWAPACC:
00046b 934f      	PUSH R20
00046c 01af      	MOVW R20,R30
00046d 01fd      	MOVW R30,R26
00046e 01da      	MOVW R26,R20
00046f 01ab      	MOVW R20,R22
000470 01bc      	MOVW R22,R24
000471 01ca      	MOVW R24,R20
000472 2d40      	MOV  R20,R0
000473 2c01      	MOV  R0,R1
000474 2e14      	MOV  R1,R20
000475 914f      	POP  R20
000476 9508      	RET
                 
                 __UADD12:
000477 0fea      	ADD  R30,R26
000478 1ffb      	ADC  R31,R27
000479 1f68      	ADC  R22,R24
00047a 9508      	RET
                 
                 __NEGMAN1:
00047b 95e0      	COM  R30
00047c 95f0      	COM  R31
00047d 9560      	COM  R22
00047e 5fef      	SUBI R30,-1
00047f 4fff      	SBCI R31,-1
000480 4f6f      	SBCI R22,-1
000481 9508      	RET
                 
                 __SUBF12:
000482 935f      	PUSH R21
000483 df81      	RCALL __UNPACK
000484 3890      	CPI  R25,0x80
000485 f171      	BREQ __ADDF129
000486 e850      	LDI  R21,0x80
000487 2615      	EOR  R1,R21
                 
000488 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000489 935f      	PUSH R21
00048a df7a      	RCALL __UNPACK
00048b 3890      	CPI  R25,0x80
00048c f139      	BREQ __ADDF129
                 
                 __ADDF120:
00048d 3870      	CPI  R23,0x80
00048e f121      	BREQ __ADDF128
                 __ADDF121:
00048f 2f57      	MOV  R21,R23
000490 1b59      	SUB  R21,R25
000491 f12b      	BRVS __ADDF1211
000492 f412      	BRPL __ADDF122
000493 dfd7      	RCALL __SWAPACC
000494 cffa      	RJMP __ADDF121
                 __ADDF122:
000495 3158      	CPI  R21,24
000496 f018      	BRLO __ADDF123
000497 27aa      	CLR  R26
000498 27bb      	CLR  R27
000499 2788      	CLR  R24
                 __ADDF123:
00049a 3058      	CPI  R21,8
00049b f028      	BRLO __ADDF124
00049c 2fab      	MOV  R26,R27
00049d 2fb8      	MOV  R27,R24
00049e 2788      	CLR  R24
00049f 5058      	SUBI R21,8
0004a0 cff9      	RJMP __ADDF123
                 __ADDF124:
0004a1 2355      	TST  R21
0004a2 f029      	BREQ __ADDF126
                 __ADDF125:
0004a3 9586      	LSR  R24
0004a4 95b7      	ROR  R27
0004a5 95a7      	ROR  R26
0004a6 955a      	DEC  R21
0004a7 f7d9      	BRNE __ADDF125
                 __ADDF126:
0004a8 2d50      	MOV  R21,R0
0004a9 2551      	EOR  R21,R1
0004aa f072      	BRMI __ADDF127
0004ab dfcb      	RCALL __UADD12
0004ac f438      	BRCC __ADDF129
0004ad 9567      	ROR  R22
0004ae 95f7      	ROR  R31
0004af 95e7      	ROR  R30
0004b0 9573      	INC  R23
0004b1 f413      	BRVC __ADDF129
0004b2 c020      	RJMP __MAXRES
                 __ADDF128:
0004b3 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0004b4 df3e      	RCALL __REPACK
0004b5 915f      	POP  R21
0004b6 9508      	RET
                 __ADDF1211:
0004b7 f7d8      	BRCC __ADDF128
0004b8 cffb      	RJMP __ADDF129
                 __ADDF127:
0004b9 1bea      	SUB  R30,R26
0004ba 0bfb      	SBC  R31,R27
0004bb 0b68      	SBC  R22,R24
0004bc f051      	BREQ __ZERORES
0004bd f410      	BRCC __ADDF1210
0004be 9400      	COM  R0
0004bf dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0004c0 2366      	TST  R22
0004c1 f392      	BRMI __ADDF129
0004c2 0fee      	LSL  R30
0004c3 1fff      	ROL  R31
0004c4 1f66      	ROL  R22
0004c5 957a      	DEC  R23
0004c6 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0004c7 27ee      	CLR  R30
0004c8 27ff      	CLR  R31
0004c9 2766      	CLR  R22
0004ca 2777      	CLR  R23
0004cb 915f      	POP  R21
0004cc 9508      	RET
                 
                 __MINRES:
0004cd efef      	SER  R30
0004ce efff      	SER  R31
0004cf e76f      	LDI  R22,0x7F
0004d0 ef7f      	SER  R23
0004d1 915f      	POP  R21
0004d2 9508      	RET
                 
                 __MAXRES:
0004d3 efef      	SER  R30
0004d4 efff      	SER  R31
0004d5 e76f      	LDI  R22,0x7F
0004d6 e77f      	LDI  R23,0x7F
0004d7 915f      	POP  R21
0004d8 9508      	RET
                 
                 __MULF12:
0004d9 935f      	PUSH R21
0004da df2a      	RCALL __UNPACK
0004db 3870      	CPI  R23,0x80
0004dc f351      	BREQ __ZERORES
0004dd 3890      	CPI  R25,0x80
0004de f341      	BREQ __ZERORES
0004df 2401      	EOR  R0,R1
0004e0 9408      	SEC
0004e1 1f79      	ADC  R23,R25
0004e2 f423      	BRVC __MULF124
0004e3 f31c      	BRLT __ZERORES
                 __MULF125:
0004e4 2000      	TST  R0
0004e5 f33a      	BRMI __MINRES
0004e6 cfec      	RJMP __MAXRES
                 __MULF124:
0004e7 920f      	PUSH R0
0004e8 931f      	PUSH R17
0004e9 932f      	PUSH R18
0004ea 933f      	PUSH R19
0004eb 934f      	PUSH R20
0004ec 2711      	CLR  R17
0004ed 2722      	CLR  R18
0004ee 2799      	CLR  R25
0004ef 9f68      	MUL  R22,R24
0004f0 01a0      	MOVW R20,R0
0004f1 9f8f      	MUL  R24,R31
0004f2 2d30      	MOV  R19,R0
0004f3 0d41      	ADD  R20,R1
0004f4 1f59      	ADC  R21,R25
0004f5 9f6b      	MUL  R22,R27
0004f6 0d30      	ADD  R19,R0
0004f7 1d41      	ADC  R20,R1
0004f8 1f59      	ADC  R21,R25
0004f9 9f8e      	MUL  R24,R30
0004fa d027      	RCALL __MULF126
0004fb 9fbf      	MUL  R27,R31
0004fc d025      	RCALL __MULF126
0004fd 9f6a      	MUL  R22,R26
0004fe d023      	RCALL __MULF126
0004ff 9fbe      	MUL  R27,R30
000500 d01d      	RCALL __MULF127
000501 9faf      	MUL  R26,R31
000502 d01b      	RCALL __MULF127
000503 9fae      	MUL  R26,R30
000504 0d11      	ADD  R17,R1
000505 1f29      	ADC  R18,R25
000506 1f39      	ADC  R19,R25
000507 1f49      	ADC  R20,R25
000508 1f59      	ADC  R21,R25
000509 2fe3      	MOV  R30,R19
00050a 2ff4      	MOV  R31,R20
00050b 2f65      	MOV  R22,R21
00050c 2f52      	MOV  R21,R18
00050d 914f      	POP  R20
00050e 913f      	POP  R19
00050f 912f      	POP  R18
000510 911f      	POP  R17
000511 900f      	POP  R0
000512 2366      	TST  R22
000513 f02a      	BRMI __MULF122
000514 0f55      	LSL  R21
000515 1fee      	ROL  R30
000516 1fff      	ROL  R31
000517 1f66      	ROL  R22
000518 c002      	RJMP __MULF123
                 __MULF122:
000519 9573      	INC  R23
00051a f24b      	BRVS __MULF125
                 __MULF123:
00051b decd      	RCALL __ROUND_REPACK
00051c 915f      	POP  R21
00051d 9508      	RET
                 
                 __MULF127:
00051e 0d10      	ADD  R17,R0
00051f 1d21      	ADC  R18,R1
000520 1f39      	ADC  R19,R25
000521 c002      	RJMP __MULF128
                 __MULF126:
000522 0d20      	ADD  R18,R0
000523 1d31      	ADC  R19,R1
                 __MULF128:
000524 1f49      	ADC  R20,R25
000525 1f59      	ADC  R21,R25
000526 9508      	RET
                 
                 __DIVF21:
000527 935f      	PUSH R21
000528 dedc      	RCALL __UNPACK
000529 3870      	CPI  R23,0x80
00052a f421      	BRNE __DIVF210
00052b 2011      	TST  R1
                 __DIVF211:
00052c f40a      	BRPL __DIVF219
00052d cf9f      	RJMP __MINRES
                 __DIVF219:
00052e cfa4      	RJMP __MAXRES
                 __DIVF210:
00052f 3890      	CPI  R25,0x80
000530 f409      	BRNE __DIVF218
                 __DIVF217:
000531 cf95      	RJMP __ZERORES
                 __DIVF218:
000532 2401      	EOR  R0,R1
000533 9408      	SEC
000534 0b97      	SBC  R25,R23
000535 f41b      	BRVC __DIVF216
000536 f3d4      	BRLT __DIVF217
000537 2000      	TST  R0
000538 cff3      	RJMP __DIVF211
                 __DIVF216:
000539 2f79      	MOV  R23,R25
00053a 931f      	PUSH R17
00053b 932f      	PUSH R18
00053c 933f      	PUSH R19
00053d 934f      	PUSH R20
00053e 2411      	CLR  R1
00053f 2711      	CLR  R17
000540 2722      	CLR  R18
000541 2733      	CLR  R19
000542 2744      	CLR  R20
000543 2755      	CLR  R21
000544 e290      	LDI  R25,32
                 __DIVF212:
000545 17ae      	CP   R26,R30
000546 07bf      	CPC  R27,R31
000547 0786      	CPC  R24,R22
000548 0741      	CPC  R20,R17
000549 f030      	BRLO __DIVF213
00054a 1bae      	SUB  R26,R30
00054b 0bbf      	SBC  R27,R31
00054c 0b86      	SBC  R24,R22
00054d 0b41      	SBC  R20,R17
00054e 9408      	SEC
00054f c001      	RJMP __DIVF214
                 __DIVF213:
000550 9488      	CLC
                 __DIVF214:
000551 1f55      	ROL  R21
000552 1f22      	ROL  R18
000553 1f33      	ROL  R19
000554 1c11      	ROL  R1
000555 1faa      	ROL  R26
000556 1fbb      	ROL  R27
000557 1f88      	ROL  R24
000558 1f44      	ROL  R20
000559 959a      	DEC  R25
00055a f751      	BRNE __DIVF212
00055b 01f9      	MOVW R30,R18
00055c 2d61      	MOV  R22,R1
00055d 914f      	POP  R20
00055e 913f      	POP  R19
00055f 912f      	POP  R18
000560 911f      	POP  R17
000561 2366      	TST  R22
000562 f032      	BRMI __DIVF215
000563 0f55      	LSL  R21
000564 1fee      	ROL  R30
000565 1fff      	ROL  R31
000566 1f66      	ROL  R22
000567 957a      	DEC  R23
000568 f243      	BRVS __DIVF217
                 __DIVF215:
000569 de7f      	RCALL __ROUND_REPACK
00056a 915f      	POP  R21
00056b 9508      	RET
                 
                 __CMPF12:
00056c 2399      	TST  R25
00056d f09a      	BRMI __CMPF120
00056e 2377      	TST  R23
00056f f042      	BRMI __CMPF121
000570 1797      	CP   R25,R23
000571 f048      	BRLO __CMPF122
000572 f429      	BRNE __CMPF121
000573 17ae      	CP   R26,R30
000574 07bf      	CPC  R27,R31
000575 0786      	CPC  R24,R22
000576 f020      	BRLO __CMPF122
000577 f031      	BREQ __CMPF123
                 __CMPF121:
000578 9498      	CLZ
000579 9488      	CLC
00057a 9508      	RET
                 __CMPF122:
00057b 9498      	CLZ
00057c 9408      	SEC
00057d 9508      	RET
                 __CMPF123:
00057e 9418      	SEZ
00057f 9488      	CLC
000580 9508      	RET
                 __CMPF120:
000581 2377      	TST  R23
000582 f7c2      	BRPL __CMPF122
000583 1797      	CP   R25,R23
000584 f398      	BRLO __CMPF121
000585 f7a9      	BRNE __CMPF122
000586 17ea      	CP   R30,R26
000587 07fb      	CPC  R31,R27
000588 0768      	CPC  R22,R24
000589 f388      	BRLO __CMPF122
00058a f399      	BREQ __CMPF123
00058b cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
00058c 95f0      	COM  R31
00058d 9560      	COM  R22
00058e 9570      	COM  R23
00058f 95e1      	NEG  R30
000590 4fff      	SBCI R31,-1
000591 4f6f      	SBCI R22,-1
000592 4f7f      	SBCI R23,-1
000593 9508      	RET
                 
                 __CWD1:
000594 2f6f      	MOV  R22,R31
000595 0f66      	ADD  R22,R22
000596 0b66      	SBC  R22,R22
000597 2f76      	MOV  R23,R22
000598 9508      	RET
                 
                 __GETD1S0:
000599 81e8      	LD   R30,Y
00059a 81f9      	LDD  R31,Y+1
00059b 816a      	LDD  R22,Y+2
00059c 817b      	LDD  R23,Y+3
00059d 9508      	RET
                 
                 __GETD2S0:
00059e 81a8      	LD   R26,Y
00059f 81b9      	LDD  R27,Y+1
0005a0 818a      	LDD  R24,Y+2
0005a1 819b      	LDD  R25,Y+3
0005a2 9508      	RET
                 
                 __PUTD1S0:
0005a3 83e8      	ST   Y,R30
0005a4 83f9      	STD  Y+1,R31
0005a5 836a      	STD  Y+2,R22
0005a6 837b      	STD  Y+3,R23
0005a7 9508      	RET
                 
                 __PUTPARD1:
0005a8 937a      	ST   -Y,R23
0005a9 936a      	ST   -Y,R22
0005aa 93fa      	ST   -Y,R31
0005ab 93ea      	ST   -Y,R30
0005ac 9508      	RET
                 
                 __PUTPARD2:
0005ad 939a      	ST   -Y,R25
0005ae 938a      	ST   -Y,R24
0005af 93ba      	ST   -Y,R27
0005b0 93aa      	ST   -Y,R26
0005b1 9508      	RET
                 
                 __SWAPD12:
0005b2 2e18      	MOV  R1,R24
0005b3 2f86      	MOV  R24,R22
0005b4 2d61      	MOV  R22,R1
0005b5 2e19      	MOV  R1,R25
0005b6 2f97      	MOV  R25,R23
0005b7 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0005b8 2e1b      	MOV  R1,R27
0005b9 2fbf      	MOV  R27,R31
0005ba 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0005bb 2e1a      	MOV  R1,R26
0005bc 2fae      	MOV  R26,R30
0005bd 2de1      	MOV  R30,R1
0005be 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  33 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   8 r17:  25 r18:  12 r19:  12 r20:  22 r21:  63 r22:  95 r23:  90 
r24:  59 r25:  63 r26: 148 r27:  79 r28:   7 r29:   1 r30: 195 r31:  94 
x  :  11 y  : 251 z  :   9 
Registers used: 24 out of 35 (68.6%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   8 
adiw  :  11 and   :   5 andi  :   6 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   6 brcs  :   2 break :   0 breq  :  23 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  14 
brlt  :   2 brmi  :   9 brne  :  23 brpl  :   8 brsh  :   2 brtc  :   2 
brts  :   2 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  :  75 
cbi   :  11 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  33 cls   :   0 clt   :   4 clv   :   0 clz   :   2 com   :   8 
cp    :   7 cpc   :  12 cpi   :  28 cpse  :   0 dec   :  10 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :  12 inc   :   4 jmp   :  27 ld    :  43 ldd   :  95 ldi   : 135 
lds   :  32 lpm   :   8 lsl   :  12 lsr   :   3 mov   :  53 movw  :  15 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   2 out   :  20 pop   :  20 push  :  20 rcall :  43 ret   :  40 
reti  :   2 rjmp  :  45 rol   :  24 ror   :  15 sbc   :   7 sbci  :  10 
sbi   :  12 sbic  :   0 sbis  :   1 sbiw  :  12 sbr   :   2 sbrc  :   2 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   3 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  69 std   :  56 sts   :  14 sub   :   4 subi  :  15 swap  :   2 
tst   :  19 wdr   :   0 
Instructions used: 79 out of 116 (68.1%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000b7e   2858     84   2942   16384  18.0%
[.dseg] 0x000060 0x000195      0     53     53    1119   4.7%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 5 warnings
